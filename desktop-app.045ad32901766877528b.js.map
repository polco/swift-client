{"version":3,"sources":["webpack:///./src/desktop/app.tsx","webpack:///./src/desktop/components/Sidebar.tsx","webpack:///./src/desktop/views/Main.tsx","webpack:///./src/desktop/views/tabs.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/Store.ts","webpack:///./src/shared/actions/Action.ts","webpack:///./src/shared/actions/CreateDoc.ts","webpack:///./src/shared/actions/CreateSession.ts","webpack:///./src/shared/actions/UpdateDoc.ts","webpack:///./src/shared/actions/UpdateUserName.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SessionItem.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/components/Tabs.tsx","webpack:///./src/shared/components/TextField.tsx","webpack:///./src/shared/context.ts","webpack:///./src/shared/models/Doc.ts","webpack:///./src/shared/models/Item.ts","webpack:///./src/shared/models/Session.ts","webpack:///./src/shared/models/User.ts","webpack:///./src/shared/models/createSeq.ts","webpack:///./src/shared/models/docClass.ts","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts","webpack:///./src/shared/views/CreateSession.tsx","webpack:///./src/shared/views/JoinSession.tsx","webpack:///./src/shared/views/SessionViewer.tsx","webpack:///./src/shared/views/Sessions.tsx"],"names":["Mobx","__webpack_require__","React","ReactDOM","Main_1","useStrict","localStorage","setItem","div","document","getElementById","classList","add","render","createElement","default","mobx_react_1","Button_1","context_1","Sidebar","Component","[object Object]","this","onSessionSelect","e","props","selectSession","sessionId","store","context","currentSessionId","className","userName","sessionList","length","map","session","getSession","key","onTap","name","contextTypes","__decorate","observer","exports","mobx_react_devtools_1","configureDevtool","logEnabled","Store_1","CreateSession_1","JoinSession_1","Sessions_1","SessionViewer_1","tabs_1","Sidebar_1","Tabs_1","ContentClasses","sessions","create","join","Main","PureComponent","super","selectTab","tabId","setState","navigateToSession","navigateToTab","state","ContentClass","tabs","TabsInfo","categoryIndex","currentTabId","onTabSelect","hideIndicator","childContextTypes","TabMap","Label","debug","events_1","SocketIO","log","EventEmitter","isConnecting","socket","transports","autoConnect","on","clientId","data","emit","error","connected","Promise","resolve","reject","connect","once","removeListener","disconnect","remoteClientId","ICustomEmitter","type","cb","prototype","call","value","gatewayClient","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","fromClientId","msg","__awaiter","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","setupDataChannel","onSendChannelClose","onSendChannelError","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","onerror","createOffer","onmessage","event","JSON","parse","stringify","crdt_1","mobx_1","dcstream","uuid","GatewayClient_1","CreateDoc_1","UpdateDoc_1","User_1","RTCClient_1","UAParser","Store","docs","RTCClients","crdts","updating","pendingSeqActions","userIdPerSessionId","onJoin","createCRDT","client","setupClient","dc","stream","pipe","createStream","onSessionUser","initiateConnection","window","res","getResult","os","browser","forEach","action","docId","doc","id","crdt","Doc","userId","user","addDoc","row","get","executeAction","changes","toJSON","openSession","closeSession","joinSession","dispose","observe","includes","itemId","sideEffect","run","observable","execute","docClass_1","Session_1","Action_1","instantiate","push","applyPendingSeqAction","ownerId","getDoc","getUser","ButtonPlugin_1","Factory_1","onDoubleTap","onRef","elementRef","button","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","Pdiv","SessionItem","enterSession","onEnterSession","count","itemIds","userIds","isYou","Instascan","videoElt","scan","Camera","getCameras","then","cameras","Error","scanner","start","stop","Scanner","video","mirror","addListener","content","onSessionScanned","ref","TabButton","INDI_WIDTH","Tabs","indicator","tabsRef","tabWidth","labelUpdated","positionIndicator","clientWidth","fullWidth","passedCurrentTab","beforeWidth","width","transform","onLabelUpdate","category","i","onUpdate","defaultProps","mainDiv","input","onChange","onMainRef","onBlur","generateClassName","onInputRef","hasContent","blur","label","placeholder","PropTypes","object","linked","docPrototype","property","atom","Atom","getter","reportObserved","__data","setter","val","set","reportChanged","Object","defineProperty","toModel","changed","assign","obj","Doc_1","Item","creatorId","creationDate","itemContent","initCRDT","createDoc","createSeq_1","Session","User","list","rowToValue","seq","createSeq","index","indexOf","v","splice","Item_1","docClass","item","spur_events_1","interactionLock_1","Plugin_1","onLock","DOMNode","current","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","Math","max","coords","repeatTap","releaseLock","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","startTap","x","y","getBoundingClientRect","SpurEvent","press","requestLockOn","longTap","now","Date","tapDiff","preventDefault","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","len","listener","lockNodes","lockContainerNodes","node","parentNode","container","parent","TextField_1","CreateSession","createSession","sessionNameField","getValue","validate","onSubmit","SessionScanner_1","JoinSession","isScanning","stopScanning","startScanning","validateSession","formValidate","QRCode","SessionViewer","closingTimeout","addText","toISOString","validateAddText","goBack","Fragment","size","getItem","UpdateUserName_1","SessionItem_1","Sessions","updateUserName","clientNameField","setValue","userNameValidate"],"mappings":"wHAAA,MAAAA,EAAAC,EAAA,0CACAC,EAAAD,EAAA,iCACAE,EAAAF,EAAA,qCACAA,EAAA,iCACA,MAAAG,EAAAH,EAAA,gCAEAD,EAAKK,WAAU,GAEfC,aAAaC,QAAQ,QAAS,UAE9B,MAAMC,EAAMC,SAASC,eAAe,SACpCF,EAAKG,UAAUC,IAAI,WACnBT,EAASU,OAAOX,EAAAY,cAACV,EAAAW,QAAI,MAAKP,khBCZ1B,MAAAQ,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACAiB,EAAAjB,EAAA,2BAEAA,EAAA,yCAQA,IAAMkB,gBAAgBjB,EAAMkB,UAD5BC,kCAKSC,KAAAC,gBAAkB,CAACC,IAC1BF,KAAKG,MAAMC,cAAcF,EAAEC,MAAME,aAG3BN,SACN,MAAMO,EAAQN,KAAKO,QAAQD,MACrBE,EAAmBR,KAAKG,MAAME,UAEpC,OACCzB,EAAAY,cAAA,OAAKiB,UAAU,WACd7B,EAAAY,cAAA,OAAKiB,UAAU,iBACd7B,EAAAY,cAAA,OAAKiB,UAAU,kBAAgB,gBAG/B7B,EAAAY,cAAA,OAAKiB,UAAU,sBACZH,EAAMI,WAGRJ,EAAMK,YAAYC,OACnBhC,EAAAY,cAAA,OAAKiB,UAAU,qBACd7B,EAAAY,cAAA,OAAKiB,UAAU,kBAAgB,aAG/B7B,EAAAY,cAAA,OAAKiB,UAAU,yBAEdH,EAAMK,YAAYE,IAAIR,IACrB,MAAMS,EAAUR,EAAMS,WAAWV,GAEjC,OACCzB,EAAAY,cAACG,EAAAF,SACAuB,IAAMX,EACNA,UAAYA,EACZY,MAAQjB,KAAKC,gBACbQ,UAAY,oBAAsBD,IAAqBH,EAAY,2BAA6B,KAE9FS,EAAQI,UAOd,QA5CSrB,EAAAsB,aAAevB,EAAAuB,aAFxBtB,EAAOuB,GADZ1B,EAAA2B,UACKxB,GAoDNyB,EAAA7B,QAAeI,gKClEf,MAAA0B,EAAA5C,EAAA,+CACAC,EAAAD,EAAA,iCAEA4C,EAAAC,kBACCC,YAAY,IAGb,MAAA7B,EAAAjB,EAAA,2BACA+C,EAAA/C,EAAA,yBAEAgD,EAAAhD,EAAA,wCACAiD,EAAAjD,EAAA,sCACAkD,EAAAlD,EAAA,mCACAmD,EAAAnD,EAAA,wCAGAoD,EAAApD,EAAA,gCAEAqD,EAAArD,EAAA,wCACAsD,EAAAtD,EAAA,oCAEAA,EAAA,iCAQA,MAAMuD,GACLC,SAAUN,EAAApC,QACV2C,OAAQT,EAAAlC,QACR4C,KAAMT,EAAAnC,eAGP6C,UAAmB1D,EAAM2D,cAIxBxC,YAAYI,EAAcI,GACzBiC,MAAMrC,EAAOI,GAUNP,KAAAyC,UAAY,CAACC,IACpB1C,KAAK2C,UAAWD,QAAOrC,UAAW,SAG3BL,KAAA4C,kBAAoB,CAACvC,IAC5BL,KAAK2C,UAAWD,MAAO,WAAYrC,gBAG5BL,KAAA6C,cAAgB,CAACH,IACxB1C,KAAK2C,UAAWD,QAAOrC,UAAW,SAjBlCL,KAAKM,MAAQ,IAAIoB,EAAAjC,QACjBO,KAAK8C,OAAUJ,MAAO,WAAYrC,UAAW,MAGvCN,kBACN,OAASO,MAAON,KAAKM,OAefP,SACN,MAAM2C,MAAEA,EAAKrC,UAAEA,GAAcL,KAAK8C,MAC5BC,EAAe1C,EAAYyB,EAAArC,QAAgByC,EAAeQ,GAEhE,OACC9D,EAAAY,cAAA,OAAKiB,UAAU,QACd7B,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAAA,OAAKiB,UAAU,eAAa,SAG5B7B,EAAAY,cAACyC,EAAAxC,SACAuD,KAAOjB,EAAAkB,SACPC,cAAgB,EAChBC,aAAeT,EACfU,YAAcpD,KAAKyC,UACnBY,gBAAkBhD,KAGpBzB,EAAAY,cAAA,OAAKiB,UAAU,cACd7B,EAAAY,cAACwC,EAAAvC,SAAQW,cAAgBJ,KAAK4C,kBAAoBvC,UAAYA,IAC9DzB,EAAAY,cAAA,OAAKiB,UAAU,uBACd7B,EAAAY,cAACuD,GACAH,kBAAoB5C,KAAK4C,kBACzBC,cAAgB7C,KAAK6C,cACrBxC,UAAYA,OAIb,IArDSiC,EAAAgB,kBAAoB1D,EAAAuB,aA2DnCG,EAAA7B,QAAe6C,gHC5FFhB,EAAAiC,QACZpB,SAAU,IAAM,cAChBC,OAAQ,IAAM,kBACdC,KAAM,IAAM,iBAIAf,EAAA2B,WADW,WAAY,SAAU,QACfpC,IAAI6B,KAAYA,QAAOc,MAAOlC,EAAAiC,OAAOb,qZCXpE,MAAAe,EAAA9E,EAAA,+CACA+E,EAAA/E,EAAA,mCACAgF,EAAAhF,EAAA,gDACMiF,EAAMH,EAAM,uBA8ElBnC,EAAA7B,sBA5E4BiE,EAAAG,aAK3B9D,cACCyC,QAJOxC,KAAA8D,cAAe,EAKtB9D,KAAK+D,OAASJ,EAAS,uCAAwBK,YAAa,aAAcC,aAAa,IAEvFjE,KAAK+D,OAAOG,GAAG,OAAQ,CAACC,EAAkBC,KACzCR,EAAI,gBAAiBQ,GACrBpE,KAAKqE,KAAK,OAAQF,EAAUC,KAE7BpE,KAAK+D,OAAOG,GAAG,QAAUI,GAAeV,EAAIU,IAC5CtE,KAAK+D,OAAOG,GAAG,aAAc,KAC5BN,EAAI,iCACJ5D,KAAKqE,KAAK,kBAEXrE,KAAK+D,OAAOG,GAAG,OAAQ,CAAC7D,EAAmB8D,KAC1CnE,KAAKqE,KAAK,OAAQhE,EAAW8D,KAE9BnE,KAAK+D,OAAOG,GAAG,gBAAiB,CAAC7D,EAAmB8D,KACnDnE,KAAKqE,KAAK,gBAAiBhE,EAAW8D,KAIhCpE,UACP,OAAIC,KAAK8D,cAAgB9D,KAAK+D,OAAOQ,UAAoBC,QAAQC,WACjEzE,KAAK8D,cAAe,EAEb,IAAIU,QAAQ,CAACC,EAASC,KAC5B1E,KAAK+D,OAAOY,UAEZ3E,KAAK+D,OAAOa,KAAK,UAAW,KAC3B5E,KAAK8D,cAAe,EACpBF,EAAI,4BACJ5D,KAAK+D,OAAOc,eAAe,iBAC3B7E,KAAK+D,OAAOc,eAAe,mBAC3BJ,MAEDzE,KAAK+D,OAAOa,KAAK,gBAAiBF,GAClC1E,KAAK+D,OAAOa,KAAK,kBAAmBF,MAIzB3E,YAAYM,2CACnBL,KAAK+D,OAAOQ,kBAAmBvE,KAAK2E,WACzC3E,KAAK+D,OAAOM,KAAK,cAAehE,KAGpBN,aAAaM,2CACpBL,KAAK+D,OAAOQ,kBAAmBvE,KAAK2E,WACzC3E,KAAK+D,OAAOM,KAAK,eAAgBhE,GACjCL,KAAK8E,eAGO/E,YAAYM,2CACnBL,KAAK+D,OAAOQ,kBAAmBvE,KAAK2E,WACzC3E,KAAK+D,OAAOM,KAAK,OAAQhE,KAGlBN,aACFC,KAAK+D,OAAOQ,YACjBvE,KAAK8D,cAAe,EACpB9D,KAAK+D,OAAOe,aACZ9E,KAAK+D,OAAOc,eAAe,iBAC3B7E,KAAK+D,OAAOc,eAAe,oBAGf9E,KAAKgF,EAAwBX,2CACpCpE,KAAK+D,OAAOQ,kBAAmBvE,KAAK2E,WACzCf,EAAI,UAAWQ,EAAM,KAAMW,GAC3B/E,KAAK+D,OAAOM,KAAK,OAAQU,EAAgBX,iZC7E3C,MAAAX,EAAA9E,EAAA,+CACA+E,EAAA/E,EAAA,mCAKMiF,EAAMH,EAAM,yBAelBuB,UAAsCtB,EAAAG,aAC9B9D,GAA6BkF,EAASC,GAE5C,OADAxB,EAAAG,aAAasB,UAAUjB,GAAGkB,KAAKpF,KAAMiF,EAAMC,GACpClF,KAGDD,KAA+BkF,EAASI,GAC9C,OAAO3B,EAAAG,aAAasB,UAAUd,KAAKe,KAAKpF,KAAMiF,EAAMI,IA+GtD/D,EAAA7B,sBA1GwBuF,EAQvBjF,YAAYgF,EAAwBO,GACnC9C,QANOxC,KAAAuF,YAAqC,KAEtCvF,KAAAwF,iBAAkB,EAClBxF,KAAAyF,gBAAiB,EA8BjBzF,KAAA0F,iBAAmB,EAAOC,EAAsBC,IAAgBC,EAAA7F,UAAA,qBACtE,GAAI2F,IAAiB3F,KAAK+E,eAC1B,GAAiB,UAAba,EAAIX,KAAkB,CACzBjF,KAAK8F,GAAGC,qBAAqB,IAAIC,sBAAsBJ,EAAIK,qBAC3D,MAAMA,QAA2BjG,KAAK8F,GAAGI,eACzClG,KAAK8F,GAAGK,oBAAoBF,GAC5BjG,KAAKsF,cAAcc,KAAKpG,KAAK+E,gBAAkBE,KAAM,SAAUgB,4BACzD,GAAiB,WAAbL,EAAIX,KACdjF,KAAK8F,GAAGC,qBAAqBH,EAAIK,yBAC3B,GAAiB,cAAbL,EAAIX,KAAsB,CACpC,MAAMoB,EAAY,IAAIC,iBACrBC,cAAeX,EAAIS,UAAUE,cAC7BF,UAAWT,EAAIS,UAAUA,YAE1BrG,KAAK8F,GAAGU,gBAAgBH,OAIlBrG,KAAAyG,kBAAoB,CAACvG,IAC5B0D,EAAI,uBACJ5D,KAAK0G,qBAGE1G,KAAA2G,mBAAqB,CAACzG,IAC7B0D,EAAI,qBAAsB1D,KAGnBF,KAAA4G,mBAAqB,CAAC1G,IAC7B0D,EAAI,qBAAsB1D,KAGnBF,KAAA6G,cAAgB,CAAC3G,IACxB0D,EAAI,uBACJ5D,KAAKuF,YAAcrF,EAAE4G,QACrB9G,KAAK0G,qBAsBE1G,KAAA+G,oBAAsB,CAAC7G,IACzBA,EAAEmG,WAEPrG,KAAKsF,cAAcc,KAAKpG,KAAK+E,gBAC5BE,KAAM,YACNoB,WACCE,cAAerG,EAAEmG,UAAUE,cAC3BS,OAAQ9G,EAAEmG,UAAUW,OACpBX,UAAWnG,EAAEmG,UAAUA,eAzFzBrG,KAAKsF,cAAgBA,EACrBtF,KAAKsF,cAAcpB,GAAG,OAAQlE,KAAK0F,kBACnC1F,KAAK+E,eAAiBA,EAEtB/E,KAAK8F,GAAK,IAAImB,mBACbC,aAAeC,KAAM,mCAEtBnH,KAAK8F,GAAGsB,eAAiBpH,KAAK+G,oBAC9B/G,KAAK8F,GAAGuB,cAAgBrH,KAAK6G,cAGjB9G,6DACZ6D,EAAI,sBACJ5D,KAAKuF,YAAcvF,KAAK8F,GAAGwB,kBAAkB,2BAA6BtH,KAAK+E,gBAC/E/E,KAAKuF,YAAYgC,OAASvH,KAAKyG,kBAC/BzG,KAAKuF,YAAYiC,QAAUxH,KAAK2G,mBAChC3G,KAAKuF,YAAYkC,QAAUzH,KAAK4G,mBAEhChD,EAAI,gBACJ,MAAMqC,QAA2BjG,KAAK8F,GAAG4B,cACzC9D,EAAI,uBACE5D,KAAK8F,GAAGK,oBAAoBF,GAClCjG,KAAKsF,cAAcc,KAAKpG,KAAK+E,gBAAkBE,KAAM,QAASgB,yBAwCvDlG,mBACPC,KAAKuF,YAAaoC,UAAY,CAACC,IAC9B,MAAM3C,KAAEA,EAAIb,KAAEA,GAASyD,KAAKC,MAAMF,EAAMxD,MACxCpE,KAAKqE,KAAKY,EAAMb,KAEjBpE,KAAKsF,cAAcT,eAAe,OAAQ7E,KAAK0F,kBAC/C1F,KAAKqE,KAAK,UAAWrE,KAAKuF,aAGpBxF,iBAAmB,OAAOC,KAAKuF,YAE/BxF,YAAsCkF,EAASb,GACjDpE,KAAKuF,YACRvF,KAAKuF,YAAYa,KAAKyB,KAAKE,WAAY9C,OAAMb,UAE7CR,EAAI,mgBCzHP,MAAAoE,EAAArJ,EAAA,gCACA8E,EAAA9E,EAAA,+CACAsJ,EAAAtJ,EAAA,0CACAuJ,EAAAvJ,EAAA,wCACAwJ,EAAAxJ,EAAA,6BAEAyJ,EAAAzJ,EAAA,iCAGA0J,EAAA1J,EAAA,qCACA2J,EAAA3J,EAAA,qCAKA4J,EAAA5J,EAAA,+BAEA6J,EAAA7J,EAAA,6BACA8J,EAAA9J,EAAA,gDAEMiF,EAAMH,EAAM,yBASlBiF,EAeC3I,cAdmBC,KAAAW,eACXX,KAAA2I,QAIA3I,KAAA4I,cAED5I,KAAA6I,SACA7I,KAAA8I,YAEA9I,KAAA+I,qBAEA/I,KAAAgJ,sBA6BChJ,KAAAiJ,OAAS,EAAC5I,EAAmB8D,KAGpC,GAFKnE,KAAK6I,MAAMxI,IAAcL,KAAKkJ,WAAW7I,GAE1CL,KAAK4I,WAAWzE,GAAa,OACjC,MAAMgF,EAASnJ,KAAK4I,WAAWzE,GAAY,IAAIqE,EAAA/I,QAAU0E,EAAUnE,KAAKsF,eACxEtF,KAAKoJ,YAAYD,GACjBA,EAAOjF,GAAG,UAAYmF,IACrB,MAAMC,EAASpB,EAASmB,GACxBC,EAAOC,KAAKvJ,KAAK6I,MAAMxI,GAAWmJ,gBAAgBD,KAAKD,OAIjDtJ,KAAAyJ,cAAgB,EAACpJ,EAAmB8D,KAG3C,GAFKnE,KAAK6I,MAAMxI,IAAcL,KAAKkJ,WAAW7I,GAE1CL,KAAK4I,WAAWzE,GAAa,OACjC,MAAMgF,EAASnJ,KAAK4I,WAAWzE,GAAY,IAAIqE,EAAA/I,QAAU0E,EAAUnE,KAAKsF,eACxEtF,KAAKoJ,YAAYD,GACjBA,EAAOO,qBACPP,EAAOjF,GAAG,UAAYmF,IACrB,MAAMC,EAASpB,EAASmB,GACxBC,EAAOC,KAAKvJ,KAAK6I,MAAMxI,GAAWmJ,gBAAgBD,KAAKD,OA/CvDK,OAAerJ,MAAQN,KAExB,MACM4J,GADS,IAAInB,GACAoB,YACnB7J,KAAKU,SAAWkJ,EAAIE,GAAG5I,KAAO,MAAQ0I,EAAIG,QAAQ7I,KAElDlB,KAAKsF,cAAgB,IAAI8C,EAAA3I,QACzBO,KAAKsF,cAAcpB,GAAG,OAAQlE,KAAKiJ,QACnCjJ,KAAKsF,cAAcpB,GAAG,gBAAiBlE,KAAKyJ,eAGtC1J,wBACFC,KAAK+I,kBAAkBnI,SAC1BZ,KAAK+I,kBAAkBiB,QAAQC,GAAUA,KACzCjK,KAAK+I,sBAIAhJ,OAAOmK,GACb,OAAOlK,KAAK2I,KAAKuB,GAGXnK,OAAOoK,GACbnK,KAAK2I,KAAKwB,EAAIC,IAAMD,EA4BdpK,WAAWM,GACjB,MAAMgK,EAAOrK,KAAK6I,MAAMxI,GAAa,IAAI2H,EAAAsC,IAGnCC,EAAS,QAAUpC,IACzBnI,KAAKgJ,mBAAmB3I,GAAakK,EACrCvK,KAAK8I,SAASyB,IAAU,EACxB,MAAMC,EAAO,IAAIjC,EAAA9I,QAAKO,KAAMqK,EAAME,EAAQvK,KAAKU,UAC/CV,KAAKyK,OAAOD,UACLxK,KAAK8I,SAASyB,GAErBF,EAAKnG,GAAG,aAAewG,IACtB,MAAMN,EAAKM,EAAIC,IAAI,MACf3K,KAAK8I,SAASsB,KAClBpK,KAAK8I,SAASsB,IAAM,EAEhBpK,KAAK2I,KAAKyB,GACbpK,KAAK4K,cAAc,IAAItC,EAAA7I,QAAU2K,EAAIpK,KAAK2I,KAAKyB,GAAIS,UAEnD7K,KAAK4K,cAAc,IAAIvC,EAAA5I,QAAUiL,EAAII,SAAUzK,WAGzCL,KAAK8I,SAASsB,MAIfrK,YAAYoJ,IAsBbpJ,YAAYM,GAClBL,KAAKkJ,WAAW7I,GAChBL,KAAKsF,cAAcyF,YAAY1K,GAGzBN,aAAaM,GACnBL,KAAKsF,cAAc0F,aAAa3K,GAG1BN,KAAKM,GAGX,OAFAL,KAAKkJ,WAAW7I,GAChBL,KAAKsF,cAAc2F,YAAY5K,GACxB,IAAImE,QAASC,IAEnB,MAAMyG,EAAUjD,EAAAkD,QAAQnL,KAAKW,YAAa,KACrCX,KAAKW,YAAYyK,SAAS/K,KAC7B6K,IACAzG,SAMG1E,WAAWM,GACjB,OAAOL,KAAK2I,KAAKtI,GAGXN,cAAcM,GAEpB,IADgBL,KAAK2I,KAAKtI,GACV,OAAOuD,EAAI,yCAA0CvD,UAC9DL,KAAK2I,KAAKtI,GAGXN,QAAQwK,GACd,OAAOvK,KAAK2I,KAAK4B,GAGXxK,QAAQsL,GACd,OAAOrL,KAAK2I,KAAK0C,GAGXtL,cAAgCkK,EAAWqB,GAAa,GAE9D,OADArB,EAAOsB,IAAIvL,MACJiK,GA7JI7I,GAAX6G,EAAAuD,8CAGWpK,GAAX6G,EAAAuD,2CA8JFlK,EAAA7B,QAAeiJ,kHC/Lf,MAAAT,EAAAtJ,EAAA,0CAuBA2C,EAAA7B,cAZCM,YAAYkF,GACXjF,KAAKiF,KAAOA,EAGNlF,IAAIO,GACVN,KAAKM,MAAQA,EACb2H,EAAAgC,OAAOjK,KAAKiF,KAAM,IAAMjF,KAAKyL,UAA7BxD,wHChBF,MAAAyD,EAAA/M,EAAA,mCACAgN,EAAAhN,EAAA,kCAEAiN,EAAAjN,EAAA,kCA2BA2C,EAAA7B,sBAzBwCmM,EAAAnM,QAIvCM,YAAY2K,EAAQrK,GACnBmC,MAAM,aAENxC,KAAK0K,IAAMA,EACX1K,KAAKK,UAAYA,EAGRN,UACT,MAAMoK,EAAMuB,EAAAjM,QAASO,KAAK0K,IAAIzF,MAAM4G,YAAY7L,KAAKM,MAAON,KAAKM,MAAMuI,MAAM7I,KAAKK,WAAYL,KAAK0K,KASnG,OARA1K,KAAKM,MAAMmK,OAAON,GAEdA,aAAewB,EAAAlM,UAAYO,KAAKM,MAAMK,YAAYyK,SAASpL,KAAK0K,IAAIN,KACvEpK,KAAKM,MAAMK,YAAYmL,KAAK9L,KAAK0K,IAAIN,IAGtCpK,KAAKM,MAAMyL,yBAEJ,2HC3BT,MAAAJ,EAAAhN,EAAA,kCAEAiN,EAAAjN,EAAA,kCA4BA2C,EAAA7B,sBA1B4BmM,EAAAnM,QAK3BM,YAAYqK,EAAYlJ,EAAc8K,GACrCxJ,MAAM,iBAENxC,KAAKoK,GAAKA,EACVpK,KAAKkB,KAAOA,EACZlB,KAAKgM,QAAUA,EAGNjM,UACJC,KAAKM,MAAMuI,MAAM7I,KAAKoK,KAC1BpK,KAAKM,MAAM4I,WAAWlJ,KAAKoK,IAE5BpK,KAAKM,MAAMwI,SAAS9I,KAAKoK,KAAM,EAC/B,MAAMtJ,EAAU,IAAI6K,EAAAlM,QAAQO,KAAKM,MAAON,KAAKM,MAAMuI,MAAM7I,KAAKoK,IAAKpK,KAAKoK,GAAIpK,KAAKkB,KAAMlB,KAAKgM,SAI5F,cAHOhM,KAAKM,MAAMwI,SAAS9I,KAAKoK,IAChCpK,KAAKM,MAAMmK,OAAO3J,GAClBd,KAAKM,MAAMK,YAAYmL,KAAK9L,KAAKoK,KAC1B,uHCvBT,MAAAwB,EAAAjN,EAAA,kCA0BA2C,EAAA7B,sBAxBwBmM,EAAAnM,QAIvBM,YAAYmK,EAAeW,GAC1BrI,MAAM,aAENxC,KAAKkK,MAAQA,EACblK,KAAK6K,QAAUA,EAGN9K,UACT,MAAMoK,EAAMnK,KAAKM,MAAM2L,OAAOjM,KAAKkK,OAEnC,IAAK,MAAMlJ,KAAOhB,KAAK6K,QACrBV,EAAYnJ,GAAQhB,KAAK6K,QAAgB7J,GAK3C,OAFAhB,KAAKM,MAAMyL,yBAEJ,4HCzBT,MAAAH,EAAAjN,EAAA,kCAqBA2C,EAAA7B,sBAnB6BmM,EAAAnM,QAG5BM,YAAYmB,GACXsB,MAAM,kBAENxC,KAAKkB,KAAOA,EAGHnB,UACT,IAAK,MAAMwK,KAAUvK,KAAKM,MAAM0I,mBAClBhJ,KAAKM,MAAM4L,QAAQ3B,GAC3BrJ,KAAOlB,KAAKkB,KAGlB,OADAlB,KAAKM,MAAMI,SAAWV,KAAKkB,MACpB,8KCjBT,MAAAtC,EAAAD,EAAA,iCACAwN,EAAAxN,EAAA,qCACAyN,EAAAzN,EAAA,iCAEAA,EAAA,uCA0EA2C,EAAA7B,sBAzDgCb,EAAM2D,cAIrCxC,YAAYI,EAAiBI,GAC5BiC,MAAMrC,EAAOI,GAHPP,KAAAd,IAA6B,KAuB5Bc,KAAAiB,MAAQ,CAACf,IAChBF,KAAKG,MAAMc,MAAOjB,KAAME,KAGjBF,KAAAqM,YAAc,CAACnM,IACtBF,KAAKG,MAAMkM,YAAarM,KAAME,KAGvBF,KAAAsM,MAAQ,CAACpN,IAChBc,KAAKd,IAAMA,EACPc,KAAKG,MAAMoM,YAAcvM,KAAKG,MAAMoM,WAAWrN,KA5BnD,MAAMsN,EAAS,IAAIL,EAAA1M,QACnBO,KAAKyM,SAAYD,UACjBA,EAAOE,WAAWvM,EAAMwM,UACxBH,EAAOI,SAAWzM,EAAMyM,OAEpB5M,KAAKG,MAAMc,OAASuL,EAAOtI,GAAG,MAAOlE,KAAKiB,OAC1CjB,KAAKG,MAAMkM,aAAeG,EAAOtI,GAAG,YAAalE,KAAKqM,aAGpDtM,0BAA0B8M,GAChC,MAAML,EAASxM,KAAKyM,QAAQD,OAC5BA,EAAOE,WAAWG,EAAUF,UAC5BH,EAAOI,SAAWC,EAAUD,OAExBC,EAAU5L,QAAUuL,EAAOM,YAAY,QAAUN,EAAOtI,GAAG,MAAOlE,KAAKiB,OACvE4L,EAAUR,cAAgBG,EAAOM,YAAY,cAAgBN,EAAOtI,GAAG,YAAalE,KAAKqM,aAgBvFtM,SACN,MAAMU,UAAEA,EAASkM,SAAEA,EAAQI,SAAEA,EAAQC,MAAEA,GAAUhN,KAAKG,MAOhDA,GACLM,UALA,UACCA,EAAY,IAAMA,EAAY,KAC9BkM,EAAW,YAAc,IAI1BJ,WAAYvM,KAAKsM,MACjBG,QAASzM,KAAKyM,QACdO,SAGD,OAAOpO,EAAMY,cAAc4M,EAAAa,KAAM9M,EAAO4M,0hBC1E1C,MAAArN,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACAiB,EAAAjB,EAAA,2BAEAA,EAAA,4CAQA,IAAMuO,gBAAoBtO,EAAMkB,UADhCC,kCAKSC,KAAAmN,aAAe,MACtBnN,KAAKG,MAAMiN,eAAepN,KAAKG,MAAME,aAG/BN,SACN,MAAMM,UAAEA,GAAcL,KAAKG,MACrBG,EAAQN,KAAKO,QAAQD,MACrBQ,EAAUR,EAAMS,WAAWV,GAE3BgN,EAAQvM,EAAQwM,QAAQ1M,OAE9B,OACChC,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,cAAcQ,MAAQjB,KAAKmN,cAC5CvO,EAAAY,cAAA,OAAKiB,UAAU,6BACd7B,EAAAY,cAAA,OAAKiB,UAAU,6BAA8BK,EAAQI,MACrDtC,EAAAY,cAAA,OAAKiB,UAAU,8BAA+B4M,SAAcA,EAAQ,EAAI,IAAM,OAE/EzO,EAAAY,cAAA,OAAKiB,UAAU,4BACd7B,EAAAY,cAAA,OAAKiB,UAAU,kCAAgC,sBAC7CK,EAAQyM,QAAQ1M,IAAI0J,IACrB,MAAMiD,EAAQjD,IAAWjK,EAAM0I,mBAAmB3I,GAClD,OACCzB,EAAAY,cAAA,OACCiB,UAAY,uBAAyB+M,EAAQ,2BAA6B,IAC1ExM,IAAMuJ,GAEJjK,EAAM4L,QAAQ3B,GAAQrJ,KACtBsM,EAAQ,SAAW,YA7BdN,EAAA/L,aAAevB,EAAAuB,aAFxB+L,EAAW9L,GADhB1B,EAAA2B,UACK6L,GAyCN5L,EAAA7B,QAAeyN,8HCvDf,MAAAzJ,EAAA9E,EAAA,+CACA8O,EAAA9O,EAAA,qCACAC,EAAAD,EAAA,iCACMiF,EAAMH,EAAM,wBAwClBnC,EAAA7B,sBAlC6Bb,EAAM2D,cAAnCxC,kCACSC,KAAA0N,SAAoC,KAWrC1N,KAAA2N,KAAO,KACNF,EAAUG,OAAOC,aAAaC,KAAMC,IAC1C,KAAIA,EAAQnN,OAAS,GAIpB,MADAgD,EAAI,qBACE,IAAIoK,MAAM,qBAHhBhO,KAAKiO,QAAQC,MAAMH,EAAQ,IAAMA,EAAQ,OAQrC/N,KAAAmO,KAAO,MACbnO,KAAKiO,QAAQE,SApBPpO,oBACNC,KAAKiO,QAAU,IAAIR,EAAUW,SAAUC,MAAOrO,KAAK0N,SAAUY,QAAQ,IACrEtO,KAAKiO,QAAQM,YAAY,OAASC,IACjCxO,KAAKiO,QAAQE,OACbnO,KAAKG,MAAMsO,iBAAiBD,KAmBvBzO,SACN,OACCnB,EAAAY,cAAA,SAAOkP,IAAMA,GAAO1O,KAAK0N,SAAWgB,EAAMjO,UAAU,4LCtCvD,MAAA7B,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCAEAA,EAAA,qCAKA,MAAMgQ,EAAYhP,EAAAF,QAEZmP,EAAa,UAUnBC,UAAmBjQ,EAAM2D,cAAzBxC,kCACSC,KAAA8O,UAAmC,KACnC9O,KAAA+O,WACA/O,KAAAgP,YACAhP,KAAAiP,cAAe,EAYfjP,KAAAkP,kBAAoB,MAC3B,GAAIlP,KAAKiP,aAAc,CACtBjP,KAAKiP,cAAe,EACpB,IAAK,MAAMvM,KAAS1C,KAAK+O,QAAS,CACjC,MAAMvC,EAASxM,KAAK+O,QAAQrM,GACxB8J,IACHxM,KAAKgP,SAAStM,GAAS8J,EAAOtN,IAAKiQ,cAKtC,MAAMhM,aAAEA,EAAYH,KAAEA,EAAIE,cAAEA,GAAkBlD,KAAKG,MACnD,IAAIiP,EAAY,EACZC,GAAmB,EACnBC,EAAc,EAClB,IAAK,MAAM5M,MAAEA,KAAWM,EAAKE,GAAgB,CACxCR,IAAUS,IAAgBkM,GAAmB,GACjD,MAAME,EAAQvP,KAAKgP,SAAStM,GACvB2M,IACJC,GAAeC,GAEhBH,GAAaG,EAEdD,GAAeF,EAAY,EAE3BpP,KAAK8O,UAAW9B,MAAMwC,yBACNF,EAAcV,EAAa,qBAAsB5O,KAAKgP,SAAS7L,GAAgByL,OAGxF5O,KAAAyC,UAAY,CAAC+J,IACpBxM,KAAKG,MAAMiD,YAAYoJ,EAAOrM,MAAMuC,SAG7B1C,KAAAyP,cAAgB,MACvBzP,KAAKiP,cAAe,IA1CdlP,oBACNC,KAAKkP,oBAGCnP,qBACNC,KAAKkP,oBAwCCnP,SACN,MAAMoD,aAAEA,EAAYH,KAAEA,EAAIE,cAAEA,EAAaG,cAAEA,GAAkBrD,KAAKG,MAElE,OACCvB,EAAAY,cAAA,OAAKiB,UAAU,QACd7B,EAAAY,cAAA,OAAKiB,UAAU,kBAAkBuM,OAAUwC,6BAA+C,IAAjBtM,UAEvEF,EAAKnC,IAAI,CAAC6O,EAAUC,IACnB/Q,EAAAY,cAAA,OAAKiB,UAAU,iBAAiBO,IAAM2O,GACrC/Q,EAAAY,cAAA,OAAKiB,UAAU,2BAA2BO,IAAM2O,GAE/CD,EAAS7O,IAAI,EAAG6B,QAAOc,WACtB5E,EAAAY,cAACmP,GACA3N,IAAM0B,EACNjC,UAAY,aAAe0C,IAAiBT,EAAQ,oBAAsB,IAC1EzB,MAAQjB,KAAKyC,UACbC,MAAQA,EACRgM,IAAMA,GAAO1O,KAAK+O,QAAQrM,GAASgM,GAEnC9P,EAAAY,cAACgE,GAAMoM,SAAW5P,KAAKyP,sBAS9B7Q,EAAAY,cAAA,OACCiB,UAAY,mBAAqB4C,EAAgB,0BAA4B,IAC7EqL,IAAMA,GAAO1O,KAAK8O,UAAYJ,MA7EpBG,EAAAgB,cAAiCxM,eAAe,GAoF/D/B,EAAA7B,QAAeoP,kLC/Gf,MAAAjQ,EAAAD,EAAA,iCAEAA,EAAA,0CAkEA2C,EAAA7B,sBA1DwBb,EAAM2D,cAK7BxC,YAAYI,EAAcI,GACzBiC,MAAMrC,EAAOI,GALNP,KAAA8P,QAAiC,KACjC9P,KAAA+P,MAAiC,KACjC/P,KAAAwO,QAAkB,GAQlBxO,KAAAgQ,SAAW,MAClBhQ,KAAKwO,QAAUxO,KAAK+P,MAAO1K,QAGpBrF,KAAAiQ,UAAY,CAAC/Q,IACpBc,KAAK8P,QAAU5Q,IAGRc,KAAAkQ,OAAS,MAChBlQ,KAAK8P,QAASrP,UAAYT,KAAKmQ,sBAGxBnQ,KAAAoQ,WAAa,CAACL,IACrB/P,KAAK+P,MAAQA,IAhBb/P,KAAK8C,OAAUuN,YAAY,GAmBpBtQ,oBACP,MAAO,aAAeC,KAAKwO,QAAQ5N,OAAS,wBAA0B,IAGhEb,WAAa,OAAOC,KAAKwO,QAEzBzO,SAASsF,GACfrF,KAAKwO,QAAUnJ,EACfrF,KAAK+P,MAAO1K,MAAQA,EAGdtF,OAASC,KAAK+P,MAAOO,OAErBvQ,SACN,MAAMwQ,MAAEA,EAAKC,YAAEA,GAAgBxQ,KAAKG,MAEpC,OACCvB,EAAAY,cAAA,OAAKiB,UAAYT,KAAKmQ,oBAAsBzB,IAAM1O,KAAKiQ,WACtDrR,EAAAY,cAAA,OAAKiB,UAAU,oBAAqB8P,GACpC3R,EAAAY,cAAA,SACCiB,UAAU,mBACV+P,YAAcA,EACdR,SAAWhQ,KAAKgQ,SAChBE,OAASlQ,KAAKkQ,OACdxB,IAAM1O,KAAKoQ,yHC7DhB,MAAAK,EAAA9R,EAAA,sCAOa2C,EAAAH,cACZb,MAAOmQ,EAAUC,qdCRlB,MAAAzI,EAAAtJ,EAAA,0CAQA,SAAAgS,EAAuBC,EAAmBC,GACzC,MAAMC,EAAO,IAAI7I,EAAA8I,KAAKF,GAEhBG,EAAS,WAEd,OADAF,EAAKG,iBACGjR,KAAakR,OAAOL,IAGvBM,EAAS,SAAoBC,GACnBpR,KAAakR,OAAOL,KACrBO,IACbpR,KAAakR,OAAOL,GAAYO,EAC7BpR,KAAK0K,KAAO1K,KAAK0K,IAAIC,IAAIkG,KAAcO,GAC1CpR,KAAK0K,IAAI2G,IAAIR,EAAUO,GAExBN,EAAKQ,yBAGKV,EAAaC,IACvBU,OAAOC,eAAeZ,EAAcC,GACnClG,IAAKqG,EACLK,IAAKF,IArBR7P,EAAAqP,eA+BArG,EAQCvK,YAAYO,EAAc8J,EAAYnF,GAP5BjF,KAAAkR,UAQTlR,KAAKM,MAAQA,EACbN,KAAKoK,GAAKA,EACVpK,KAAKiF,KAAOA,EACZjF,KAAK6K,WAGI9K,SAASsK,GAClBrK,KAAK0K,IAAML,EAAKM,IAAI3K,KAAKoK,IACpBpK,KAAK0K,IAAIC,IAAI,SACjB3K,KAAK0K,IAAI2G,IAAIrR,KAAKyR,WAGnBzR,KAAK0K,IAAIxG,GAAG,SAAWwN,IACtBH,OAAOI,OAAO3R,KAAK6K,QAAS6G,KAIpB3R,UAAa6R,GACtB,OAAOL,OAAOI,OAAOC,GAAOxH,GAAIpK,KAAKoK,GAAInF,KAAMjF,KAAKiF,QAzB7C7D,GAAPuP,4BACOvP,GAAPuP,8BA8BFrP,EAAA7B,QAAe6K,gdCvEf,MAAAuH,EAAAlT,EAAA,oCAcAmT,UAAmBD,EAAApS,QAKlBM,YACCO,EAAc+J,EAAqBD,EAAY2H,EAAmBC,EAAsBC,GAExFzP,MAAMlC,EAAO8J,EAAI,QACjBpK,KAAK+R,UAAYA,EACjB/R,KAAKgS,aAAeA,EACpBhS,KAAKiS,YAAcA,EACnBjS,KAAKkS,SAAS7H,GAGRtK,mBACNO,EAAc+J,GAAqBD,GAAEA,EAAE2H,UAAEA,EAASC,aAAEA,EAAYC,YAAEA,IAElE,OAAO,IAAIH,EAAKxR,EAAO+J,EAAMD,EAAI2H,EAAWC,EAAcC,GAGpDlS,UACN,OAAOC,KAAKmS,WACXH,aAAchS,KAAKgS,aACnBD,UAAW/R,KAAK+R,UAChBE,YAAajS,KAAKiS,eAxBZ7Q,GAAPyQ,EAAAlB,wCACOvP,GAAPyQ,EAAAlB,2CACOvP,GAAPyQ,EAAAlB,0CA2BFrP,EAAA7B,QAAeqS,mdC5Cf,MAAA7J,EAAAtJ,EAAA,0CACAkT,EAAAlT,EAAA,8BAEAyT,EAAAzT,EAAA,0CASA0T,UAAsBR,EAAApS,QAMrBM,YAAYO,EAAc+J,EAAqBD,EAAYlJ,EAAc8K,GACxExJ,MAAMlC,EAAO8J,EAAI,WACjBpK,KAAKkB,KAAOA,EACZlB,KAAKgM,QAAUA,EACfhM,KAAKuN,WACLvN,KAAKsN,WAELtN,KAAKkS,SAAS7H,GACd+H,EAAA3S,QAAU4K,EAAM/J,EAAO,OAAQ,OAAQN,KAAKsN,QAAS5C,GAAOA,EAAIC,IAAI,OACpEyH,EAAA3S,QAAU4K,EAAM/J,EAAO,OAAQ,OAAQN,KAAKuN,QAAS7C,GAAOA,EAAIC,IAAI,OAG9D5K,mBAAmBO,EAAc+J,GAAqBD,GAAEA,EAAElJ,KAAEA,EAAI8K,QAAEA,IACxE,OAAO,IAAIqG,EAAQ/R,EAAO+J,EAAMD,EAAIlJ,EAAM8K,GAGpCjM,UACN,OAAOC,KAAKmS,WACXnG,QAAShM,KAAKgM,QACd9K,KAAMlB,KAAKkB,QAxBLE,GAAPyQ,EAAAlB,sCACOvP,GAAPyQ,EAAAlB,mCACWvP,GAAX6G,EAAAuD,0CACWpK,GAAX6G,EAAAuD,0CA0BFlK,EAAA7B,QAAe4S,gdC1Cf,MAAAR,EAAAlT,EAAA,oCAQA2T,UAAmBT,EAAApS,QAGlBM,YAAYO,EAAc+J,EAAeD,EAAYlJ,GACpDsB,MAAMlC,EAAO8J,EAAI,QACjBpK,KAAKkB,KAAOA,EACZlB,KAAKkS,SAAS7H,GAGRtK,mBAAmBO,EAAc+J,GAAqBD,GAAEA,EAAElJ,KAAEA,IAClE,OAAO,IAAIoR,EAAKhS,EAAO+J,EAAMD,EAAIlJ,GAG3BnB,UACN,OAAOC,KAAKmS,WACXjR,KAAMlB,KAAKkB,QAdLE,GAAPyQ,EAAAlB,mCAmBFrP,EAAA7B,QAAe6S,oHCzBfhR,EAAA7B,QAAA,SACC4K,EAAkB/J,EAAcU,EAAQqE,EAAakN,EAAWC,GAEhE,MAAMC,EAAMpI,EAAKqI,UAAU1R,EAAKqE,GAwBhC,OAtBAoN,EAAIzI,QAAQU,GAAO6H,EAAKzG,KAAK0G,EAAW9H,KAExC+H,EAAIvO,GAAG,MAAOwG,IACb,MAAMiI,EAAQF,EAAIG,QAAQlI,GAC1B,IAAe,IAAXiI,EAAc,CACjB,MAAME,EAAIL,EAAW9H,GACrBpK,EAAMyI,kBAAkB+C,KAAK,KAC5ByG,EAAKO,OAAOH,EAAO,EAAGE,QAKzBJ,EAAIvO,GAAG,SAAUwG,IAChB,MAAMmI,EAAIL,EAAW9H,GACfiI,EAAQJ,EAAKK,QAAQC,IACZ,IAAXF,GACHrS,EAAMyI,kBAAkB+C,KAAK,KAC5ByG,EAAKO,OAAOH,EAAO,OAKfJ,oHC5BR,MAAAQ,EAAApU,EAAA,+BACAgN,EAAAhN,EAAA,kCACA4J,EAAA5J,EAAA,+BAIMqU,GAILlS,QAAS6K,EAAAlM,QACT+K,KAAMjC,EAAA9I,QACNwT,KAAMF,EAAAtT,SAGP6B,EAAA7B,QAAeuT,qHClBf,MAAAE,EAAAvU,EAAA,uCACAwU,EAAAxU,EAAA,wCACAyU,EAAAzU,EAAA,+BAkBA,SAAA0U,EAAgBC,GACXhS,EAAAiS,QAAQ9G,QAAQ7L,SACnBU,EAAAiS,QAAQ9G,QAAQzC,QAAQwJ,IAClBlS,EAAAiS,QAAQE,cAAgBH,IAAYE,EAAOF,SAAWE,EAAOE,WAEnEpS,EAAAiS,QAAQ9G,YAhBGnL,EAAAiS,SAKP9G,WAAakH,UAAU,EAAOC,gBAAgB,EAAOH,cAAc,GAEzEP,EAAA3E,YAAY5E,OAAQ,YAAa,SAASzJ,GACzCoB,EAAAiS,QAAQ9G,aAYT0G,EAAA1T,QAAgByE,GAAG,eAAgBmP,GACnCF,EAAA1T,QAAgByE,GAAG,iBAAkBmP,GAIrC,MAAMQ,EAAmB,IACnBC,EAAqB,IACrBC,EAAmB,GA8MzBzS,EAAA7B,sBApM2B2T,EAAA3T,QAiB1BM,YAAYiU,MACXxR,QAjBOxC,KAAAiU,QAAS,EACTjU,KAAAkU,OAAwB,KACxBlU,KAAAmU,QAAU,EACVnU,KAAAoU,WAAsC,KACtCpU,KAAAqU,UAAoB,GACpBrU,KAAAsU,WAAqB,EACrBtU,KAAAuU,eAAyB,EACzBvU,KAAAwU,aAAgBC,KAAM,EAAGC,IAAK,EAAGnF,MAAO,EAAGoF,OAAQ,GACpD3U,KAAAsT,QAA8B,KAC7BtT,KAAA4U,YAAcb,EACd/T,KAAA6U,aAAed,EACf/T,KAAA8U,WAAY,EACZ9U,KAAA+U,cAAwB,EACxB/U,KAAAgV,YAAc,EACfhV,KAAA4M,QAAS,EAKf5M,KAAK4M,SAAWoH,EAAQpH,OAGlB7M,oBAAoBwP,EAAeoF,GACzC3U,KAAK4U,YAAcK,KAAKC,IAAI3F,EAAOwE,GACnC/T,KAAK6U,aAAeI,KAAKC,IAAIP,EAAQZ,GAG9BhU,MAAMoV,GACbnV,KAAK8U,WAAY,EACb9U,KAAK4M,SACR5M,KAAKgV,YAAc,EACnBhV,KAAKoV,aAENpV,KAAKqE,KAAK,QAAS8Q,GAGZpV,QAAQuU,GACftU,KAAK8U,WAAY,EACjB9U,KAAKqE,KAAK,UAAWiQ,GAGdvU,IAAIG,GACXF,KAAKqE,KAAK,MAAOnE,GAGVH,UAAUG,GACjBF,KAAKqE,KAAK,YAAanE,GAGhBH,QAAQoV,GACfnV,KAAKqE,KAAK,UAAW8Q,GAGfpV,UAAUkU,GAChBjU,KAAKiU,OAASA,EAGPlU,QACHC,KAAKkU,SACRf,EAAA1T,QAAgB4V,YAAYrV,KAAKkU,QACjClU,KAAKkU,OAAS,MAEfvK,OAAO2L,aAAatV,KAAK+U,eACzBpL,OAAO2L,aAAatV,KAAKuU,gBACzBrB,EAAArO,eAAe1F,SAAU,cAAea,KAAKuV,eAAiBhV,QAASP,OACvEkT,EAAArO,eAAe1F,SAAU,YAAaa,KAAKwV,aAAejV,QAASP,OAG5DD,YACP,MAAM0V,EAA4B,IAArBzV,KAAKgV,YAAoB,IAAM,GAE5ChV,KAAK+U,cAAgBpL,OAAO+L,WAAW,KACtC1V,KAAKgV,aAAe,EACpBhV,KAAK2V,IAAI3V,KAAKoU,YACdpU,KAAKoV,aACHK,GAGG1V,SACFC,KAAK8U,YACR9U,KAAKsU,WAAY,EACjBtU,KAAK4V,SAAQ,IAGd5V,KAAK6V,QAGE9V,cAAcG,GACjBA,EAAEmU,YAAcrU,KAAKqU,YACrBnU,EAAE4V,QAAU9V,KAAKwU,YAAYC,MAChCvU,EAAE4V,QAAU9V,KAAKwU,YAAYC,KAAOzU,KAAKwU,YAAYjF,OACrDrP,EAAE6V,QAAU/V,KAAKwU,YAAYE,KAC7BxU,EAAE6V,QAAU/V,KAAKwU,YAAYE,IAAM1U,KAAKwU,YAAYG,SACpD3U,KAAK0T,SAIC3T,cAAcG,GACrB,IAAKF,KAAKiU,QAAoD,IAAzC/T,EAAE8V,cAA6BC,OAAe9C,EAAA1T,QAAgByW,SAAShW,EAAEiW,QAC7F,OAGD7U,EAAAiS,QAAQ9G,QAAQX,KAAK9L,MACrBA,KAAKqU,UAAYnU,EAAEmU,UAEnBrU,KAAKsU,WAAY,EACjB,MAAM8B,GACLC,EAAGnW,EAAE4V,QACLQ,EAAGpW,EAAE6V,SAGAI,EAASjW,EAAEiW,OAEX3B,EAAcxU,KAAKsT,QAASiD,wBAClCvW,KAAKwU,YAAYE,IAAMF,EAAYE,IACnC1U,KAAKwU,YAAYC,KAAOD,EAAYC,KAChCD,EAAYjF,MAAQvP,KAAK4U,aAC5B5U,KAAKwU,YAAYjF,MAAQvP,KAAK4U,YAC9B5U,KAAKwU,YAAYC,OAASzU,KAAK4U,YAAcJ,EAAYjF,OAAS,GAElEvP,KAAKwU,YAAYjF,MAAQiF,EAAYjF,MAGlCiF,EAAYG,OAAS3U,KAAK6U,cAC7B7U,KAAKwU,YAAYG,OAAS3U,KAAK6U,aAC/B7U,KAAKwU,YAAYE,MAAQ1U,KAAK6U,aAAeL,EAAYG,QAAU,GAEnE3U,KAAKwU,YAAYG,OAASH,EAAYG,OAGnC3U,KAAK4M,SACR5M,KAAKoU,WAAa,IAAIlB,EAAAsD,UAAUtW,EAAE+E,MAClCjF,KAAKoU,WAAa7C,OAAOI,OAAO3R,KAAKoU,WAAYlU,IAElDF,KAAKyW,MAAML,GAEX9U,EAAAiS,QAAQI,SAAWrS,EAAAiS,QAAQK,eAAiBtS,EAAAiS,QAAQE,cAAe,EAC/DzT,KAAK8M,YAAY,aAAe9M,KAAK4M,SACxCjD,OAAO2L,aAAatV,KAAKuU,gBACzBvU,KAAKuU,eAAiB5K,OAAO+L,WAAW,KACvC1V,KAAKkU,OAASf,EAAA1T,QAAgBiX,cAAcP,GACxCnW,KAAKkU,SACRlU,KAAK2W,QAAQP,GACb9U,EAAAiS,QAAQE,cAAe,IAEtBI,IAGJX,EAAA3E,YAAYpP,SAAU,cAAea,KAAKuV,eAAiBhV,QAASP,OACpEkT,EAAA3E,YAAYpP,SAAU,YAAaa,KAAKwV,aAAejV,QAASP,OAGzDD,YAAYG,GACnB,GAAIA,EAAEmU,YAAcrU,KAAKqU,YAAarU,KAAKsU,YAI3CtU,KAAK6V,QACL7V,KAAK4V,SAAQ,IAERtU,EAAAiS,QAAQE,cAAc,CAC1B,MAAMmD,EAAMC,KAAKD,MACXE,EAAUF,EAAM5W,KAAKmU,QAQ3B,GAPAnU,KAAKmU,QAAUyC,GAEVtV,EAAAiS,QAAQI,UAAY3T,KAAK8M,YAAY,SACzCxL,EAAAiS,QAAQI,UAAW,EACnB3T,KAAK2V,IAAIzV,IAGN4W,EAAUhD,EAOb,OANA9T,KAAKmU,QAAU,QACV7S,EAAAiS,QAAQK,gBAAkB5T,KAAK8M,YAAY,eAC/CxL,EAAAiS,QAAQK,gBAAiB,EACzB1T,EAAE6W,iBACF/W,KAAKgX,UAAU9W,MAOZH,kBAAkBuT,GACxBtT,KAAKsT,QAAUA,EACfJ,EAAA3E,YAAYvO,KAAKsT,QAAS,cAAetT,KAAKiX,eAAiB1W,QAASP,OAGlED,uBACNmT,EAAArO,eAAe7E,KAAKsT,QAAU,cAAetT,KAAKiX,eAAiB1W,QAASP,OAC5EA,KAAK6V,QACL7V,KAAKsT,QAAU,KACf3J,OAAO2L,aAAatV,KAAK+U,+aC9O3B,MAAAnW,EAAAD,EAAA,uCAoBAuY,UACStY,EAAM2D,cAEdxC,YAAYI,EAAUI,GACrBiC,MAAMrC,EAAOI,GAEb,IAAK,MAAM6J,KAAMjK,EAAMsM,QAAS,CAChBtM,EAAMsM,QAAQrC,GACtB+M,qBAAqBnX,OAIvBD,qBACN,MAAM0M,EAAUzM,KAAKG,MAAMsM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChBgN,sBAIFrX,6BAA6BsX,GACnC,MAAM5K,EAAUzM,KAAKG,MAAMsM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChBkN,kBAAkBD,IAIpBtX,0BAA0B8M,GAChC,MAAMJ,EAAUzM,KAAKG,MAAMsM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChBmN,0BAA0B1K,IAI5B9M,oBAAoB8M,GAC1B,MAAMJ,EAAUzM,KAAKG,MAAMsM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChBoN,oBAAoB3K,IAItB9M,qBACN,MAAM0M,EAAUzM,KAAKG,MAAMsM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChBqN,sBAIF1X,uBACN,MAAM0M,EAAUzM,KAAKG,MAAMsM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACzB,MAAM+G,EAAS/G,EAAQrC,GACvBoJ,EAAOkE,uBACPlE,EAAOmE,yBAKV,SAAAC,EAA4EC,GAG3E,qBAAsCX,EAGrCnX,YAAYI,EAAiBI,GAC5BiC,MAAMrC,EAAOI,GAHPP,KAAAqX,QAAoB,KAK1BrX,KAAKsM,MAAQtM,KAAKsM,MAAMwL,KAAK9X,MAGvBD,oBACNC,KAAK+X,6BAA6B/X,KAAKqX,SAGhCtX,MAAMiY,GACbhY,KAAKqX,QAAUW,EACXhY,KAAKG,MAAMoM,YACdvM,KAAKG,MAAMoM,WAAWyL,GAIjBjY,SACN,MAAMkY,EAAUJ,EACVK,EAAAlY,KAAAG,OAAA4M,SAAEA,EAAQN,QAAEA,EAAOF,WAAEA,GAAU2L,EAAE/X,EAAAgY,EAAAD,GAAA,oCACvC,OACCtZ,EAAAY,cAACyY,EAAO1G,OAAAI,UAAMxR,GAAQuO,IAAM1O,KAAKsM,QAC9BS,KA1FPzL,EAAA4V,gBA8DA5V,EAAAsW,yBAmCatW,EAAA2L,KAAO2K,EAAuC,OAC9CtW,EAAA8W,MAAQR,EAAwC,qHC5D7DtW,EAAA7B,cA1DAM,cA6BSC,KAAAqY,aA5BDtY,qBAAqBuY,IAIrBvY,kBAAkBwY,IAIlBxY,sBAIAA,0BAA0B8M,IAI1B9M,oBAAoB8M,IAIpB9M,sBAIAA,wBAMAA,GAAyByY,EAAcC,EAAwClY,EAAoBP,MACrGwY,KAAaxY,KAAKqY,UACrBrY,KAAKqY,UAAUG,GAAW1M,MAAO2M,WAAUlY,YAE3CP,KAAKqY,UAAUG,KAAgBC,WAAUlY,YAIpCR,uBACNC,KAAKqY,aAGItY,KAAwByY,EAAcE,GAC/C,MAAML,EAAYrY,KAAKqY,UAAUG,GACjC,GAAIH,EACH,IAAK,IAAI1I,EAAI,EAAGgJ,EAAMN,EAAUzX,OAAQ+O,EAAIgJ,EAAKhJ,GAAK,EAAG,CACxD,MAAMiJ,EAAWP,EAAU1I,GAC3BiJ,EAASH,SAASrT,KAAKwT,EAASrY,QAASmY,IAKrC3Y,YAAYyY,GAClB,QAASxY,KAAKqY,UAAUG,2HCtD1B,MAAA9U,EAAA/E,EAAA,mCAyDA2C,EAAA7B,QAAe,kBAvDeiE,EAAAG,aAA9B9D,kCACSC,KAAA6Y,aACA7Y,KAAA8Y,sBACA9Y,KAAAkU,OAAS,EAEVnU,SAASuT,GACf,IAAK,MAAMlJ,KAAMpK,KAAK6Y,UAAW,CAChC,IAAIE,EAAoB/Y,KAAK6Y,UAAUzO,GACvC,KAAgB,OAAT2O,GAAe,CACrB,GAAIA,IAASzF,EAAW,OAAO,EAC/ByF,EAAOA,EAAKC,YAId,IAAK,MAAM5O,KAAMpK,KAAK8Y,mBAAoB,CACzC,MAAMG,EAAYjZ,KAAK8Y,mBAAmB1O,GAC1C,IAAI8O,EAAsB5F,EAC1B,KAAkB,OAAX4F,GAAiB,CACvB,GAAIA,IAAWD,EAAa,OAAO,EACnCC,EAASA,EAAOF,YAIlB,OAAO,EAGDjZ,cAAcuT,GACpB,OAAItT,KAAKkW,SAAS5C,GAAmB,MAErCtT,KAAKkU,QAAU,EACflU,KAAK6Y,UAAU7Y,KAAKkU,QAAUZ,EAC9BtT,KAAKqE,KAAK,eAAgBiP,GACnBtT,KAAKkU,QAGNnU,uBAAuBuT,GAC7B,OAAItT,KAAKkW,SAAS5C,GAAmB,MAErCtT,KAAKkU,QAAU,EACflU,KAAK8Y,mBAAmB9Y,KAAKkU,QAAUZ,EACvCtT,KAAKqE,KAAK,iBAAkBiP,GACrBtT,KAAKkU,QAGNnU,YAAYqK,GAClB,MAAMkJ,EAAUtT,KAAK6Y,UAAUzO,IAAOpK,KAAK8Y,mBAAmB1O,GAC1DkJ,WACItT,KAAK6Y,UAAUzO,UACfpK,KAAK8Y,mBAAmB1O,GAC/BpK,KAAKkU,QAAU,EACflU,KAAKqE,KAAK,SAAUiP,oOCpDvB,MAAA1U,EAAAD,EAAA,iCACAwJ,EAAAxJ,EAAA,6BAEAgD,EAAAhD,EAAA,yCAEAgB,EAAAhB,EAAA,sCACAwa,EAAAxa,EAAA,yCACAiB,EAAAjB,EAAA,2BAGAA,EAAA,+CAEAya,UAA4Bxa,EAAM2D,cAAlCxC,kCAKSC,KAAAqZ,cAAgB,MACvB,MAAMhU,EAAQrF,KAAKsZ,iBAAkBC,WACrC,GAAc,KAAVlU,EAAgB,OAEpB,MAAM/E,EAAQN,KAAKO,QAAQD,MACrBD,EAAY,WAAa8H,IAC/B7H,EAAMyK,YAAY1K,GAClBC,EAAMsK,cAAc,IAAIjJ,EAAAlC,QACvBY,EACAgF,EACA/E,EAAM0I,mBAAmB3I,KAE1BL,KAAKG,MAAMyC,kBAAkBvC,KAGtBL,KAAAwZ,SAAW,CAACtZ,IACnBA,EAAE6W,iBACF/W,KAAKqZ,kBAGCtZ,SACN,OACCnB,EAAAY,cAAA,OAAKiB,UAAU,iBACd7B,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,wDAClC7B,EAAAY,cAAA,QAAMiB,UAAU,YAAYgZ,SAAWzZ,KAAKwZ,UAC3C5a,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAAC2Z,EAAA1Z,SACA8Q,MAAM,iCACNC,YAAY,aACZ9B,IAAMA,GAAO1O,KAAKsZ,iBAAmB5K,KAGvC9P,EAAAY,cAAA,OAAKiB,UAAU,6CACd7B,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,uCAAuCQ,MAAQjB,KAAKqZ,eAAa,cApC1ED,EAAAjY,aAAevB,EAAAuB,aA8C9BG,EAAA7B,QAAe2Z,4KC5Df,MAAAxa,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACA+a,EAAA/a,EAAA,8CACAiB,EAAAjB,EAAA,2BAGAA,EAAA,6CAMAgb,UAA0B/a,EAAM2D,cAM/BxC,YAAYI,EAA0BI,GACrCiC,MAAMrC,EAAOI,GAJNP,KAAAiO,QAAiC,KACjCjO,KAAA+P,MAAiC,KAUjC/P,KAAAyO,iBAAmB,CAACpO,IAC3BL,KAAK2C,UAAWiX,YAAY,IAC5B5Z,KAAKqC,KAAKhC,KAGHL,KAAA6Z,aAAe,MACtB7Z,KAAK2C,UAAWiX,YAAY,GAAS,IAAM5Z,KAAKiO,QAASE,UAGlDnO,KAAA8Z,cAAgB,MACvB,IACC9Z,KAAKiO,QAASN,OACd3N,KAAK2C,UAAWiX,YAAY,IAC3B,MAAO1B,OAKFlY,KAAA+Z,gBAAkB,MACzB,MAAM1Z,EAAYL,KAAK+P,MAAO1K,MACzBhF,GACLL,KAAKqC,KAAKhC,KASHL,KAAAga,aAAe,CAAC9Z,IACvBA,EAAE6W,iBACF/W,KAAK+Z,oBArCL/Z,KAAK8C,OACJ8W,YAAY,GA4BN7Z,KAAKM,GACZL,KAAKO,QAAQD,MAAM+B,KAAKhC,GAAWyN,KAAK,KACvC9N,KAAKG,MAAMyC,kBAAkBvC,KASxBN,SACN,MAAM6Z,WAAEA,GAAe5Z,KAAK8C,MAE5B,OACClE,EAAAY,cAAA,OAAKiB,UAAY,eAAiBmZ,EAAa,wBAA0B,KACxEhb,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,wEAClC7B,EAAAY,cAAA,OAAKiB,UAAU,aACd7B,EAAAY,cAAA,OAAKiB,UAAU,gBAAc,kBAC7B7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAK8Z,cAAgBrZ,UAAU,iBAAe,kBAC9D7B,EAAAY,cAAA,OAAKiB,UAAU,wBACd7B,EAAAY,cAACka,EAAAja,SAAegP,iBAAmBzO,KAAKyO,iBAAmBC,IAAMA,GAAO1O,KAAKiO,QAAUS,IACvF9P,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAK6Z,aAAepZ,UAAU,2CAAyC,mBAGzF7B,EAAAY,cAAA,QAAMiB,UAAU,YAAYgZ,SAAWzZ,KAAKga,cAC3Cpb,EAAAY,cAAA,OAAKiB,UAAU,gBAAc,sBAC7B7B,EAAAY,cAAA,SAAOiB,UAAU,wBAAwBiO,IAAMA,GAAO1O,KAAK+P,MAAQrB,IACnE9P,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAK+Z,gBAAkBtZ,UAAU,iBAAe,WAhEtDkZ,EAAAxY,aAAevB,EAAAuB,aAuE9BG,EAAA7B,QAAeka,ihBCtFf,MAAAja,EAAAf,EAAA,6CACAsb,EAAAtb,EAAA,4CACAC,EAAAD,EAAA,iCACAwJ,EAAAxJ,EAAA,6BAEA0J,EAAA1J,EAAA,qCACAgB,EAAAhB,EAAA,sCACAiB,EAAAjB,EAAA,2BAIAA,EAAA,yCAGA,IAAMub,gBAAsBtb,EAAMkB,UADlCC,kCAISC,KAAAma,gBAA0B,EAW1Bna,KAAAoa,QAAU,MACjB,MAAM/U,EAAQrF,KAAK+P,MAAO1K,MACpBhF,EAAYL,KAAKG,MAAME,UAC7B,GAAc,KAAVgF,IAAiBhF,EAAa,OAElC,MAAMgL,EAAS,QAAUlD,IACzBnI,KAAKO,QAAQD,MAAMsK,cAAc,IAAIvC,EAAA5I,SACpC2K,GAAIiB,EACJpG,KAAM,OACN8M,UAAW/R,KAAKO,QAAQD,MAAM0I,mBAAmB3I,GACjD2R,cAAc,IAAI6E,MAAOwD,cACzBpI,aAAehN,KAAM,OAAQuJ,QAASnJ,IACpChF,IACHL,KAAK+P,MAAO1K,MAAQ,KAGbrF,KAAAsa,gBAAkB,CAACpa,IAC1BA,EAAE6W,iBACF/W,KAAKoa,YAGEpa,KAAAua,OAAS,MAChBva,KAAKG,MAAM0C,cAAc,cA9BnB9C,uBACN4J,OAAO2L,aAAatV,KAAKma,gBAGnBpa,KAAKM,GACXL,KAAK2C,UAAWtC,cA4BVN,SACN,MAAMO,EAAQN,KAAKO,QAAQD,OACrBD,UAAEA,GAAcL,KAAKG,MACrBW,EAAUT,GAAaC,EAAMS,WAAWV,IAAc,KAE5D,OACCzB,EAAAY,cAAA,OAAKiB,UAAU,iBACd7B,EAAAY,cAAA,OAAKiB,UAAU,yBACd7B,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,uBAAwBK,GAAWA,EAAQI,MAC7DtC,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,sBAAsBQ,MAAQjB,KAAKua,QAAM,SAE5D3b,EAAAY,cAAA,OAAKiB,UAAU,uBAEdK,GACClC,EAAAY,cAACZ,EAAM4b,SAAQ,KACd5b,EAAAY,cAAA,OAAKiB,UAAU,uBACd7B,EAAAY,cAAA,OAAKiB,UAAU,eAAgBK,EAAQsJ,IACvCxL,EAAAY,cAACya,GAAO5U,MAAQvE,EAAQsJ,GAAKqQ,KAAO,OAGrC7b,EAAAY,cAAA,OAAKiB,UAAU,4BAEdK,EAAQwM,QAAQzM,IAAIwK,GACnBzM,EAAAY,cAAA,OAAKiB,UAAU,sBAAsBO,IAAMqK,GACxC/K,EAAMoa,QAAQrP,GAAQ4G,YAAYzD,WAMvC5P,EAAAY,cAAA,QAAMiB,UAAU,0BAA0BgZ,SAAWzZ,KAAKsa,iBACzD1b,EAAAY,cAAA,SAAOiB,UAAU,4BAA4BiO,IAAMA,GAAO1O,KAAK+P,MAAQrB,IACvE9P,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKoa,SAAO,mBArErBF,EAAA/Y,aAAevB,EAAAuB,aAFxB+Y,EAAa9Y,GADlB1B,EAAA2B,UACK6Y,GAkFN5Y,EAAA7B,QAAeya,ugBChGf,MAAAxa,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCAEAgc,EAAAhc,EAAA,0CAEAgB,EAAAhB,EAAA,sCACAic,EAAAjc,EAAA,2CACAwa,EAAAxa,EAAA,yCACAiB,EAAAjB,EAAA,2BAGAA,EAAA,oCAGA,IAAMkc,gBAAiBjc,EAAMkB,UAD7BC,kCAMSC,KAAAoN,eAAiB,CAAC/M,IACzBL,KAAKG,MAAMyC,kBAAkBvC,KAGtBL,KAAA8a,eAAiB,MACxB,MAAMpa,EAAWV,KAAK+a,gBAAiBxB,WACvC,GAAiB,KAAb7Y,EAAmB,OAEvBV,KAAK+a,gBAAiBC,SAAS,IAC/Bhb,KAAK+a,gBAAiBzK,OAEtB,MAAMhQ,EAAQN,KAAKO,QAAQD,MACvBI,IAAaJ,EAAMI,UACtBJ,EAAMsK,cAAc,IAAI+P,EAAAlb,QAAeiB,MAIjCV,KAAAib,iBAAmB,CAAC/a,IAC3BA,EAAE6W,iBACF/W,KAAK8a,mBAGE9a,KAAAoC,OAAS,MAChBpC,KAAKG,MAAM0C,cAAc,YAGlB7C,KAAAqC,KAAO,MACdrC,KAAKG,MAAM0C,cAAc,UAGnB9C,SACN,MACMY,EADQX,KAAKO,QAAQD,MACDK,YAE1B,OACC/B,EAAAY,cAAA,OAAKiB,UAAU,YAEU,IAAvBE,EAAYC,OACZhC,EAAAY,cAACZ,EAAM4b,SAAQ,KACf5b,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,8BAClC7B,EAAAY,cAAA,QAAMiB,UAAU,YAAYgZ,SAAWzZ,KAAKib,kBAC3Crc,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAAC2Z,EAAA1Z,SACA8Q,MAAM,wCACNC,YAAcxQ,KAAKO,QAAQD,MAAMI,SACjCgO,IAAMA,GAAO1O,KAAK+a,gBAAkBrM,KAGtC9P,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,gBAAgBQ,MAAQjB,KAAK8a,gBAAc,SAK/Dlc,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,6BAClC7B,EAAAY,cAAA,OAAKiB,UAAU,aACd7B,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKoC,OAAS3B,UAAU,iBAAe,WAIxD7B,EAAAY,cAAA,OAAKiB,UAAU,gBACf7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKqC,KAAO5B,UAAU,iBAAe,WAMpD,KAEDE,EAAYE,IAAIR,GAAazB,EAAAY,cAACob,EAAAnb,SAC/BY,UAAYA,EACZW,IAAMX,EACN+M,eAAiBpN,KAAKoN,qBA5EZyN,EAAA1Z,aAAevB,EAAAuB,aAFxB0Z,EAAQzZ,GADb1B,EAAA2B,UACKwZ,GAqFNvZ,EAAA7B,QAAeob","file":"desktop-app.045ad32901766877528b.js","sourcesContent":["import * as Mobx from 'mobx';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'shared/styles/core.less';\nimport Main from './views/Main';\n\nMobx.useStrict(true);\n\nlocalStorage.setItem('debug', 'swift*');\n\nconst div = document.getElementById('swift');\ndiv!.classList.add('desktop');\nReactDOM.render(<Main />, div);\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/app.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './Sidebar.less';\n\nexport type Props = {\n\tselectSession(sesionId: string): void,\n\tsessionId: string | null\n};\n\n@observer\nclass Sidebar extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate onSessionSelect = (e: Button<{ sessionId: string }>) => {\n\t\tthis.props.selectSession(e.props.sessionId);\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst currentSessionId = this.props.sessionId;\n\n\t\treturn (\n\t\t\t<div className='Sidebar'>\n\t\t\t\t<div className='Sidebar__user'>\n\t\t\t\t\t<div className='Sidebar__label'>\n\t\t\t\t\t\tClient name:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Sidebar__user-name'>\n\t\t\t\t\t\t{ store.userName }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{ store.sessionList.length ?\n\t\t\t\t\t<div className='Sidebar__sessions'>\n\t\t\t\t\t\t<div className='Sidebar__label'>\n\t\t\t\t\t\t\tSessions:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Sidebar__session-list'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstore.sessionList.map(sessionId => {\n\t\t\t\t\t\t\t\tconst session = store.getSession(sessionId);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\t\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\t\t\t\t\t\tonTap={ this.onSessionSelect }\n\t\t\t\t\t\t\t\t\t\tclassName={ 'Sidebar__session' + (currentSessionId === sessionId ? ' Sidebar__session_active' : '') }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ session.name }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t: null }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sidebar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/components/Sidebar.tsx","import DevTools, { configureDevtool } from 'mobx-react-devtools';\nimport * as React from 'react';\n\nconfigureDevtool({\n\tlogEnabled: true\n});\n\nimport { Context, contextTypes } from 'shared/context';\nimport Store from 'shared/Store';\n\nimport CreateSession from 'shared/views/CreateSession';\nimport JoinSession from 'shared/views/JoinSession';\nimport Sessions from 'shared/views/Sessions';\nimport SessionViewer from 'shared/views/SessionViewer';\nimport { TabComponentProps, TabId } from 'shared/views/tabs';\n\nimport { TabsInfo } from './tabs';\n\nimport Sidebar from 'desktop/components/Sidebar';\nimport Tabs from 'shared/components/Tabs';\n\nimport './Main.less';\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId,\n\tsessionId: string | null\n};\n\nconst ContentClasses: {[tabId in TabId]: React.ComponentClass<TabComponentProps> } = {\n\tsessions: Sessions,\n\tcreate: CreateSession,\n\tjoin: JoinSession\n};\n\nclass Main extends React.PureComponent<Props, State> {\n\tprivate store: Store;\n\tpublic static childContextTypes = contextTypes;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.store = new Store();\n\t\tthis.state = { tabId: 'sessions', sessionId: null };\n\t}\n\n\tpublic getChildContext(): Context {\n\t\treturn { store: this.store };\n\t}\n\n\tprivate selectTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId, sessionId: null });\n\t}\n\n\tprivate navigateToSession = (sessionId: string) => {\n\t\tthis.setState({ tabId: 'sessions', sessionId });\n\t}\n\n\tprivate navigateToTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId, sessionId: null });\n\t}\n\n\tpublic render() {\n\t\tconst { tabId, sessionId } = this.state;\n\t\tconst ContentClass = sessionId ? SessionViewer : ContentClasses[tabId];\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<div className='Main__header'>\n\t\t\t\t\t<div className='Main__title'>\n\t\t\t\t\t\tSwift\n\t\t\t\t\t</div>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\ttabs={ TabsInfo }\n\t\t\t\t\t\tcategoryIndex={ 0 }\n\t\t\t\t\t\tcurrentTabId={ tabId }\n\t\t\t\t\t\tonTabSelect={ this.selectTab }\n\t\t\t\t\t\thideIndicator={ !!sessionId }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='Main__body'>\n\t\t\t\t\t<Sidebar selectSession={ this.navigateToSession } sessionId={ sessionId } />\n\t\t\t\t\t<div className='Main__tab-container'>\n\t\t\t\t\t\t<ContentClass\n\t\t\t\t\t\t\tnavigateToSession={ this.navigateToSession }\n\t\t\t\t\t\t\tnavigateToTab={ this.navigateToTab }\n\t\t\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{ __IS_DEV__ &&  <DevTools /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/views/Main.tsx","import { TabId } from 'shared/views/tabs';\n\nimport { LabelProps } from 'shared/components/Tabs';\n\nexport const TabMap: {[tabId in TabId]: React.StatelessComponent<LabelProps>}  = {\n\tsessions: () => 'My sessions' as any,\n\tcreate: () => 'Create Sessions' as any,\n\tjoin: () => 'Join Sessions' as any\n};\n\nconst order: TabId[] = ['sessions', 'create', 'join'];\nexport const TabsInfo = [order.map(tabId => ({ tabId, Label: TabMap[tabId] }))];\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/views/tabs.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\tprivate isConnecting = false;\n\t// private socketIdPerUserId: {[userId: string]: string} = {};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false });\n\n\t\tthis.socket.on('data', (clientId: string, data: any) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('data', clientId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t\tthis.socket.on('join', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('join', sessionId, clientId);\n\t\t});\n\t\tthis.socket.on('sessionClient', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('sessionClient', sessionId, clientId);\n\t\t});\n\t}\n\n\tprivate connect(): Promise<void> {\n\t\tif (this.isConnecting || this.socket.connected) { return Promise.resolve(); }\n\t\tthis.isConnecting = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tthis.isConnecting = false;\n\t\t\t\tlog(`Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tpublic async openSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('openSession', sessionId);\n\t}\n\n\tpublic async closeSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('closeSession', sessionId);\n\t\tthis.disconnect();\n\t}\n\n\tpublic async joinSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('join', sessionId);\n\t}\n\n\tprivate disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.isConnecting = false;\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic async send(remoteClientId: string, data: any) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tlog('sending', data, 'to', remoteClientId);\n\t\tthis.socket.emit('data', remoteClientId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\n\nimport { DocChange } from 'shared/Store';\n\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'client', sessionId: string } |\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nexport type RTCEvent = {\n\t'connect': RTCDataChannel,\n\t'get-docs': string[],\n\t'docs': any[],\n\t'doc-changes': { sessionId: string, changes: {[docId: string]: DocChange[]} },\n};\n\nabstract class ICustomEmitter extends EventEmitter {\n\tpublic on<K extends keyof RTCEvent>(type: K, cb: (value: RTCEvent[K]) => void): this {\n\t\tEventEmitter.prototype.on.call(this, type, cb);\n\t\treturn this;\n\t}\n\n\tpublic emit<K extends keyof RTCEvent>(type: K, value: RTCEvent[K]): boolean {\n\t\treturn EventEmitter.prototype.emit.call(this, type, value);\n\t}\n}\n\n// tslint:disable:max-classes-per-file\nclass RTCClient extends ICustomEmitter {\n\tprivate pc: RTCPeerConnection;\n\tprivate gatewayClient: GatewayClient;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate remoteClientId: string;\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor(remoteClientId: string, gatewayClient: GatewayClient) {\n\t\tsuper();\n\n\t\tthis.gatewayClient = gatewayClient;\n\t\tthis.gatewayClient.on('data', this.onGatewayMessage);\n\t\tthis.remoteClientId = remoteClientId;\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tpublic async initiateConnection() {\n\t\tlog('initiateConnection');\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel with ' + this.remoteClientId);\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\t\tthis.sendChannel.onerror = this.onSendChannelError;\n\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'offer', sessionDescription });\n\t}\n\n\tpublic onGatewayMessage = async (fromClientId: string, msg: Message) => {\n\t\tif (fromClientId !== this.remoteClientId) { return; }\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onSendChannelError = (e: ErrorEvent) => {\n\t\tlog('onSendChannelError', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconst { type, data } = JSON.parse(event.data);\n\t\t\tthis.emit(type, data);\n\t\t};\n\t\tthis.gatewayClient.removeListener('data', this.onGatewayMessage);\n\t\tthis.emit('connect', this.sendChannel!);\n\t}\n\n\tpublic getDataChannel() { return this.sendChannel; }\n\n\tpublic sendMessage<K extends keyof RTCEvent>(type: K, data: RTCEvent[K]): void {\n\t\tif (this.sendChannel) {\n\t\t\tthis.sendChannel.send(JSON.stringify({ type, data }));\n\t\t} else {\n\t\t\tlog('trying to send a message before the channel is opened');\n\t\t}\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteClientId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import { Doc as CRDTDoc } from 'crdt';\nimport * as debug from 'debug-logger';\nimport { IObjectChange, observable, observe } from 'mobx';\nimport * as dcstream from 'rtc-dcstream';\nimport * as uuid from 'uuid/v4';\n\nimport GatewayClient from 'shared/GatewayClient';\n\nimport Action from 'shared/actions/Action';\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport UpdateDoc from 'shared/actions/UpdateDoc';\n\nimport Doc from 'shared/models/Doc';\nimport Item from 'shared/models/Item';\nimport Session, { ISession } from 'shared/models/Session';\nimport User, { IUser } from 'shared/models/User';\n\nimport RTCClient from 'shared/RTCClient';\nimport * as UAParser from 'ua-parser-js';\n\nconst log = debug('swift:RTCClient');\n\nexport type DocChange = {\n\tname: string;\n\tdocId: string;\n\ttype: IObjectChange['type'];\n\tnewValue: any;\n};\n\nclass Store {\n\t@observable public sessionList: string[] = [];\n\tprivate docs: { [docId: string]: Doc } = {};\n\t// public userId = 'user-' + uuid();\n\t@observable public userName: string;\n\tprivate gatewayClient: GatewayClient;\n\tprivate RTCClients: { [clientId: string]: RTCClient } = {};\n\n\tpublic crdts: {[sessionId: string]: CRDTDoc<ISession | IUser>} = {};\n\tpublic updating: {[id: string]: true} = {};\n\n\tpublic pendingSeqActions: Array<() => void> = [];\n\n\tpublic userIdPerSessionId: {[sessionId: string]: string} = {};\n\n\tconstructor() {\n\t\t(window as any).store = this;\n\n\t\tconst parser = new UAParser();\n\t\tconst res = parser.getResult();\n\t\tthis.userName = res.os.name + ' - ' + res.browser.name;\n\n\t\tthis.gatewayClient = new GatewayClient();\n\t\tthis.gatewayClient.on('join', this.onJoin);\n\t\tthis.gatewayClient.on('sessionClient', this.onSessionUser);\n\t}\n\n\tpublic applyPendingSeqAction() {\n\t\tif (this.pendingSeqActions.length) {\n\t\t\tthis.pendingSeqActions.forEach(action => action());\n\t\t\tthis.pendingSeqActions = [];\n\t\t}\n\t}\n\n\tpublic getDoc(docId: string): Doc {\n\t\treturn this.docs[docId];\n\t}\n\n\tpublic addDoc(doc: Doc) {\n\t\tthis.docs[doc.id] = doc;\n\t}\n\n\tprivate onJoin = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tprivate onSessionUser = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.initiateConnection();\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tpublic createCRDT(sessionId: string) {\n\t\tconst crdt = this.crdts[sessionId] = new CRDTDoc();\n\n\t\t// TODO: how do we deal with the same user in different CRDTDOC ?\n\t\tconst userId = 'user-' + uuid();\n\t\tthis.userIdPerSessionId[sessionId] = userId;\n\t\tthis.updating[userId] = true;\n\t\tconst user = new User(this, crdt, userId, this.userName);\n\t\tthis.addDoc(user);\n\t\tdelete this.updating[userId];\n\n\t\tcrdt.on('row_update', (row) => {\n\t\t\tconst id = row.get('id');\n\t\t\tif (this.updating[id]) { return; }\n\t\t\tthis.updating[id] = true;\n\n\t\t\tif (this.docs[id]) {\n\t\t\t\tthis.executeAction(new UpdateDoc(id, this.docs[id].changes));\n\t\t\t} else {\n\t\t\t\tthis.executeAction(new CreateDoc(row.toJSON(), sessionId));\n\t\t\t}\n\n\t\t\tdelete this.updating[id];\n\t\t});\n\t}\n\n\tprivate setupClient(client: RTCClient) {\n\t\t// client.on('get-docs', (docIds: string[]) => {\n\t\t\t// client.sendMessage('docs', docIds.map(docId => this.docs[docId].toModel()));\n\t\t// });\n\n\t\t// client.on('docs', (objects: any[]) => {\n\t\t// \tthis.executeAction(new DocsUpdate(objects), true);\n\t\t// });\n\n\t\t// client.on('doc-changes', (docChanges) => {\n\t\t\t// const { changes, sessionId } = docChanges;\n\t\t\t// const session = this.docs[sessionId] as Session;\n\t\t\t// if (session.ownerId === this.user.id) { // send to others\n\t\t\t// \tfor (const userId of session.userIds) {\n\t\t\t// \t\tthis.RTCClients[userId].sendMessage('doc-changes', docChanges);\n\t\t\t// \t}\n\t\t\t// } else {\n\t\t\t// \tconsole.log(changes);\n\t\t\t// }\n\t\t// });\n\t}\n\n\tpublic openSession(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.openSession(sessionId);\n\t}\n\n\tpublic closeSession(sessionId: string) {\n\t\tthis.gatewayClient.closeSession(sessionId);\n\t}\n\n\tpublic join(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.joinSession(sessionId);\n\t\treturn new Promise((resolve) => {\n\t\t\t// TODO handle error and reject ?\n\t\t\tconst dispose = observe(this.sessionList, () => {\n\t\t\t\tif (this.sessionList.includes(sessionId)) {\n\t\t\t\t\tdispose();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getSession(sessionId: string): Session {\n\t\treturn this.docs[sessionId] as Session;\n\t}\n\n\tpublic removeSession(sessionId: string) {\n\t\tconst session = this.docs[sessionId] as Session;\n\t\tif (!session) { return log('trying to remove an inexisting session', sessionId); }\n\t\tdelete this.docs[sessionId];\n\t}\n\n\tpublic getUser(userId: string): User {\n\t\treturn this.docs[userId] as User;\n\t}\n\n\tpublic getItem(itemId: string): Item {\n\t\treturn this.docs[itemId] as Item;\n\t}\n\n\tpublic executeAction<A extends Action>(action: A, sideEffect = false): A {\n\t\taction.run(this);\n\t\treturn action;\n\t}\n}\n\nexport default Store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Store.ts","import { action } from 'mobx';\nimport Store from 'shared/Store';\n\nexport type ActionsType =\n\t'createSession' | 'updateSessionName' | 'updateDoc' |\n\t'updateUserName' | 'addSession' | 'createDoc' | 'addItem' | 'removeItem';\n\nabstract class IAction {\n\tpublic type: ActionsType;\n\tprotected store!: Store;\n\n\tconstructor(type: ActionsType) {\n\t\tthis.type = type;\n\t}\n\n\tpublic run(store: Store) {\n\t\tthis.store = store;\n\t\taction(this.type, () => this.execute())();\n\t}\n\n\tprotected abstract execute(): boolean;\n}\n\nexport default IAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/Action.ts","import { IDoc } from 'shared/models/Doc';\nimport docClass from 'shared/models/docClass';\nimport Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateDoc<D extends IDoc> extends Action {\n\tprivate row: D;\n\tprivate sessionId: string;\n\n\tconstructor(row: D, sessionId: string) {\n\t\tsuper('createDoc');\n\n\t\tthis.row = row;\n\t\tthis.sessionId = sessionId;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = docClass[this.row.type].instantiate(this.store, this.store.crdts[this.sessionId], this.row);\n\t\tthis.store.addDoc(doc);\n\n\t\tif (doc instanceof Session && !this.store.sessionList.includes(this.row.id)) {\n\t\t\tthis.store.sessionList.push(this.row.id);\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default CreateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateDoc.ts","import Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateSession extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\tprivate ownerId: string;\n\n\tconstructor(id: string, name: string, ownerId: string) {\n\t\tsuper('createSession');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t}\n\n\tprotected execute() {\n\t\tif (!this.store.crdts[this.id]) {\n\t\t\tthis.store.createCRDT(this.id);\n\t\t}\n\t\tthis.store.updating[this.id] = true;\n\t\tconst session = new Session(this.store, this.store.crdts[this.id], this.id, this.name, this.ownerId);\n\t\tdelete this.store.updating[this.id];\n\t\tthis.store.addDoc(session);\n\t\tthis.store.sessionList.push(this.id);\n\t\treturn true;\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateSession.ts","import { Changed } from 'crdt';\n\nimport { IDoc } from 'shared/models/Doc';\nimport Action from './Action';\n\nclass UpdateDoc extends Action {\n\tprivate docId: string;\n\tprivate changes: Changed<IDoc>;\n\n\tconstructor(docId: string, changes: Changed<IDoc>) {\n\t\tsuper('updateDoc');\n\n\t\tthis.docId = docId;\n\t\tthis.changes = changes;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = this.store.getDoc(this.docId);\n\n\t\tfor (const key in this.changes) {\n\t\t\t(doc as any)[key] = (this.changes as any)[key];\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default UpdateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateDoc.ts","import Action from './Action';\n\nclass UpdateUserName extends Action {\n\tprivate name: string;\n\n\tconstructor(name: string) {\n\t\tsuper('updateUserName');\n\n\t\tthis.name = name;\n\t}\n\n\tprotected execute() {\n\t\tfor (const userId in this.store.userIdPerSessionId) {\n\t\t\tconst user = this.store.getUser(userId);\n\t\t\tuser.name = this.name;\n\t\t}\n\t\tthis.store.userName = this.name;\n\t\treturn true;\n\t}\n}\n\nexport default UpdateUserName;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateUserName.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | null) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = Props> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\tpublic div: HTMLDivElement | null = null;\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tprivate onRef = (div: HTMLDivElement | null) => {\n\t\tthis.div = div;\n\t\tif (this.props.elementRef) { this.props.elementRef(div); }\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.onRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './SessionItem.less';\n\nexport type Props = {\n\tsessionId: string,\n\tonEnterSession(sessionId: string): void\n};\n\n@observer\nclass SessionItem extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate enterSession = () => {\n\t\tthis.props.onEnterSession(this.props.sessionId);\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId } = this.props;\n\t\tconst store = this.context.store;\n\t\tconst session = store.getSession(sessionId);\n\n\t\tconst count = session.itemIds.length;\n\n\t\treturn (\n\t\t\t<Button className='SessionItem' onTap={ this.enterSession }>\n\t\t\t\t<div className='SessionItem__session-info'>\n\t\t\t\t\t<div className='SessionItem__session-name'>{ session.name }</div>\n\t\t\t\t\t<div className='SessionItem__item-count'>{ `${count} item${ count > 1 ? 's' : '' }` }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='SessionItem__client-list'>\n\t\t\t\t\t<div className='SessionItem__client-list-label'>Connected clients:</div>\n\t\t\t\t\t{ session.userIds.map(userId => {\n\t\t\t\t\t\tconst isYou = userId === store.userIdPerSessionId[sessionId];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ 'SessionItem__client' + (isYou ? ' SessionItem__client_you' : '') }\n\t\t\t\t\t\t\t\tkey={ userId }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ store.getUser(userId).name }\n\t\t\t\t\t\t\t\t{ isYou ? ' (you)' : null }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}) }\n\t\t\t\t</div>\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default SessionItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionItem.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\nclass SessionScanner extends React.PureComponent<Props> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.props.onSessionScanned(content);\n\t\t});\n\t}\n\n\tpublic scan = (): Promise<void> => {\n\t\treturn Instascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\tif (cameras.length > 0) {\n\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t} else {\n\t\t\t\tlog('No cameras found.');\n\t\t\t\tthrow new Error('No cameras found.');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stop = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\treturn (\n\t\t\t<video ref={ ref => this.videoElt = ref } className='session-scanner' />\n\t\t);\n\t}\n}\n\nexport default SessionScanner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import * as React from 'react';\n\nimport Button, { IButtonClass } from 'shared/components/Button';\n\nimport './Tabs.less';\n\nexport type LabelProps = { onUpdate: () => void };\n\ntype TabButtonProps = { tabId: string };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nconst INDI_WIDTH = 100;\n\nexport type Props = {\n\ttabs: Array<Array<{ tabId: string, Label: React.StatelessComponent<LabelProps> }>>,\n\tcategoryIndex: number,\n\tcurrentTabId: string,\n\tonTabSelect(tabId: string | string): void,\n\thideIndicator?: boolean\n};\n\nclass Tabs extends React.PureComponent<Props> {\n\tprivate indicator: HTMLDivElement | null = null;\n\tprivate tabsRef: { [tabId: string]: Button<TabButtonProps> | null } = {};\n\tprivate tabWidth: { [tabId: string]: number } = {};\n\tprivate labelUpdated = true;\n\n\tpublic static defaultProps: Partial<Props> = { hideIndicator: false };\n\n\tpublic componentDidMount() {\n\t\tthis.positionIndicator();\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tthis.positionIndicator();\n\t}\n\n\tprivate positionIndicator = () => {\n\t\tif (this.labelUpdated) {\n\t\t\tthis.labelUpdated = false;\n\t\t\tfor (const tabId in this.tabsRef) {\n\t\t\t\tconst button = this.tabsRef[tabId];\n\t\t\t\tif (button) {\n\t\t\t\t\tthis.tabWidth[tabId] = button.div!.clientWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst { currentTabId, tabs, categoryIndex } = this.props;\n\t\tlet fullWidth = 0;\n\t\tlet passedCurrentTab = false;\n\t\tlet beforeWidth = 0;\n\t\tfor (const { tabId } of tabs[categoryIndex]) {\n\t\t\tif (tabId === currentTabId) { passedCurrentTab = true; }\n\t\t\tconst width = this.tabWidth[tabId];\n\t\t\tif (!passedCurrentTab) {\n\t\t\t\tbeforeWidth += width;\n\t\t\t}\n\t\t\tfullWidth += width;\n\t\t}\n\t\tbeforeWidth -= fullWidth / 2;\n\n\t\tthis.indicator!.style.transform =\n\t\t\t`translate3d(${beforeWidth + INDI_WIDTH / 2}px, 0, 0) scaleX(${ this.tabWidth[currentTabId] / INDI_WIDTH })`;\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.props.onTabSelect(button.props.tabId);\n\t}\n\n\tprivate onLabelUpdate = () => {\n\t\tthis.labelUpdated = true;\n\t}\n\n\tpublic render() {\n\t\tconst { currentTabId, tabs, categoryIndex, hideIndicator } = this.props;\n\n\t\treturn (\n\t\t\t<div className='Tabs'>\n\t\t\t\t<div className='Tabs__container' style={ { transform: `translate3d(0, ${ categoryIndex * -100 }%,0)` } }>\n\t\t\t\t\t{\n\t\t\t\t\t\ttabs.map((category, i) =>\n\t\t\t\t\t\t\t<div className='Tabs__category' key={ i }>\n\t\t\t\t\t\t\t\t<div className='Tabs__category_container' key={ i }>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcategory.map(({ tabId, Label }) =>\n\t\t\t\t\t\t\t\t\t\t<TabButton\n\t\t\t\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\t\t\t\tclassName={ 'Tabs__tab' + (currentTabId === tabId ? ' Tabs__tab_active' : '') }\n\t\t\t\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t\t\t\t\tref={ ref => this.tabsRef[tabId] = ref }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Label onUpdate={ this.onLabelUpdate } />\n\t\t\t\t\t\t\t\t\t\t</TabButton>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ 'Tabs__indicator' + (hideIndicator ? ' Tabs__indicator_hidden' : '') }\n\t\t\t\t\tref={ ref => this.indicator = ref }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Tabs.tsx","import * as React from 'react';\n\nimport './TextField.less';\n\nexport type Props = {\n\tlabel: string,\n\tplaceholder: string,\n\tclassName?: string\n};\n\nclass TextField extends React.PureComponent<Props> {\n\tprivate mainDiv: HTMLDivElement | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\tprivate content: string = '';\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { hasContent: false };\n\t}\n\n\tprivate onChange = () => {\n\t\tthis.content = this.input!.value;\n\t}\n\n\tprivate onMainRef = (div: HTMLDivElement | null) => {\n\t\tthis.mainDiv = div;\n\t}\n\n\tprivate onBlur = () => {\n\t\tthis.mainDiv!.className = this.generateClassName();\n\t}\n\n\tprivate onInputRef = (input: HTMLInputElement | null) => {\n\t\tthis.input = input;\n\t}\n\n\tprivate generateClassName(): string {\n\t\treturn 'TextField' + (this.content.length ? ' TextField_hasContent' : '');\n\t}\n\n\tpublic getValue() { return this.content; }\n\n\tpublic setValue(value: string) {\n\t\tthis.content = value;\n\t\tthis.input!.value = value;\n\t}\n\n\tpublic blur() { this.input!.blur(); }\n\n\tpublic render() {\n\t\tconst { label, placeholder } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ this.generateClassName() } ref={ this.onMainRef }>\n\t\t\t\t<div className='TextField__label'>{ label }</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='TextField__input'\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tref={ this.onInputRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/TextField.tsx","import * as PropTypes from 'prop-types';\nimport Store from './Store';\n\nexport type Context = {\n\tstore: Store\n};\n\nexport const contextTypes: {[T in keyof Context]: PropTypes.Requireable<any>} = {\n\tstore: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/context.ts","import { Atom } from 'mobx';\n\nimport Store from 'shared/Store';\n\nimport { Doc as CrdtDoc, Row as CrdtDow } from 'crdt';\n\nexport type DocType = 'session' | 'user' | 'item';\n\nexport function linked(docPrototype: any, property: string) {\n\tconst atom = new Atom(property);\n\n\tconst getter = function(this: Doc) {\n\t\tatom.reportObserved();\n\t\treturn (this as any).__data[property];\n\t};\n\n\tconst setter = function(this: Doc, val: any) {\n\t\tconst value = (this as any).__data[property];\n\t\tif (value === val) { return; }\n\t\t(this as any).__data[property] = val;\n\t\tif (this.row && this.row.get(property) !== val) {\n\t\t\tthis.row.set(property, val);\n\t\t}\n\t\tatom.reportChanged();\n\t};\n\n\tif (delete docPrototype[property]) {\n\t\tObject.defineProperty(docPrototype, property, {\n\t\t\tget: getter,\n\t\t\tset: setter\n\t\t});\n\t}\n}\n\nexport interface IDoc {\n\tid: string;\n\ttype: DocType;\n}\n\nabstract class Doc<M extends IDoc = any> {\n\tprotected __data = {};\n\t@linked public readonly id: string;\n\t@linked public readonly type: DocType;\n\tpublic row!: CrdtDow<M>;\n\tprotected store: Store;\n\tpublic changes: {[K in keyof M]?: M[K]};\n\n\tconstructor(store: Store, id: string, type: DocType) {\n\t\tthis.store = store;\n\t\tthis.id = id;\n\t\tthis.type = type;\n\t\tthis.changes = {};\n\t}\n\n\tprotected initCRDT(crdt: CrdtDoc): void {\n\t\tthis.row = crdt.get(this.id);\n\t\tif (!this.row.get('type')) {\n\t\t\tthis.row.set(this.toModel());\n\t\t}\n\n\t\tthis.row.on('change', (changed) => {\n\t\t\tObject.assign(this.changes, changed);\n\t\t});\n\t}\n\n\tprotected createDoc<O>(obj: O): O & IDoc {\n\t\treturn Object.assign(obj, { id: this.id, type: this.type });\n\t}\n\n\tpublic abstract toModel(): M;\n}\n\nexport default Doc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Doc.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport type TextItem = { type: 'text', content: string };\n\nexport type ItemContent = TextItem;\n\nexport interface IItem extends IDoc {\n\tcreatorId: string;\n\tcreationDate: string;\n\titemContent: ItemContent;\n}\n\nclass Item extends Doc<IItem> {\n\t@linked public creatorId: string;\n\t@linked public creationDate: string;\n\t@linked public itemContent: ItemContent;\n\n\tconstructor(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, id: string, creatorId: string, creationDate: string, itemContent: ItemContent\n\t) {\n\t\tsuper(store, id, 'item');\n\t\tthis.creatorId = creatorId;\n\t\tthis.creationDate = creationDate;\n\t\tthis.itemContent = itemContent;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, { id, creatorId, creationDate, itemContent }: IItem\n\t): Item {\n\t\treturn new Item(store, crdt, id, creatorId, creationDate, itemContent);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tcreationDate: this.creationDate,\n\t\t\tcreatorId: this.creatorId,\n\t\t\titemContent: this.itemContent\n\t\t});\n\t}\n}\n\nexport default Item;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Item.ts","import { Doc as CRDTDoc } from 'crdt';\nimport { observable } from 'mobx';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport createSeq from './createSeq';\n\nimport Store from 'shared/Store';\n\nexport interface ISession extends IDoc {\n\townerId: string;\n\tname: string;\n}\n\nclass Session extends Doc<ISession> {\n\t@linked public readonly ownerId: string;\n\t@linked public name: string;\n\t@observable public userIds: string[];\n\t@observable public itemIds: string[];\n\n\tconstructor(store: Store, crdt: CRDTDoc<IDoc>, id: string, name: string, ownerId: string) {\n\t\tsuper(store, id, 'session');\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t\tthis.userIds = [];\n\t\tthis.itemIds = [];\n\n\t\tthis.initCRDT(crdt);\n\t\tcreateSeq(crdt, store, 'type', 'item', this.itemIds, row => row.get('id'));\n\t\tcreateSeq(crdt, store, 'type', 'user', this.userIds, row => row.get('id'));\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CRDTDoc<IDoc>, { id, name, ownerId }: ISession): Session {\n\t\treturn new Session(store, crdt, id, name, ownerId);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\townerId: this.ownerId,\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default Session;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Session.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport interface IUser extends IDoc {\n\tname: string;\n}\n\nclass User extends Doc<IUser> {\n\t@linked public name: string;\n\n\tconstructor(store: Store, crdt: CrdtDoc, id: string, name: string) {\n\t\tsuper(store, id, 'user');\n\t\tthis.name = name;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CrdtDoc<IDoc>, { id, name }: IUser): User {\n\t\treturn new User(store, crdt, id, name);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/User.ts","import { Doc as CRDTDoc, Row } from 'crdt';\nimport { IDoc } from 'shared/models/Doc';\nimport Store from 'shared/Store';\n\nexport default function createSeq<D extends IDoc, K extends keyof D, L>(\n\tcrdt: CRDTDoc<D>, store: Store, key: K, value: D[K], list: L[], rowToValue: (row: Row<D>) => L\n) {\n\tconst seq = crdt.createSeq(key, value);\n\n\tseq.forEach(row => list.push(rowToValue(row)));\n\n\tseq.on('add', row => {\n\t\tconst index = seq.indexOf(row);\n\t\tif (index !== -1) {\n\t\t\tconst v = rowToValue(row);\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 0, v);\n\t\t\t});\n\t\t}\n\t});\n\n\tseq.on('remove', row => {\n\t\tconst v = rowToValue(row);\n\t\tconst index = list.indexOf(v);\n\t\tif (index !== -1) {\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 1);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/createSeq.ts","import { Doc as CRDTDoc } from 'crdt';\n\nimport Doc, { DocType, IDoc } from './Doc';\nimport Item from './Item';\nimport Session from './Session';\nimport User from './User';\n\nimport Store from 'shared/Store';\n\nconst docClass: {[D in DocType]: {\n\tnew(...args: any[]): Doc;\n\tinstantiate(store: Store, crdt: CRDTDoc<IDoc>, data: any): Doc;\n}} = {\n\tsession: Session,\n\tuser: User,\n\titem: Item\n};\n\nexport default docClass;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/docClass.ts","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts","import * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateSessionAction from 'shared/actions/CreateSession';\n\nimport Button from 'shared/components/Button';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './CreateSession.less';\n\nclass CreateSession extends React.PureComponent<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate sessionNameField!: TextField | null;\n\n\tprivate createSession = () => {\n\t\tconst value = this.sessionNameField!.getValue();\n\t\tif (value === '') { return; }\n\n\t\tconst store = this.context.store;\n\t\tconst sessionId = 'session-' + uuid();\n\t\tstore.openSession(sessionId);\n\t\tstore.executeAction(new CreateSessionAction(\n\t\t\tsessionId,\n\t\t\tvalue,\n\t\t\tstore.userIdPerSessionId[sessionId]\n\t\t));\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tprivate validate = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.createSession();\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className='CreateSession'>\n\t\t\t\t<div className='view__explanation'>Create a session to allow another device to connect.</div>\n\t\t\t\t<form className='view__box' onSubmit={ this.validate }>\n\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel='choose a name for your session'\n\t\t\t\t\t\t\tplaceholder='My session'\n\t\t\t\t\t\t\tref={ ref => this.sessionNameField = ref }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='view__column CreateSession__create-column'>\n\t\t\t\t\t\t<Button className='action-button  CreateSession__Create' onTap={ this.createSession }>\n\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/CreateSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './JoinSession.less';\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass JoinSession extends React.PureComponent<TabComponentProps, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate scanner: SessionScanner | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\n\tconstructor(props: TabComponentProps, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tisScanning: false\n\t\t};\n\t}\n\n\tprivate onSessionScanned = (sessionId: string) => {\n\t\tthis.setState({ isScanning: false });\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.setState({ isScanning: false }, () => this.scanner!.stop());\n\t}\n\n\tprivate startScanning = () => {\n\t\ttry {\n\t\t\tthis.scanner!.scan();\n\t\t\tthis.setState({ isScanning: true });\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\tprivate validateSession = () => {\n\t\tconst sessionId = this.input!.value;\n\t\tif (!sessionId) { return; }\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate join(sessionId: string) {\n\t\tthis.context.store.join(sessionId).then(() => {\n\t\t\tthis.props.navigateToSession(sessionId);\n\t\t});\n\t}\n\n\tprivate formValidate = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.validateSession();\n\t}\n\n\tpublic render() {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className={ 'JoinSession' + (isScanning ? ' JoinSession_scanning' : '') }>\n\t\t\t\t<div className='view__explanation'>Join an existing session by scanning its QR code or entering its ID.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Scan a QR Code</div>\n\t\t\t\t\t<Button onTap={ this.startScanning } className='action-button'>Start Scanning</Button>\n\t\t\t\t\t<div className='JoinSession__scanner'>\n\t\t\t\t\t\t<SessionScanner onSessionScanned={ this.onSessionScanned } ref={ ref => this.scanner = ref } />\n\t\t\t\t\t\t<Button onTap={ this.stopScanning } className='action-button JoinSession__StopScanning'>Stop Scanning</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form className='view__box' onSubmit={ this.formValidate }>\n\t\t\t\t\t<div className='view__header'>Enter a session ID</div>\n\t\t\t\t\t<input className='JoinSession__id-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.validateSession } className='action-button'>Join</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoinSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/JoinSession.tsx","import { observer } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\nimport { IItem } from 'shared/models/Item';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './SessionViewer.less';\n\n@observer\nclass SessionViewer extends React.Component<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate closingTimeout: number = -1;\n\tprivate input!: HTMLInputElement | null;\n\n\tpublic componentWillUnmount() {\n\t\twindow.clearTimeout(this.closingTimeout);\n\t}\n\n\tpublic open(sessionId: string) {\n\t\tthis.setState({ sessionId });\n\t}\n\n\tprivate addText = () => {\n\t\tconst value = this.input!.value;\n\t\tconst sessionId = this.props.sessionId;\n\t\tif (value === '' || !sessionId) { return; }\n\n\t\tconst itemId = 'item-' + uuid();\n\t\tthis.context.store.executeAction(new CreateDoc<IItem>({\n\t\t\tid: itemId,\n\t\t\ttype: 'item',\n\t\t\tcreatorId: this.context.store.userIdPerSessionId[sessionId],\n\t\t\tcreationDate: new Date().toISOString(),\n\t\t\titemContent: { type: 'text', content: value }\n\t\t}, sessionId));\n\t\tthis.input!.value = '';\n\t}\n\n\tprivate validateAddText = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.addText();\n\t}\n\n\tprivate goBack = () => {\n\t\tthis.props.navigateToTab('sessions');\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst { sessionId } = this.props;\n\t\tconst session = sessionId && store.getSession(sessionId) || null;\n\n\t\treturn (\n\t\t\t<div className='SessionViewer'>\n\t\t\t\t<div className='SessionViewer__header'>\n\t\t\t\t\t<Button className='SessionViewer__name'>{ session && session.name }</Button>\n\t\t\t\t\t<Button className='SessionViewer__back' onTap={ this.goBack }>Back</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className='SessionViewer__body'>\n\t\t\t\t{\n\t\t\t\t\tsession && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<div className='SessionViewer__info'>\n\t\t\t\t\t\t\t\t<div className='user-select'>{ session.id }</div>\n\t\t\t\t\t\t\t\t<QRCode value={ session.id } size={ 256 } />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='SessionViewer__item-list'>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsession.itemIds.map(itemId =>\n\t\t\t\t\t\t\t\t\t<div className='SessionViewer__item' key={ itemId }>\n\t\t\t\t\t\t\t\t\t\t{ store.getItem(itemId).itemContent.content }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<form className='SessionViewer__add-text' onSubmit={ this.validateAddText }>\n\t\t\t\t\t\t\t\t<input className='SessionViewer__text-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t\t\t\t<Button onTap={ this.addText }>Send text</Button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/SessionViewer.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport UpdateUserName from 'shared/actions/UpdateUserName';\n\nimport Button from 'shared/components/Button';\nimport SessionItem from 'shared/components/SessionItem';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './Sessions.less';\n\n@observer\nclass Sessions extends React.Component<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate clientNameField!: TextField | null;\n\n\tprivate onEnterSession = (sessionId: string) => {\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tprivate updateUserName = () => {\n\t\tconst userName = this.clientNameField!.getValue();\n\t\tif (userName === '') { return; }\n\n\t\tthis.clientNameField!.setValue('');\n\t\tthis.clientNameField!.blur();\n\n\t\tconst store = this.context.store;\n\t\tif (userName !== store.userName) {\n\t\t\tstore.executeAction(new UpdateUserName(userName));\n\t\t}\n\t}\n\n\tprivate userNameValidate = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.updateUserName();\n\t}\n\n\tprivate create = () => {\n\t\tthis.props.navigateToTab('create');\n\t}\n\n\tprivate join = () => {\n\t\tthis.props.navigateToTab('join');\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst sessionList = store.sessionList;\n\n\t\treturn (\n\t\t\t<div className='Sessions'>\n\t\t\t\t{\n\t\t\t\t\tsessionList.length === 0 ?\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className='view__explanation'>To start, setup your name.</div>\n\t\t\t\t\t<form className='view__box' onSubmit={ this.userNameValidate }>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel='choose a name to identify this client'\n\t\t\t\t\t\t\t\tplaceholder={ this.context.store.userName }\n\t\t\t\t\t\t\t\tref={ ref => this.clientNameField = ref }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t\t<Button className='action-button' onTap={ this.updateUserName }>\n\t\t\t\t\t\t\t\tSet\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className='view__explanation'>Create or Join a session.</div>\n\t\t\t\t\t<div className='view__box'>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t\t<Button onTap={ this.create } className='action-button'>\n\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<Button onTap={ this.join } className='action-button'>\n\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{ sessionList.map(sessionId => <SessionItem\n\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\tonEnterSession={ this.onEnterSession }\n\t\t\t\t/>) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/Sessions.tsx"],"sourceRoot":""}