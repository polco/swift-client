{"version":3,"sources":["webpack:///./src/desktop/app.tsx","webpack:///./src/desktop/views/Main.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/Store.ts","webpack:///./src/shared/actions/Action.ts","webpack:///./src/shared/actions/AddSessionUser.ts","webpack:///./src/shared/actions/CreateSession.ts","webpack:///./src/shared/actions/CreateUser.ts","webpack:///./src/shared/actions/UpdateSessionName.ts","webpack:///./src/shared/actions/UpdateUserName.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SessionItem.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/components/Tabs.tsx","webpack:///./src/shared/components/TextField.tsx","webpack:///./src/shared/context.ts","webpack:///./src/shared/models/Doc.ts","webpack:///./src/shared/models/Session.ts","webpack:///./src/shared/models/User.ts","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts","webpack:///./src/shared/views/CreateSession.tsx","webpack:///./src/shared/views/JoinSession.tsx","webpack:///./src/shared/views/Sessions.tsx","webpack:///./src/shared/views/tabs.tsx"],"names":["Mobx","__webpack_require__","React","ReactDOM","Main_1","useStrict","localStorage","setItem","div","document","getElementById","classList","add","render","createElement","default","mobx_react_devtools_1","configureDevtool","logEnabled","context_1","Store_1","CreateSession_1","JoinSession_1","Sessions_1","tabs_1","Tabs_1","ContentClasses","sessions","create","join","Main","PureComponent","[object Object]","props","context","super","this","selectTab","tabId","setState","store","state","currentTabId","ContentClass","className","tabs","TabsInfo","onTabSelect","childContextTypes","contextTypes","exports","debug","events_1","SocketIO","log","EventEmitter","userId","isConnecting","socket","transports","autoConnect","query","on","fromId","data","emit","error","sessionId","remoteUserId","connected","Promise","resolve","reject","connect","once","removeListener","disconnect","ICustomEmitter","type","cb","prototype","call","value","gatewayClient","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","fromUserId","msg","__awaiter","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","e","setupDataChannel","onSendChannelClose","onSendChannelError","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","onerror","createOffer","onmessage","event","JSON","parse","stringify","crdt_1","mobx_1","dcstream","uuid","GatewayClient_1","AddSessionUser_1","CreateUser_1","UpdateSessionName_1","UpdateUserName_1","User_1","RTCClient_1","Store","sessionList","docs","RTCClients","userCRDT","Doc","creating","onJoin","client","setupClient","dc","stream","pipe","createStream","executeAction","onSessionUser","initiateConnection","window","udpateUser","name","user","id","udpateSession","update","source","console","row","get","addDoc","docId","doc","openSession","closeSession","joinSession","action","sideEffect","run","__decorate","observable","execute","Action_1","getSession","userIds","push","Session_1","ownerId","session","getUser","ButtonPlugin_1","Factory_1","onTap","onDoubleTap","onRef","elementRef","button","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","Pdiv","mobx_react_1","QRCode","Button_1","SessionItem","Component","enterSession","onEnterSession","displayInfo","info","size","observer","Instascan","videoElt","scan","Camera","getCameras","then","cameras","length","Error","scanner","start","stop","Scanner","video","mirror","addListener","content","onSessionScanned","ref","TabButton","indicator","tabWidth","positionIndicator","fullWidth","passedCurrentTab","beforeWidth","width","transform","saveTabRef","clientWidth","map","Label","key","mainDiv","input","onChange","onMainRef","onBlur","generateClassName","onInputRef","hasContent","label","placeholder","PropTypes","object","linked","docPrototype","property","atom","Atom","getter","reportObserved","__data","setter","val","set","reportChanged","Object","defineProperty","crdt","toModel","changed","obj","assign","Doc_1","Session","initCRDT","createDoc","i","User","reduce","indexOf","spur_events_1","interactionLock_1","Plugin_1","onLock","DOMNode","current","forEach","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","Math","max","coords","repeatTap","releaseLock","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","startTap","x","y","getBoundingClientRect","SpurEvent","press","requestLockOn","longTap","now","Date","tapDiff","preventDefault","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","len","listener","lockNodes","lockContainerNodes","node","parentNode","container","parent","TextField_1","CreateSession","createSession","sessionNameField","getValue","SessionScanner_1","JoinSession","stopScanning","isScanning","startScanning","validateSession","SessionItem_1","Sessions","SessionLabel","TabMap","TabOrder"],"mappings":"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","file":"desktop-app.178535c3eceb44009394.js","sourcesContent":["import * as Mobx from 'mobx';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'shared/styles/core.less';\nimport Main from './views/Main';\n\nMobx.useStrict(true);\n\nlocalStorage.setItem('debug', 'swift*');\n\nconst div = document.getElementById('swift');\ndiv!.classList.add('desktop');\nReactDOM.render(<Main />, div);\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/app.tsx","import DevTools, { configureDevtool } from 'mobx-react-devtools';\nimport * as React from 'react';\n\nconfigureDevtool({\n\tlogEnabled: true\n});\n\nimport { Context, contextTypes } from 'shared/context';\nimport Store from 'shared/Store';\n\nimport CreateSession from 'shared/views/CreateSession';\nimport JoinSession from 'shared/views/JoinSession';\nimport Sessions from 'shared/views/Sessions';\nimport { TabId, TabsInfo } from 'shared/views/tabs';\n\nimport Tabs from 'shared/components/Tabs';\n\nimport './Main.less';\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId\n};\n\nconst ContentClasses: {[tabId in TabId]: React.ComponentClass} = {\n\tsessions: Sessions,\n\tcreate: CreateSession,\n\tjoin: JoinSession\n};\n\nclass Main extends React.PureComponent<Props, State> {\n\tprivate store: Store;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.store = new Store();\n\t\tthis.state = { tabId: 'create' };\n\t}\n\n\tpublic static childContextTypes = contextTypes;\n\n\tpublic getChildContext(): Context {\n\t\treturn { store: this.store };\n\t}\n\n\tprivate selectTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId });\n\t}\n\n\tpublic render() {\n\t\tconst currentTabId = this.state.tabId;\n\t\tconst ContentClass = ContentClasses[currentTabId];\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<Tabs\n\t\t\t\t\ttabs={ TabsInfo }\n\t\t\t\t\tcurrentTabId={ currentTabId }\n\t\t\t\t\tonTabSelect={ this.selectTab }\n\t\t\t\t/>\n\t\t\t\t<div className='Main__tab-container'><ContentClass /></div>\n\t\t\t\t{ __IS_DEV__ &&  <DevTools /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/views/Main.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\tprivate isConnecting = false;\n\n\tconstructor(userId: string) {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false, query: { userId } });\n\n\t\tthis.socket.on('data', (fromId: string, data: any) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('data', fromId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t\tthis.socket.on('join', (sessionId: string, remoteUserId: string) => {\n\t\t\tthis.emit('join', sessionId, remoteUserId);\n\t\t});\n\t\tthis.socket.on('sessionUser', (sessionId: string, remoteUserId: string) => {\n\t\t\tthis.emit('sessionUser', sessionId, remoteUserId);\n\t\t});\n\t}\n\n\tprivate connect(): Promise<void> {\n\t\tif (this.isConnecting || this.socket.connected) { return Promise.resolve(); }\n\t\tthis.isConnecting = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tthis.isConnecting = false;\n\t\t\t\tlog(`Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tpublic async openSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('openSession', sessionId);\n\t}\n\n\tpublic async closeSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('closeSession', sessionId);\n\t\tthis.disconnect();\n\t}\n\n\tpublic async joinSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('join', sessionId);\n\t}\n\n\tprivate disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.isConnecting = false;\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic async send(remoteUserId: string, data: any) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tlog('sending', data, 'to', remoteUserId);\n\t\tthis.socket.emit('data', remoteUserId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\n\nimport { DocChange } from 'shared/Store';\n\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'client', sessionId: string } |\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nexport type RTCEvent = {\n\t'connect': RTCDataChannel,\n\t'get-docs': string[],\n\t'docs': any[],\n\t'doc-changes': { sessionId: string, changes: {[docId: string]: DocChange[]} },\n};\n\nabstract class ICustomEmitter extends EventEmitter {\n\tpublic on<K extends keyof RTCEvent>(type: K, cb: (value: RTCEvent[K]) => void): this {\n\t\tEventEmitter.prototype.on.call(this, type, cb);\n\t\treturn this;\n\t}\n\n\tpublic emit<K extends keyof RTCEvent>(type: K, value: RTCEvent[K]): boolean {\n\t\treturn EventEmitter.prototype.emit.call(this, type, value);\n\t}\n}\n\n// tslint:disable:max-classes-per-file\nclass RTCClient extends ICustomEmitter {\n\tprivate pc: RTCPeerConnection;\n\tprivate gatewayClient: GatewayClient;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate remoteUserId: string;\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor(remoteUserId: string, gatewayClient: GatewayClient) {\n\t\tsuper();\n\n\t\tthis.gatewayClient = gatewayClient;\n\t\tthis.gatewayClient.on('data', this.onGatewayMessage);\n\t\tthis.remoteUserId = remoteUserId;\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tpublic async initiateConnection() {\n\t\tlog('initiateConnection');\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel with ' + this.remoteUserId);\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\t\tthis.sendChannel.onerror = this.onSendChannelError;\n\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(this.remoteUserId, { type: 'offer', sessionDescription });\n\t}\n\n\tpublic onGatewayMessage = async (fromUserId: string, msg: Message) => {\n\t\tif (fromUserId !== this.remoteUserId) { return; }\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(this.remoteUserId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onSendChannelError = (e: ErrorEvent) => {\n\t\tlog('onSendChannelError', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconst { type, data } = JSON.parse(event.data);\n\t\t\tthis.emit(type, data);\n\t\t};\n\t\tthis.gatewayClient.removeListener('data', this.onGatewayMessage);\n\t\tthis.emit('connect', this.sendChannel!);\n\t}\n\n\tpublic sendMessage<K extends keyof RTCEvent>(type: K, data: RTCEvent[K]): void {\n\t\tif (this.sendChannel) {\n\t\t\tthis.sendChannel.send(JSON.stringify({ type, data }));\n\t\t} else {\n\t\t\tlog('trying to send a message before the channel is opened');\n\t\t}\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteUserId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import { Doc as CRDTDoc } from 'crdt';\nimport * as debug from 'debug-logger';\nimport { IObjectChange, observable } from 'mobx';\nimport * as dcstream from 'rtc-dcstream';\nimport * as uuid from 'uuid/v4';\n\nimport GatewayClient from 'shared/GatewayClient';\n\nimport Doc from 'shared/models/Doc';\n\nimport Action from 'shared/actions/Action';\nimport AddSessionUser from 'shared/actions/AddSessionUser';\nimport CreateSession from 'shared/actions/CreateSession';\nimport CreateUser from 'shared/actions/CreateUser';\nimport UpdateSessionName from 'shared/actions/UpdateSessionName';\nimport UpdateUserName from 'shared/actions/UpdateUserName';\n\nimport Session from 'shared/models/Session';\nimport User from 'shared/models/User';\nimport RTCClient from 'shared/RTCClient';\n\nconst log = debug('swift:RTCClient');\n\nexport type DocChange = {\n\tname: string;\n\tdocId: string;\n\ttype: IObjectChange['type'];\n\tnewValue: any;\n};\n\nclass Store {\n\t@observable public sessionList: string[] = [];\n\tprivate docs: { [docId: string]: Doc } = {};\n\tpublic user: User;\n\tprivate gatewayClient: GatewayClient;\n\tprivate RTCClients: { [userId: string]: RTCClient } = {};\n\t// private docChanges: { [docId: string]: DocChange[] } = {};\n\n\tpublic userCRDT = new CRDTDoc();\n\tpublic creating: {[id: string]: true} = {};\n\n\tconstructor() {\n\t\t(window as any).store = this;\n\t\t(window as any).udpateUser = (name: string) => {\n\t\t\tthis.executeAction(new UpdateUserName(this.user.id, name));\n\t\t};\n\t\t(window as any).udpateSession = (name: string) => {\n\t\t\tconst sessionId = this.sessionList[0];\n\t\t\tthis.executeAction(new UpdateSessionName(sessionId, name));\n\t\t};\n\n\t\t// this.userCRDT.on('row_update', (row) => {\n\t\t// \tconsole.log(row);\n\t\t// });\n\n\t\tthis.userCRDT.on('update', (update, source) => {\n\t\t\tconsole.log('userCRDT update', update, source);  // tslint:disable-line\n\t\t});\n\n\t\tthis.userCRDT.on('create', (row) => {\n\t\t\tconst id = row.get('id');\n\t\t\tif (!this.docs[id] && !this.creating[id]) {\n\t\t\t\tthis.creating[id] = true;\n\t\t\t\tif (row.get('type') === 'session') {\n\t\t\t\t\tthis.executeAction(new CreateSession(id, row.get('name'), row.get('ownerId')));\n\t\t\t\t} else {\n\t\t\t\t\tthis.executeAction(new CreateUser(id, row.get('name')));\n\t\t\t\t}\n\t\t\t\tdelete this.creating[id];\n\t\t\t}\n\t\t});\n\n\t\tconst userId = 'user-' + uuid();\n\t\tthis.creating[userId] = true;\n\t\tthis.user = new User(this.userCRDT, userId, 'user');\n\t\tthis.addDoc(this.user);\n\t\tdelete this.creating[userId];\n\n\t\tthis.gatewayClient = new GatewayClient(this.user.id);\n\t\tthis.gatewayClient.on('join', this.onJoin);\n\t\tthis.gatewayClient.on('sessionUser', this.onSessionUser);\n\t}\n\n\tpublic getDoc(docId: string): Doc {\n\t\treturn this.docs[docId];\n\t}\n\n\tpublic addDoc(doc: Doc) {\n\t\tthis.docs[doc.id] = doc;\n\t}\n\n\tprivate onJoin = (sessionId: string, userId: string) => {\n\t\tif (this.RTCClients[userId]) { return; } // just update the session object\n\t\tconst client = this.RTCClients[userId] = new RTCClient(userId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.userCRDT.createStream()).pipe(stream);\n\t\t\t// const session = this.getSession(sessionId);\n\t\t\t// stream.pipe(session.crdt.createStream()).pipe(stream);\n\t\t\tthis.executeAction(new AddSessionUser(sessionId, userId));\n\t\t\t// client.sendMessage('get-docs', [userId]);\n\t\t});\n\t}\n\n\tprivate onSessionUser = (sessionId: string, userId: string) => {\n\t\tif (this.RTCClients[userId]) { return; }\n\t\tconst client = this.RTCClients[userId] = new RTCClient(userId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.initiateConnection();\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.userCRDT.createStream()).pipe(stream);\n\t\t\t// this.executeAction(new CreateSession(sessionId, '', userId));\n\t\t\t// const session = this.getSession(sessionId);\n\t\t\t// stream.pipe(session.crdt.createStream()).pipe(stream);\n\t\t\t// client.sendMessage('get-docs', [sessionId, userId]);\n\t\t});\n\t}\n\n\tprivate setupClient(client: RTCClient) {\n\t\t// client.on('get-docs', (docIds: string[]) => {\n\t\t\t// client.sendMessage('docs', docIds.map(docId => this.docs[docId].toModel()));\n\t\t// });\n\n\t\t// client.on('docs', (objects: any[]) => {\n\t\t// \tthis.executeAction(new DocsUpdate(objects), true);\n\t\t// });\n\n\t\t// client.on('doc-changes', (docChanges) => {\n\t\t\t// const { changes, sessionId } = docChanges;\n\t\t\t// const session = this.docs[sessionId] as Session;\n\t\t\t// if (session.ownerId === this.user.id) { // send to others\n\t\t\t// \tfor (const userId of session.userIds) {\n\t\t\t// \t\tthis.RTCClients[userId].sendMessage('doc-changes', docChanges);\n\t\t\t// \t}\n\t\t\t// } else {\n\t\t\t// \tconsole.log(changes);\n\t\t\t// }\n\t\t// });\n\t}\n\n\tpublic openSession(sessionId: string) {\n\t\tthis.gatewayClient.openSession(sessionId);\n\t}\n\n\tpublic closeSession(sessionId: string) {\n\t\tthis.gatewayClient.closeSession(sessionId);\n\t}\n\n\tpublic join(sessionId: string) {\n\t\tthis.gatewayClient.joinSession(sessionId);\n\t}\n\n\t// private onDocChange = (change: IObjectChange) => {\n\t// \tconst docId = change.object.id;\n\t// \tif (!this.docChanges[docId]) { this.docChanges[docId] = []; }\n\t// \tthis.docChanges[docId].push({\n\t// \t\ttype: change.type,\n\t// \t\tname: change.name,\n\t// \t\tnewValue: change.newValue,\n\t// \t\tdocId\n\t// \t});\n\t// }\n\n\tpublic getSession(sessionId: string): Session {\n\t\treturn this.docs[sessionId] as Session;\n\t}\n\n\tpublic removeSession(sessionId: string) {\n\t\tconst session = this.docs[sessionId] as Session;\n\t\tif (!session) { return log('trying to remove an inexisting session', sessionId); }\n\t\t// session.disposeObserver();\n\t\tdelete this.docs[sessionId];\n\t}\n\n\tpublic getUser(userId: string): User {\n\t\treturn this.docs[userId] as User;\n\t}\n\n\tpublic executeAction<A extends Action>(action: A, sideEffect = false): A {\n\t\t// this.docChanges = {};\n\t\taction.run(this);\n\t\t// if (!sideEffect) {\n\t\t// \tconst changePerSession: { [sessionId: string]: { [docId: string]: DocChange[] } } = {};\n\n\t\t// \tfor (const docId in this.docChanges) {\n\t\t// \t\tconst changes = this.docChanges[docId];\n\t\t// \t\tconst sessionIds = this.docs[docId].belongToSessions(this);\n\t\t// \t\tfor (const sessionId of sessionIds) {\n\t\t// \t\t\tif (!changePerSession[sessionId]) { changePerSession[sessionId] = {}; }\n\t\t// \t\t\tchangePerSession[sessionId][docId] = changes;\n\t\t// \t\t}\n\t\t// \t}\n\n\t\t// \tfor (const sessionId in changePerSession) {\n\t\t// \t\tconst docChanges = changePerSession[sessionId];\n\t\t// \t\tconst session = this.docs[sessionId] as Session;\n\n\t\t// \t\t// TODO stringify once the changes\n\t\t// \t\tconst change = { sessionId, changes: docChanges };\n\n\t\t// \t\tif (session.ownerId === this.user.id) {\n\t\t// \t\t\tfor (const userId of session.userIds) {\n\t\t// \t\t\t\tthis.RTCClients[userId].sendMessage('doc-changes', change);\n\t\t// \t\t\t}\n\t\t// \t\t} else {\n\t\t// \t\t\tthis.RTCClients[session.ownerId].sendMessage('doc-changes', change);\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\treturn action;\n\t}\n}\n\nexport default Store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Store.ts","import { action } from 'mobx';\nimport Store from 'shared/Store';\n\nexport type ActionsType =\n\t'createSession' | 'createUser' | 'updateSessionName' | 'addSessionUser' |\n\t'updateUserName' | 'docsUpdate' | 'addSession';\n\nabstract class IAction {\n\tpublic type: ActionsType;\n\tprotected store!: Store;\n\n\tconstructor(type: ActionsType) {\n\t\tthis.type = type;\n\t}\n\n\tpublic run(store: Store) {\n\t\tthis.store = store;\n\t\taction(this.type, () => this.execute())();\n\t}\n\n\tprotected abstract execute(): boolean;\n}\n\nexport default IAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/Action.ts","import Action from './Action';\n\nclass AddSessionUser extends Action {\n\tprivate sessionId: string;\n\tprivate userId: string;\n\n\tconstructor(sessionId: string, userId: string) {\n\t\tsuper('addSessionUser');\n\n\t\tthis.sessionId = sessionId;\n\t\tthis.userId = userId;\n\t}\n\n\tprotected execute() {\n\t\tconst session = this.store.getSession(this.sessionId);\n\t\tsession.userIds.push(this.userId);\n\t\treturn true;\n\t}\n}\n\nexport default AddSessionUser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/AddSessionUser.ts","import Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateSession extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\tprivate ownerId: string;\n\n\tconstructor(id: string, name: string, ownerId: string) {\n\t\tsuper('createSession');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t}\n\n\tprotected execute() {\n\t\tthis.store.creating[this.id] = true;\n\t\tconst session = new Session(this.store.userCRDT, this.id, this.name, this.ownerId);\n\t\tdelete this.store.creating[this.id];\n\t\tthis.store.sessionList.push(this.id);\n\t\tthis.store.addDoc(session);\n\t\treturn true;\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateSession.ts","import User from 'shared/models/User';\n\nimport Action from './Action';\n\nclass CreateUser extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\n\tconstructor(id: string, name: string) {\n\t\tsuper('createUser');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tprotected execute() {\n\t\tthis.store.creating[this.id] = true;\n\t\tconst user = new User(this.store.userCRDT, this.id, this.name);\n\t\tdelete this.store.creating[this.id];\n\t\tthis.store.addDoc(user);\n\t\treturn true;\n\t}\n}\n\nexport default CreateUser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateUser.ts","import Action from './Action';\n\nclass UpdateSessionName extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\n\tconstructor(id: string, name: string) {\n\t\tsuper('updateSessionName');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tprotected execute() {\n\t\tconst session = this.store.getSession(this.id);\n\t\tsession.name = this.name;\n\t\treturn true;\n\t}\n}\n\nexport default UpdateSessionName;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateSessionName.ts","import Action from './Action';\n\nclass UpdateUserName extends Action {\n\tprivate userId: string;\n\tprivate name: string;\n\n\tconstructor(userId: string, name: string) {\n\t\tsuper('updateUserName');\n\n\t\tthis.userId = userId;\n\t\tthis.name = name;\n\t}\n\n\tprotected execute() {\n\t\tconst user = this.store.getUser(this.userId);\n\t\tuser.name = this.name;\n\t\treturn true;\n\t}\n}\n\nexport default UpdateUserName;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateUserName.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | null) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = Props> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\tpublic div: HTMLDivElement | null = null;\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tprivate onRef = (div: HTMLDivElement | null) => {\n\t\tthis.div = div;\n\t\tif (this.props.elementRef) { this.props.elementRef(div); }\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.onRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import { observer } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\n\nexport type Props = {\n\tsessionId: string,\n\tonEnterSession(sessionId: string): void\n};\n\ntype State = {\n\tinfo: boolean\n};\n\n@observer\nclass SessionItem extends React.Component<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { info: false };\n\t}\n\n\tprivate enterSession = () => {\n\t\tthis.props.onEnterSession(this.props.sessionId);\n\t}\n\n\tprivate displayInfo = () => {\n\t\tthis.setState({ info: !this.state.info });\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId } = this.props;\n\t\tconst { info } = this.state;\n\t\tconst session = this.context.store.getSession(sessionId);\n\n\t\treturn (\n\t\t\t<Button className={ 'SessionItem' + (info ? ' SessionItem_info' : '') } onTap={ this.enterSession }>\n\t\t\t\t<div>{ session.name }</div>\n\t\t\t\t<Button onTap={ this.displayInfo }>Info</Button>\n\t\t\t\t{ info && (\n\t\t\t\t\t<div className='SessionItem__info'>\n\t\t\t\t\t\t<div className='user-select'>{ session.id }</div>\n\t\t\t\t\t\t<QRCode value={ session.id } size={ 256 } />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default SessionItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionItem.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\nclass SessionScanner extends React.PureComponent<Props> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.props.onSessionScanned(content);\n\t\t});\n\t}\n\n\tpublic scan = (): Promise<void> => {\n\t\treturn Instascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\tif (cameras.length > 0) {\n\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t} else {\n\t\t\t\tlog('No cameras found.');\n\t\t\t\tthrow new Error('No cameras found.');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stop = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\treturn (\n\t\t\t<video ref={ ref => this.videoElt = ref } className='session-scanner' />\n\t\t);\n\t}\n}\n\nexport default SessionScanner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import * as React from 'react';\n\nimport Button, { IButtonClass } from 'shared/components/Button';\n\nimport './Tabs.less';\n\ntype TabButtonProps = { tabId: string };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nexport type Props = {\n\ttabs: Array<{ tabId: string, Label: React.StatelessComponent }>,\n\tcurrentTabId: string,\n\tonTabSelect(tabId: string): void\n};\n\nclass Tabs extends React.PureComponent<Props> {\n\tprivate indicator: HTMLDivElement | null = null;\n\tprivate tabWidth: { [tabId: string]: number } = {};\n\n\tpublic componentDidMount() {\n\t\tthis.positionIndicator();\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tthis.positionIndicator();\n\t}\n\n\tprivate positionIndicator = () => {\n\t\tconst { currentTabId, tabs } = this.props;\n\t\tlet fullWidth = 0;\n\t\tlet passedCurrentTab = false;\n\t\tlet beforeWidth = 0;\n\t\tfor (const { tabId } of tabs) {\n\t\t\tif (tabId === currentTabId) { passedCurrentTab = true; }\n\t\t\tconst width = this.tabWidth[tabId];\n\t\t\tif (!passedCurrentTab) {\n\t\t\t\tbeforeWidth += width;\n\t\t\t}\n\t\t\tfullWidth += width;\n\t\t}\n\n\t\tthis.indicator!.style.transform =\n\t\t\t`translate3d(${beforeWidth * 100 / fullWidth}%, 0, 0) scaleX(${ this.tabWidth[currentTabId] / fullWidth })`;\n\t}\n\n\tprivate saveTabRef = (button: Button<TabButtonProps> | null) => {\n\t\tif (button) {\n\t\t\tthis.tabWidth[button.props.tabId] = button.div!.clientWidth;\n\t\t}\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.props.onTabSelect(button.props.tabId);\n\t}\n\n\tpublic render() {\n\t\tconst { currentTabId, tabs } = this.props;\n\n\t\treturn (\n\t\t\t<div className='Tabs'>\n\t\t\t\t<div className='Tabs__container'>\n\t\t\t\t\t{\n\t\t\t\t\t\ttabs.map(({ tabId, Label }) => {\n\n\t\t\t\t\t\t\treturn (<TabButton\n\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\tclassName={ 'Tabs__tab' + (currentTabId === tabId ? ' Tabs__tab_active' : '') }\n\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t\tref={ this.saveTabRef }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Label />\n\t\t\t\t\t\t\t</TabButton>); }\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<div className='Tabs__indicator' ref={ ref => this.indicator = ref } />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Tabs.tsx","import * as React from 'react';\n\nimport './TextField.less';\n\nexport type Props = {\n\tlabel: string,\n\tplaceholder: string,\n\tclassName?: string\n};\n\nclass TextField extends React.PureComponent<Props> {\n\tprivate mainDiv: HTMLDivElement | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\tprivate content: string = '';\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { hasContent: false };\n\t}\n\n\tprivate onChange = () => {\n\t\tthis.content = this.input!.value;\n\t}\n\n\tprivate onMainRef = (div: HTMLDivElement | null) => {\n\t\tthis.mainDiv = div;\n\t}\n\n\tprivate onBlur = () => {\n\t\tthis.mainDiv!.className = this.generateClassName();\n\t}\n\n\tprivate onInputRef = (input: HTMLInputElement | null) => {\n\t\tthis.input = input;\n\t}\n\n\tprivate generateClassName(): string {\n\t\treturn 'TextField' + (this.content.length ? ' TextField_hasContent' : '');\n\t}\n\n\tpublic getValue() { return this.content; }\n\n\tpublic render() {\n\t\tconst { label, placeholder } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ this.generateClassName() } ref={ this.onMainRef }>\n\t\t\t\t<div className='TextField__label'>{ label }</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='TextField__input'\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tref={ this.onInputRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/TextField.tsx","import * as PropTypes from 'prop-types';\nimport Store from './Store';\n\nexport type Context = {\n\tstore: Store\n};\n\nexport const contextTypes: {[T in keyof Context]: PropTypes.Requireable<any>} = {\n\tstore: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/context.ts","import { Atom } from 'mobx';\n\nimport Store from 'shared/Store';\n\nimport { Doc as CrdtDoc, Row as CrdtDow } from 'crdt';\n\nexport type DocType = 'session' | 'user';\n\nexport function linked(docPrototype: any, property: string) {\n\tconst atom = new Atom(property);\n\n\tconst getter = function(this: Doc) {\n\t\tatom.reportObserved();\n\t\treturn (this as any).__data[property];\n\t};\n\n\tconst setter = function(this: Doc, val: any) {\n\t\tconst value = (this as any).__data[property];\n\t\tif (value === val) { return; }\n\t\t(this as any).__data[property] = val;\n\t\tif (this.row && this.row.get(property) !== val) {\n\t\t\tthis.row.set(property, val);\n\t\t}\n\t\tatom.reportChanged();\n\t};\n\n\tif (delete docPrototype[property]) {\n\t\tObject.defineProperty(docPrototype, property, {\n\t\t\tget: getter,\n\t\t\tset: setter\n\t\t});\n\t}\n}\n\nexport interface IDoc {\n\tid: string;\n\ttype: DocType;\n}\n\nabstract class Doc<M extends IDoc = any> {\n\tprotected __data = {};\n\t@linked public readonly id: string;\n\t@linked public readonly type: DocType;\n\tpublic row!: CrdtDow<M>;\n\n\tconstructor(id: string, type: DocType) {\n\t\tthis.id = id;\n\t\tthis.type = type;\n\t}\n\n\tprotected initCRDT(crdt: CrdtDoc): void {\n\t\tthis.row = crdt.get(this.id);\n\t\tif (!this.row.get('type')) {\n\t\t\tthis.row.set(this.toModel());\n\t\t}\n\n\t\tthis.row.on('change', (changed) => {\n\t\t\tfor (const key in changed) {\n\t\t\t\t(this as any)[key] = changed[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected createDoc<O>(obj: O): O & IDoc {\n\t\treturn Object.assign(obj, { id: this.id, type: this.type });\n\t}\n\n\tpublic abstract toModel(): M;\n\tpublic abstract merge(obj: any): void;\n\tpublic abstract belongToSessions(store: Store): string[];\n}\n\nexport default Doc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Doc.ts","import { Doc as CRDTDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nexport interface ISession extends IDoc {\n\townerId: string;\n\tname: string;\n\tuserIds: string[];\n}\n\nclass Session extends Doc<ISession> {\n\t@linked public readonly ownerId: string;\n\t@linked public name: string;\n\t@linked public userIds: string[];\n\t// public crdt: CRDTDoc<ISession>;\n\n\tconstructor(crdt: CRDTDoc, id: string, name: string, ownerId: string, userIds: string[] = []) {\n\t\tsuper(id, 'session');\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t\tthis.userIds = userIds;\n\t\t// this.crdt = new CRDTDoc();\n\t\tthis.initCRDT(crdt);\n\t}\n\n\t// public static instantiate(\n\t// \t{ id, name, ownerId, userIds }: { id: string, name: string, ownerId: string, userIds: string[] }): Session {\n\t// \treturn new Session(id, name, ownerId, userIds);\n\t// }\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\townerId: this.ownerId,\n\t\t\tname: this.name,\n\t\t\tuserIds: this.userIds,\n\t\t});\n\t}\n\n\tpublic merge(obj: any) {\n\t\tif (this.name !== obj.name) {\n\t\t\tthis.name = obj.name;\n\t\t}\n\n\t\tif (this.userIds.length !== obj.userIds.length) {\n\t\t\tthis.userIds = obj.userIds;\n\t\t} else {\n\t\t\tfor (let i = 0; i < this.userIds.length; i += 1) {\n\t\t\t\tif (this.userIds[i] !== obj.userIds[i]) {\n\t\t\t\t\tthis.userIds = obj.userIds;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic belongToSessions() {\n\t\treturn [this.id];\n\t}\n}\n\nexport default Session;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Session.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Store from 'shared/Store';\nimport Doc, { IDoc, linked } from './Doc';\n\nexport interface IUser extends IDoc {\n\tname: string;\n}\n\nclass User extends Doc<IUser> {\n\t@linked public name: string;\n\n\tconstructor(crdt: CrdtDoc, id: string, name: string) {\n\t\tsuper(id, 'user');\n\t\tthis.name = name;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\t// public static instantiate(crdt: CrdtDoc, { id, name }: { id: string, name: string }): User {\n\t// \treturn new User(crdt, id, name);\n\t// }\n\n\tpublic merge(obj: any) {\n\t\tif (this.name !== obj.name) {\n\t\t\tthis.name = obj.name;\n\t\t}\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tname: this.name\n\t\t});\n\t}\n\n\tpublic belongToSessions(store: Store) {\n\t\treturn store.sessionList.reduce((sessions, sessionId) => {\n\t\t\tconst session = store.getSession(sessionId);\n\t\t\tif (session.ownerId === this.id) {\n\t\t\t\tsessions.push(sessionId);\n\t\t\t} else {\n\t\t\t\tconst index = session.userIds.indexOf(this.id);\n\t\t\t\tif (index !== -1) { sessions.push(sessionId); }\n\t\t\t}\n\t\t\treturn sessions;\n\t\t}, [] as string[]);\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/User.ts","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts","import * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateSessionAction from 'shared/actions/CreateSession';\n\nimport Button from 'shared/components/Button';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './CreateSession.less';\n\nexport type Props = {};\n\nclass CreateSession extends React.PureComponent<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate sessionNameField!: TextField | null;\n\n\tprivate createSession = () => {\n\t\tconst sessionId = 'session-' + uuid();\n\t\tconst store = this.context.store;\n\t\tstore.executeAction(new CreateSessionAction(\n\t\t\tsessionId,\n\t\t\tthis.sessionNameField!.getValue(),\n\t\t\tstore.user.id\n\t\t));\n\t\tstore.openSession(sessionId);\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className='CreateSession'>\n\t\t\t\t<div className='view__explanation'>Create a session to allow another device to connect.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel='choose a name for your session'\n\t\t\t\t\t\t\tplaceholder='My session'\n\t\t\t\t\t\t\tref={ ref => this.sessionNameField = ref }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='view__column CreateSession__create-column'>\n\t\t\t\t\t\t<Button className='action-button  CreateSession__Create' onTap={ this.createSession }>\n\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/CreateSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './JoinSession.less';\n\ntype Props = {};\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass JoinSession extends React.PureComponent<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate scanner: SessionScanner | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tisScanning: false\n\t\t};\n\t}\n\n\tprivate onSessionScanned = (userId: string) => {\n\t\tthis.join(userId);\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.setState({ isScanning: false }, () => this.scanner!.stop());\n\t}\n\n\tprivate startScanning = () => {\n\t\ttry {\n\t\t\tthis.scanner!.scan();\n\t\t\tthis.setState({ isScanning: true });\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\tprivate validateSession = () => {\n\t\tconst sessionId = this.input!.value;\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate join(userId: string) {\n\t\tthis.context.store.join(userId);\n\t}\n\n\tpublic render() {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className={ 'JoinSession' + (isScanning ? ' JoinSession_scanning' : '') }>\n\t\t\t\t<div className='view__explanation'>Join an existing session by scanning its QR code or entering its ID.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Scan a QR Code</div>\n\t\t\t\t\t<Button onTap={ this.startScanning } className='action-button'>Start Scanning</Button>\n\t\t\t\t\t<div className='JoinSession__scanner'>\n\t\t\t\t\t\t<SessionScanner onSessionScanned={ this.onSessionScanned } ref={ ref => this.scanner = ref } />\n\t\t\t\t\t\t<Button onTap={ this.stopScanning } className='action-button JoinSession__StopScanning'>Stop Scanning</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Enter a session ID</div>\n\t\t\t\t\t<input className='JoinSession__id-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.validateSession } className='action-button'>Join</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoinSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/JoinSession.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport SessionItem from 'shared/components/SessionItem';\nimport { Context, contextTypes } from 'shared/context';\n\n@observer\nclass Sessions extends React.Component {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate onEnterSession = (sessionId: string) => {\n\t\t//\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst sessionList = store.sessionList;\n\n\t\treturn (\n\t\t\t<div className='Sessions'>\n\t\t\t\t{ sessionList.map(sessionId => <SessionItem\n\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\tonEnterSession={ this.onEnterSession }\n\t\t\t\t/>) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/Sessions.tsx","import { observer } from 'mobx-react';\n\nimport { Context, contextTypes } from 'shared/context';\n\nexport type TabId = 'sessions' | 'create' | 'join';\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\nconst SessionLabel: React.StatelessComponent = observer(function (this: { context: Context }) {\n\tconst sessions = this.context.store.sessionList;\n\treturn ('My sessions' + (sessions.length ? ` (${sessions.length})` : '' )) as any;\n});\nSessionLabel.contextTypes = contextTypes;\n\nexport const TabMap: {[tabId in TabId]: React.StatelessComponent}  = {\n\tsessions: SessionLabel,\n\tcreate: () => 'Create Session' as any,\n\tjoin: () => 'Join Session' as any\n};\n\nexport const TabOrder: TabId[] = ['sessions', 'create', 'join'];\nexport const TabsInfo = TabOrder.map(tabId => ({ tabId, Label: TabMap[tabId] }));\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/tabs.tsx"],"sourceRoot":""}