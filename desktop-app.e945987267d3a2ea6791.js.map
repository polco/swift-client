{"version":3,"sources":["webpack:///./src/desktop/app.tsx","webpack:///./src/desktop/views/Main.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SessionDisplay.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts"],"names":["React","__webpack_require__","ReactDOM","Main_1","localStorage","setItem","render","createElement","default","document","getElementById","Button_1","SessionDisplay_1","SessionScanner_1","RTCClient_1","TabButton","TABS_ORDER","exports","PureComponent","[object Object]","props","context","super","this","TABS_MAP","home","label","className","create","client","join","onSessionScanned","indicator","sessionId","connectTo","selectTab","button","setState","tabId","state","currentTabId","map","key","onTap","ref","call","debug","events_1","SocketIO","log","EventEmitter","socket","transports","autoConnect","on","fromId","data","emit","error","localId","connected","Promise","resolve","reject","connect","once","removeListener","isConnected","id","disconnect","remoteId","GatewayClient_1","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","msg","__awaiter","type","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","gatewayClient","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","e","setupDataChannel","onSendChannelClose","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","createOffer","window","sendMessage","JSON","stringify","onmessage","event","console","parse","ButtonPlugin_1","Factory_1","onDoubleTap","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","elementRef","Pdiv","QRCode","onSessionStarted","onSessionStopped","undefined","createSession","startSession","value","size","Instascan","videoElt","scan","isScanning","Camera","getCameras","then","cameras","length","scanner","start","catch","stopScanning","stop","Scanner","video","mirror","addListener","content","onClick","spur_events_1","interactionLock_1","Plugin_1","onLock","DOMNode","current","forEach","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","width","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","Math","max","coords","repeatTap","releaseLock","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","push","startTap","x","y","getBoundingClientRect","SpurEvent","Object","assign","press","requestLockOn","longTap","now","Date","tapDiff","preventDefault","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","onRef","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","i","len","listener","lockNodes","lockContainerNodes","node","parentNode","container","parent"],"mappings":"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","file":"desktop-app.e945987267d3a2ea6791.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Main from './views/Main';\n\nlocalStorage.setItem('debug', 'swift*');\n\nReactDOM.render(<Main />, document.getElementById('swift'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/app.tsx","import * as React from 'react';\nimport Button, { IButtonClass } from 'shared/components/Button';\nimport SessionDisplay from 'shared/components/SessionDisplay';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport RTCClient from 'shared/RTCClient';\nimport './Main.less';\n\ntype TabId = 'home' | 'create' | 'join';\ntype TabButtonProps = { tabId: TabId };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId\n};\n\nconst TABS_ORDER: TabId[] = ['home', 'create', 'join'];\n\nclass Home extends React.PureComponent<Props, State> {\n\tprivate client: RTCClient;\n\tprivate TABS_MAP: { [tabId in TabId]: { label: string, render: () => React.ReactElement<any> } } = {\n\t\thome: {\n\t\t\tlabel: 'Home',\n\t\t\trender(this: Home) { return <div className='Home'>Welcome!</div>; }\n\t\t},\n\t\tcreate: {\n\t\t\tlabel: 'Create Session',\n\t\t\trender(this: Home) { return <SessionDisplay client={ this.client } />; }\n\t\t},\n\t\tjoin: {\n\t\t\tlabel: 'Join Session',\n\t\t\trender(this: Home) { return <SessionScanner onSessionScanned={ this.onSessionScanned } />; }\n\t\t}\n\t};\n\tprivate indicator: HTMLDivElement | null = null;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { tabId: 'home' };\n\n\t\tthis.client = new RTCClient();\n\t}\n\n\tprivate onSessionScanned = (sessionId: string) => {\n\t\tthis.client.connectTo(sessionId);\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.setState({ tabId: button.props.tabId });\n\t}\n\n\tpublic render() {\n\t\tconst currentTabId = this.state.tabId;\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<div className='Main__tabs'>\n\t\t\t\t\t{\n\t\t\t\t\t\tTABS_ORDER.map(tabId =>\n\t\t\t\t\t\t\t<TabButton\n\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\tclassName={ 'Main__tab' + (currentTabId === tabId ? ' Main__tab_active' : '') }\n\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ this.TABS_MAP[tabId].label }\n\t\t\t\t\t\t\t</TabButton>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<div className='Main__indicator' ref={ ref => this.indicator = ref } />\n\t\t\t\t</div>\n\t\t\t\t{ this.TABS_MAP[currentTabId].render.call(this) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/views/Main.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient<T> extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false });\n\n\t\tthis.socket.on('data', (fromId: string, data: T) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('message', fromId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`${this.localId}: Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t}\n\n\tpublic connect(): Promise<void> {\n\t\tif (this.socket.connected) { return Promise.resolve(); }\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tlog(`${this.localId}: Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tget isConnected(): boolean { return this.socket.connected; }\n\n\tget localId(): string { return this.socket.id; }\n\n\tpublic disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic send(remoteId: string, data: T) {\n\t\tlog('sending', data, 'to', remoteId);\n\t\tthis.socket.emit('data', remoteId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nclass RTCClient extends EventEmitter {\n\tprivate pc: RTCPeerConnection;\n\t// private remoteConnection: RTCPeerConnection;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate gatewayClient: GatewayClient<Message>;\n\tprivate remoteId: string = '';\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.gatewayClient = new GatewayClient();\n\t\tthis.gatewayClient.on('message', this.onGatewayMessage);\n\t\tthis.gatewayClient.on('disconnected', () => {\n\t\t\tthis.sessionCreating = false;\n\t\t\tif (this.sessionCreated) {\n\t\t\t\tthis.sessionCreated = false;\n\t\t\t\tthis.emit('sessionStopped');\n\t\t\t}\n\t\t});\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tget localId(): string { return this.gatewayClient.localId; }\n\n\tpublic async startSession() {\n\t\tif (this.sessionCreating) { return; }\n\t\tthis.sessionCreating = true;\n\t\tawait this.gatewayClient.connect();\n\t\tthis.sessionCreating = false;\n\t\tthis.sessionCreated = true;\n\t\tthis.emit('sessionStarted', this.gatewayClient.localId);\n\t}\n\n\tpublic async connectTo(remoteId: string) {\n\t\tlog('connectTo', remoteId);\n\t\tif (this.gatewayClient.isConnected) {\n\t\t\tawait this.gatewayClient.connect();\n\t\t}\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel');\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\n\t\tthis.remoteId = remoteId;\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(remoteId, { type: 'offer', sessionDescription });\n\t}\n\n\tprivate onGatewayMessage = async (fromId: string, msg: Message) => {\n\t\tthis.remoteId = fromId;\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(fromId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\t(window as any).sendMessage = (data: any) => {\n\t\t\tthis.sendChannel!.send(JSON.stringify(data));\n\t\t};\n\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconsole.log(JSON.parse(event.data)); // tslint:disable-line\n\t\t};\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | undefined) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = {}> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.props.elementRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import * as QRCode from 'qrcode.react';\nimport * as React from 'react';\nimport Button from 'shared/components/Button';\nimport RTCClient from 'shared/RTCClient';\n\nexport type Props = {\n\tclient: RTCClient\n};\n\ntype State = {\n\tsessionCreating: boolean,\n\tsessionId?: string\n};\n\nclass SessionDisplay extends React.PureComponent<Props, State> {\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tsessionCreating: props.client.sessionCreating,\n\t\t\tsessionId: props.client.localId\n\t\t};\n\t}\n\n\tpublic componentWillMount() {\n\t\tthis.props.client.on('sessionStarted', this.onSessionStarted);\n\t\tthis.props.client.on('sessionEnd', this.onSessionStopped);\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tthis.props.client.removeListener('sessionStarted', this.onSessionStarted);\n\t\tthis.props.client.removeListener('onSessionStopped', this.onSessionStarted);\n\t}\n\n\tprivate onSessionStarted = (sessionId: string) => {\n\t\tthis.setState({ sessionId, sessionCreating: false });\n\t}\n\n\tprivate onSessionStopped = () => {\n\t\tthis.setState({ sessionId: undefined, sessionCreating: false });\n\t}\n\n\tprivate createSession = () => {\n\t\tthis.props.client.startSession();\n\t\tthis.setState({ sessionCreating: true });\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId, sessionCreating } = this.state;\n\n\t\treturn (\n\t\t\t<div className='session-display'>\n\t\t\t\t{ sessionCreating && 'Creating a session...' }\n\t\t\t\t{ sessionId ?\n\t\t\t\t\t<div className='session-display__qr-area'>\n\t\t\t\t\t\t<QRCode value={ sessionId } size={ 256 } />\n\t\t\t\t\t\t<div className='session-display__id'>{ 'id: ' + sessionId }</div>\n\t\t\t\t\t</div>\n\t\t\t\t: <Button onTap={ this.createSession }>Create Session</Button> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionDisplay.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass SessionDisplay extends React.PureComponent<Props, State> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tconstructor (props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { isScanning: false };\n\t}\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.setState({ isScanning: false }, () => this.props.onSessionScanned(content));\n\t\t});\n\t}\n\n\tprivate scan = () => {\n\t\tthis.setState({ isScanning: true }, () => {\n\n\t\t\tInstascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\t\tif (cameras.length > 0) {\n\t\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ isScanning: false });\n\t\t\t\t\tlog('No cameras found.');\n\t\t\t\t}\n\t\t\t}).catch((e: any) => {\n\t\t\t\tthis.setState({ isScanning: false });\n\t\t\t\tlog(e);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className='session-scanner'>\n\t\t\t\t{ isScanning\n\t\t\t\t\t? <button onClick={ this.stopScanning }>Stop scanning</button>\n\t\t\t\t\t: <button onClick={ this.scan }>scan QR code</button>\n\t\t\t\t}\n\t\t\t\t<video ref={ ref => this.videoElt = ref } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts"],"sourceRoot":""}