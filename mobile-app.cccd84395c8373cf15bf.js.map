{"version":3,"sources":["webpack:///./src/mobile/app.tsx","webpack:///./src/mobile/views/Main.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/Store.ts","webpack:///./src/shared/actions/Action.ts","webpack:///./src/shared/actions/CreateDoc.ts","webpack:///./src/shared/actions/CreateSession.ts","webpack:///./src/shared/actions/UpdateDoc.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SessionItem.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/components/Tabs.tsx","webpack:///./src/shared/components/TextField.tsx","webpack:///./src/shared/context.ts","webpack:///./src/shared/models/Doc.ts","webpack:///./src/shared/models/Item.ts","webpack:///./src/shared/models/Session.ts","webpack:///./src/shared/models/User.ts","webpack:///./src/shared/models/createSeq.ts","webpack:///./src/shared/models/docClass.ts","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts","webpack:///./src/shared/views/CreateSession.tsx","webpack:///./src/shared/views/JoinSession.tsx","webpack:///./src/shared/views/Sessions.tsx","webpack:///./src/shared/views/tabs.tsx"],"names":["React","__webpack_require__","ReactDOM","Main_1","localStorage","setItem","div","document","getElementById","classList","add","render","createElement","default","mobx_react_devtools_1","configureDevtool","logEnabled","context_1","Store_1","CreateSession_1","JoinSession_1","Sessions_1","tabs_1","Tabs_1","ContentClasses","sessions","create","join","Main","PureComponent","[object Object]","props","context","super","this","selectTab","tabId","setState","navigateToSession","sessionId","state","store","currentTabId","ContentClass","className","tabs","TabsInfo","onTabSelect","childContextTypes","contextTypes","exports","debug","events_1","SocketIO","log","EventEmitter","isConnecting","socket","transports","autoConnect","on","clientId","data","emit","error","connected","Promise","resolve","reject","connect","once","removeListener","disconnect","remoteClientId","ICustomEmitter","type","cb","prototype","call","value","gatewayClient","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","fromClientId","msg","__awaiter","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","e","setupDataChannel","onSendChannelClose","onSendChannelError","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","onerror","createOffer","onmessage","event","JSON","parse","stringify","crdt_1","mobx_1","dcstream","uuid","GatewayClient_1","CreateDoc_1","UpdateDoc_1","User_1","RTCClient_1","Store","sessionList","docs","userName","RTCClients","crdts","updating","pendingSeqActions","userIdPerSessionId","onJoin","createCRDT","client","setupClient","dc","stream","pipe","createStream","onSessionUser","initiateConnection","window","length","forEach","action","docId","doc","id","crdt","Doc","userId","user","addDoc","row","get","executeAction","changes","toJSON","openSession","closeSession","joinSession","itemId","sideEffect","run","__decorate","observable","execute","docClass_1","Session_1","Action_1","instantiate","includes","push","applyPendingSeqAction","name","ownerId","session","getDoc","key","ButtonPlugin_1","Factory_1","onTap","onDoubleTap","onRef","elementRef","button","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","Pdiv","mobx_react_1","QRCode","Button_1","SessionItem","Component","enterSession","onEnterSession","displayInfo","info","addText","input","creatorId","creationDate","Date","toISOString","itemContent","content","getSession","size","userIds","map","getUser","itemIds","getItem","ref","observer","Instascan","videoElt","scan","Camera","getCameras","then","cameras","Error","scanner","start","stop","Scanner","video","mirror","addListener","onSessionScanned","TabButton","indicator","tabWidth","positionIndicator","fullWidth","passedCurrentTab","beforeWidth","width","transform","saveTabRef","clientWidth","Label","mainDiv","onChange","onMainRef","onBlur","generateClassName","onInputRef","hasContent","label","placeholder","PropTypes","object","linked","docPrototype","property","atom","Atom","getter","reportObserved","__data","setter","val","set","reportChanged","Object","defineProperty","toModel","changed","assign","obj","Doc_1","Item","initCRDT","createDoc","createSeq_1","Session","User","list","rowToValue","seq","createSeq","index","indexOf","v","splice","Item_1","docClass","item","spur_events_1","interactionLock_1","Plugin_1","onLock","DOMNode","current","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","Math","max","coords","repeatTap","releaseLock","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","startTap","x","y","getBoundingClientRect","SpurEvent","press","requestLockOn","longTap","now","tapDiff","preventDefault","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","i","len","listener","lockNodes","lockContainerNodes","node","parentNode","container","parent","TextField_1","CreateSession","createSession","sessionNameField","getValue","SessionScanner_1","JoinSession","isScanning","stopScanning","startScanning","validateSession","SessionItem_1","Sessions","SessionLabel","TabMap","TabOrder"],"mappings":"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","file":"mobile-app.cccd84395c8373cf15bf.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'shared/styles/core.less';\nimport Main from './views/Main';\n\nlocalStorage.setItem('debug', 'swift*');\n\nconst div = document.getElementById('swift');\ndiv!.classList.add('mobile');\nReactDOM.render(<Main />, div);\n\n\n\n// WEBPACK FOOTER //\n// ./src/mobile/app.tsx","import DevTools, { configureDevtool } from 'mobx-react-devtools';\nimport * as React from 'react';\n\nconfigureDevtool({\n\tlogEnabled: true\n});\n\nimport { Context, contextTypes } from 'shared/context';\nimport Store from 'shared/Store';\n\nimport CreateSession from 'shared/views/CreateSession';\nimport JoinSession from 'shared/views/JoinSession';\nimport Sessions from 'shared/views/Sessions';\nimport { TabId, TabsInfo } from 'shared/views/tabs';\n\nimport Tabs from 'shared/components/Tabs';\n\nimport './Main.less';\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId\n};\n\nconst ContentClasses: {[tabId in TabId]: React.ComponentClass<{ navigateToSession(sessionId: string): void }>} = {\n\tsessions: Sessions,\n\tcreate: CreateSession,\n\tjoin: JoinSession\n};\n\nclass Main extends React.PureComponent<Props, State> {\n\tprivate store: Store;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.store = new Store();\n\t\tthis.state = { tabId: 'create' };\n\t}\n\n\tpublic static childContextTypes = contextTypes;\n\n\tpublic getChildContext(): Context {\n\t\treturn { store: this.store };\n\t}\n\n\tprivate selectTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId });\n\t}\n\n\tprivate navigateToSession = (sessionId: string) => {\n\t\tif (this.state.tabId !== 'sessions') {\n\t\t\tthis.setState({ tabId: 'sessions' });\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst currentTabId = this.state.tabId;\n\t\tconst ContentClass = ContentClasses[currentTabId];\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<div className='Main__tab-container'><ContentClass navigateToSession={ this.navigateToSession } /></div>\n\t\t\t\t<Tabs\n\t\t\t\t\ttabs={ TabsInfo }\n\t\t\t\t\tcurrentTabId={ currentTabId }\n\t\t\t\t\tonTabSelect={ this.selectTab }\n\t\t\t\t/>\n\t\t\t\t{ __IS_DEV__ &&  <DevTools /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mobile/views/Main.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\tprivate isConnecting = false;\n\t// private socketIdPerUserId: {[userId: string]: string} = {};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false });\n\n\t\tthis.socket.on('data', (clientId: string, data: any) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('data', clientId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t\tthis.socket.on('join', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('join', sessionId, clientId);\n\t\t});\n\t\tthis.socket.on('sessionClient', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('sessionClient', sessionId, clientId);\n\t\t});\n\t}\n\n\tprivate connect(): Promise<void> {\n\t\tif (this.isConnecting || this.socket.connected) { return Promise.resolve(); }\n\t\tthis.isConnecting = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tthis.isConnecting = false;\n\t\t\t\tlog(`Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tpublic async openSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('openSession', sessionId);\n\t}\n\n\tpublic async closeSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('closeSession', sessionId);\n\t\tthis.disconnect();\n\t}\n\n\tpublic async joinSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('join', sessionId);\n\t}\n\n\tprivate disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.isConnecting = false;\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic async send(remoteClientId: string, data: any) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tlog('sending', data, 'to', remoteClientId);\n\t\tthis.socket.emit('data', remoteClientId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\n\nimport { DocChange } from 'shared/Store';\n\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'client', sessionId: string } |\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nexport type RTCEvent = {\n\t'connect': RTCDataChannel,\n\t'get-docs': string[],\n\t'docs': any[],\n\t'doc-changes': { sessionId: string, changes: {[docId: string]: DocChange[]} },\n};\n\nabstract class ICustomEmitter extends EventEmitter {\n\tpublic on<K extends keyof RTCEvent>(type: K, cb: (value: RTCEvent[K]) => void): this {\n\t\tEventEmitter.prototype.on.call(this, type, cb);\n\t\treturn this;\n\t}\n\n\tpublic emit<K extends keyof RTCEvent>(type: K, value: RTCEvent[K]): boolean {\n\t\treturn EventEmitter.prototype.emit.call(this, type, value);\n\t}\n}\n\n// tslint:disable:max-classes-per-file\nclass RTCClient extends ICustomEmitter {\n\tprivate pc: RTCPeerConnection;\n\tprivate gatewayClient: GatewayClient;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate remoteClientId: string;\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor(remoteClientId: string, gatewayClient: GatewayClient) {\n\t\tsuper();\n\n\t\tthis.gatewayClient = gatewayClient;\n\t\tthis.gatewayClient.on('data', this.onGatewayMessage);\n\t\tthis.remoteClientId = remoteClientId;\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tpublic async initiateConnection() {\n\t\tlog('initiateConnection');\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel with ' + this.remoteClientId);\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\t\tthis.sendChannel.onerror = this.onSendChannelError;\n\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'offer', sessionDescription });\n\t}\n\n\tpublic onGatewayMessage = async (fromClientId: string, msg: Message) => {\n\t\tif (fromClientId !== this.remoteClientId) { return; }\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onSendChannelError = (e: ErrorEvent) => {\n\t\tlog('onSendChannelError', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconst { type, data } = JSON.parse(event.data);\n\t\t\tthis.emit(type, data);\n\t\t};\n\t\tthis.gatewayClient.removeListener('data', this.onGatewayMessage);\n\t\tthis.emit('connect', this.sendChannel!);\n\t}\n\n\tpublic getDataChannel() { return this.sendChannel; }\n\n\tpublic sendMessage<K extends keyof RTCEvent>(type: K, data: RTCEvent[K]): void {\n\t\tif (this.sendChannel) {\n\t\t\tthis.sendChannel.send(JSON.stringify({ type, data }));\n\t\t} else {\n\t\t\tlog('trying to send a message before the channel is opened');\n\t\t}\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteClientId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import { Doc as CRDTDoc } from 'crdt';\nimport * as debug from 'debug-logger';\nimport { IObjectChange, observable } from 'mobx';\nimport * as dcstream from 'rtc-dcstream';\nimport * as uuid from 'uuid/v4';\n\nimport GatewayClient from 'shared/GatewayClient';\n\nimport Action from 'shared/actions/Action';\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport UpdateDoc from 'shared/actions/UpdateDoc';\n\nimport Doc from 'shared/models/Doc';\nimport Item from 'shared/models/Item';\nimport Session, { ISession } from 'shared/models/Session';\nimport User, { IUser } from 'shared/models/User';\n\nimport RTCClient from 'shared/RTCClient';\n\nconst log = debug('swift:RTCClient');\n\nexport type DocChange = {\n\tname: string;\n\tdocId: string;\n\ttype: IObjectChange['type'];\n\tnewValue: any;\n};\n\nclass Store {\n\t@observable public sessionList: string[] = [];\n\tprivate docs: { [docId: string]: Doc } = {};\n\t// public userId = 'user-' + uuid();\n\tpublic userName: string = 'user buehehe';\n\tprivate gatewayClient: GatewayClient;\n\tprivate RTCClients: { [clientId: string]: RTCClient } = {};\n\n\tpublic crdts: {[sessionId: string]: CRDTDoc<ISession | IUser>} = {};\n\tpublic updating: {[id: string]: true} = {};\n\n\tpublic pendingSeqActions: Array<() => void> = [];\n\n\tpublic userIdPerSessionId: {[sessionId: string]: string} = {};\n\n\tconstructor() {\n\t\t(window as any).store = this;\n\n\t\tthis.gatewayClient = new GatewayClient();\n\t\tthis.gatewayClient.on('join', this.onJoin);\n\t\tthis.gatewayClient.on('sessionClient', this.onSessionUser);\n\t}\n\n\tpublic applyPendingSeqAction() {\n\t\tif (this.pendingSeqActions.length) {\n\t\t\tthis.pendingSeqActions.forEach(action => action());\n\t\t\tthis.pendingSeqActions = [];\n\t\t}\n\t}\n\n\tpublic getDoc(docId: string): Doc {\n\t\treturn this.docs[docId];\n\t}\n\n\tpublic addDoc(doc: Doc) {\n\t\tthis.docs[doc.id] = doc;\n\t}\n\n\tprivate onJoin = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tprivate onSessionUser = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.initiateConnection();\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tpublic createCRDT(sessionId: string) {\n\t\tconst crdt = this.crdts[sessionId] = new CRDTDoc();\n\n\t\t// TODO: how do we deal with the same user in different CRDTDOC ?\n\t\tconst userId = 'user-' + uuid();\n\t\tthis.userIdPerSessionId[sessionId] = userId;\n\t\tthis.updating[userId] = true;\n\t\tconst user = new User(this, crdt, userId, 'user');\n\t\tthis.addDoc(user);\n\t\tdelete this.updating[userId];\n\n\t\tcrdt.on('row_update', (row) => {\n\t\t\tconst id = row.get('id');\n\t\t\tif (this.updating[id]) { return; }\n\t\t\tthis.updating[id] = true;\n\n\t\t\tif (this.docs[id]) {\n\t\t\t\tthis.executeAction(new UpdateDoc(id, this.docs[id].changes));\n\t\t\t} else {\n\t\t\t\tthis.executeAction(new CreateDoc(row.toJSON(), sessionId));\n\t\t\t}\n\n\t\t\tdelete this.updating[id];\n\t\t});\n\t}\n\n\tprivate setupClient(client: RTCClient) {\n\t\t// client.on('get-docs', (docIds: string[]) => {\n\t\t\t// client.sendMessage('docs', docIds.map(docId => this.docs[docId].toModel()));\n\t\t// });\n\n\t\t// client.on('docs', (objects: any[]) => {\n\t\t// \tthis.executeAction(new DocsUpdate(objects), true);\n\t\t// });\n\n\t\t// client.on('doc-changes', (docChanges) => {\n\t\t\t// const { changes, sessionId } = docChanges;\n\t\t\t// const session = this.docs[sessionId] as Session;\n\t\t\t// if (session.ownerId === this.user.id) { // send to others\n\t\t\t// \tfor (const userId of session.userIds) {\n\t\t\t// \t\tthis.RTCClients[userId].sendMessage('doc-changes', docChanges);\n\t\t\t// \t}\n\t\t\t// } else {\n\t\t\t// \tconsole.log(changes);\n\t\t\t// }\n\t\t// });\n\t}\n\n\tpublic openSession(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.openSession(sessionId);\n\t}\n\n\tpublic closeSession(sessionId: string) {\n\t\tthis.gatewayClient.closeSession(sessionId);\n\t}\n\n\tpublic join(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\treturn this.gatewayClient.joinSession(sessionId);\n\t}\n\n\tpublic getSession(sessionId: string): Session {\n\t\treturn this.docs[sessionId] as Session;\n\t}\n\n\tpublic removeSession(sessionId: string) {\n\t\tconst session = this.docs[sessionId] as Session;\n\t\tif (!session) { return log('trying to remove an inexisting session', sessionId); }\n\t\tdelete this.docs[sessionId];\n\t}\n\n\tpublic getUser(userId: string): User {\n\t\treturn this.docs[userId] as User;\n\t}\n\n\tpublic getItem(itemId: string): Item {\n\t\treturn this.docs[itemId] as Item;\n\t}\n\n\tpublic executeAction<A extends Action>(action: A, sideEffect = false): A {\n\t\taction.run(this);\n\t\treturn action;\n\t}\n}\n\nexport default Store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Store.ts","import { action } from 'mobx';\nimport Store from 'shared/Store';\n\nexport type ActionsType =\n\t'createSession' | 'updateSessionName' | 'updateDoc' |\n\t'updateUserName' | 'addSession' | 'createDoc' | 'addItem' | 'removeItem';\n\nabstract class IAction {\n\tpublic type: ActionsType;\n\tprotected store!: Store;\n\n\tconstructor(type: ActionsType) {\n\t\tthis.type = type;\n\t}\n\n\tpublic run(store: Store) {\n\t\tthis.store = store;\n\t\taction(this.type, () => this.execute())();\n\t}\n\n\tprotected abstract execute(): boolean;\n}\n\nexport default IAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/Action.ts","import { IDoc } from 'shared/models/Doc';\nimport docClass from 'shared/models/docClass';\nimport Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateDoc<D extends IDoc> extends Action {\n\tprivate row: D;\n\tprivate sessionId: string;\n\n\tconstructor(row: D, sessionId: string) {\n\t\tsuper('createDoc');\n\n\t\tthis.row = row;\n\t\tthis.sessionId = sessionId;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = docClass[this.row.type].instantiate(this.store, this.store.crdts[this.sessionId], this.row);\n\t\tthis.store.addDoc(doc);\n\n\t\tif (doc instanceof Session && !this.store.sessionList.includes(this.row.id)) {\n\t\t\tthis.store.sessionList.push(this.row.id);\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default CreateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateDoc.ts","import Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateSession extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\tprivate ownerId: string;\n\n\tconstructor(id: string, name: string, ownerId: string) {\n\t\tsuper('createSession');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t}\n\n\tprotected execute() {\n\t\tif (!this.store.crdts[this.id]) {\n\t\t\tthis.store.createCRDT(this.id);\n\t\t}\n\t\tthis.store.updating[this.id] = true;\n\t\tconst session = new Session(this.store, this.store.crdts[this.id], this.id, this.name, this.ownerId);\n\t\tdelete this.store.updating[this.id];\n\t\tthis.store.addDoc(session);\n\t\tthis.store.sessionList.push(this.id);\n\t\treturn true;\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateSession.ts","import { Changed } from 'crdt';\n\nimport { IDoc } from 'shared/models/Doc';\nimport Action from './Action';\n\nclass UpdateDoc extends Action {\n\tprivate docId: string;\n\tprivate changes: Changed<IDoc>;\n\n\tconstructor(docId: string, changes: Changed<IDoc>) {\n\t\tsuper('updateDoc');\n\n\t\tthis.docId = docId;\n\t\tthis.changes = changes;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = this.store.getDoc(this.docId);\n\n\t\tfor (const key in this.changes) {\n\t\t\t(doc as any)[key] = (this.changes as any)[key];\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default UpdateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateDoc.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | null) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = Props> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\tpublic div: HTMLDivElement | null = null;\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tprivate onRef = (div: HTMLDivElement | null) => {\n\t\tthis.div = div;\n\t\tif (this.props.elementRef) { this.props.elementRef(div); }\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.onRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import { observer } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\nimport CreateDoc from '../actions/CreateDoc';\n\nimport { IItem } from 'shared/models/Item';\n\nexport type Props = {\n\tsessionId: string,\n\tonEnterSession(sessionId: string): void\n};\n\ntype State = {\n\tinfo: boolean\n};\n\n@observer\nclass SessionItem extends React.Component<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate input!: HTMLInputElement | null;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { info: false };\n\t}\n\n\tprivate enterSession = () => {\n\t\tthis.props.onEnterSession(this.props.sessionId);\n\t}\n\n\tprivate displayInfo = () => {\n\t\tthis.setState({ info: !this.state.info });\n\t}\n\n\tprivate addText = () => {\n\t\tconst value = this.input!.value;\n\t\tif (value === '') { return; }\n\n\t\tconst sessionId = this.props.sessionId;\n\n\t\tconst itemId = 'item-' + uuid();\n\t\tthis.context.store.executeAction(new CreateDoc<IItem>({\n\t\t\tid: itemId,\n\t\t\ttype: 'item',\n\t\t\tcreatorId: this.context.store.userIdPerSessionId[sessionId],\n\t\t\tcreationDate: new Date().toISOString(),\n\t\t\titemContent: { type: 'text', content: value }\n\t\t}, sessionId));\n\t\tthis.input!.value = '';\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId } = this.props;\n\t\tconst { info } = this.state;\n\t\tconst store = this.context.store;\n\t\tconst session = store.getSession(sessionId);\n\n\t\treturn (\n\t\t\t<Button className={ 'SessionItem' + (info ? ' SessionItem_info' : '') } onTap={ this.enterSession }>\n\t\t\t\t<div>{ session.name }</div>\n\t\t\t\t<Button onTap={ this.displayInfo }>Info</Button>\n\t\t\t\t{ info && (\n\t\t\t\t\t<div className='SessionItem__info'>\n\t\t\t\t\t\t<div className='user-select'>{ session.id }</div>\n\t\t\t\t\t\t<QRCode value={ session.id } size={ 256 } />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t<div className='SessionItem__user-list'>\n\t\t\t\t{\n\t\t\t\t\tsession.userIds.map(userId =>\n\t\t\t\t\t\t<div className='SessionItem__user' key={ userId }>\n\t\t\t\t\t\t\t{ store.getUser(userId).name }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<div className='SessionItem__item-list'>\n\t\t\t\t{\n\t\t\t\t\tsession.itemIds.map(itemId =>\n\t\t\t\t\t\t<div className='SessionItem__item' key={ itemId }>\n\t\t\t\t\t\t\t{ store.getItem(itemId).itemContent.content }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<div className='SessionItem_add-text'>\n\t\t\t\t\t<input className='SessionItem_text-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.addText }>Send text</Button>\n\t\t\t\t</div>\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default SessionItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionItem.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\nclass SessionScanner extends React.PureComponent<Props> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.props.onSessionScanned(content);\n\t\t});\n\t}\n\n\tpublic scan = (): Promise<void> => {\n\t\treturn Instascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\tif (cameras.length > 0) {\n\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t} else {\n\t\t\t\tlog('No cameras found.');\n\t\t\t\tthrow new Error('No cameras found.');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stop = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\treturn (\n\t\t\t<video ref={ ref => this.videoElt = ref } className='session-scanner' />\n\t\t);\n\t}\n}\n\nexport default SessionScanner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import * as React from 'react';\n\nimport Button, { IButtonClass } from 'shared/components/Button';\n\nimport './Tabs.less';\n\ntype TabButtonProps = { tabId: string };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nexport type Props = {\n\ttabs: Array<{ tabId: string, Label: React.StatelessComponent }>,\n\tcurrentTabId: string,\n\tonTabSelect(tabId: string): void\n};\n\nclass Tabs extends React.PureComponent<Props> {\n\tprivate indicator: HTMLDivElement | null = null;\n\tprivate tabWidth: { [tabId: string]: number } = {};\n\n\tpublic componentDidMount() {\n\t\tthis.positionIndicator();\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tthis.positionIndicator();\n\t}\n\n\tprivate positionIndicator = () => {\n\t\tconst { currentTabId, tabs } = this.props;\n\t\tlet fullWidth = 0;\n\t\tlet passedCurrentTab = false;\n\t\tlet beforeWidth = 0;\n\t\tfor (const { tabId } of tabs) {\n\t\t\tif (tabId === currentTabId) { passedCurrentTab = true; }\n\t\t\tconst width = this.tabWidth[tabId];\n\t\t\tif (!passedCurrentTab) {\n\t\t\t\tbeforeWidth += width;\n\t\t\t}\n\t\t\tfullWidth += width;\n\t\t}\n\n\t\tthis.indicator!.style.transform =\n\t\t\t`translate3d(${beforeWidth * 100 / fullWidth}%, 0, 0) scaleX(${ this.tabWidth[currentTabId] / fullWidth })`;\n\t}\n\n\tprivate saveTabRef = (button: Button<TabButtonProps> | null) => {\n\t\tif (button) {\n\t\t\tthis.tabWidth[button.props.tabId] = button.div!.clientWidth;\n\t\t}\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.props.onTabSelect(button.props.tabId);\n\t}\n\n\tpublic render() {\n\t\tconst { currentTabId, tabs } = this.props;\n\n\t\treturn (\n\t\t\t<div className='Tabs'>\n\t\t\t\t<div className='Tabs__container'>\n\t\t\t\t\t{\n\t\t\t\t\t\ttabs.map(({ tabId, Label }) => {\n\n\t\t\t\t\t\t\treturn (<TabButton\n\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\tclassName={ 'Tabs__tab' + (currentTabId === tabId ? ' Tabs__tab_active' : '') }\n\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t\tref={ this.saveTabRef }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Label />\n\t\t\t\t\t\t\t</TabButton>); }\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<div className='Tabs__indicator' ref={ ref => this.indicator = ref } />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Tabs.tsx","import * as React from 'react';\n\nimport './TextField.less';\n\nexport type Props = {\n\tlabel: string,\n\tplaceholder: string,\n\tclassName?: string\n};\n\nclass TextField extends React.PureComponent<Props> {\n\tprivate mainDiv: HTMLDivElement | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\tprivate content: string = '';\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { hasContent: false };\n\t}\n\n\tprivate onChange = () => {\n\t\tthis.content = this.input!.value;\n\t}\n\n\tprivate onMainRef = (div: HTMLDivElement | null) => {\n\t\tthis.mainDiv = div;\n\t}\n\n\tprivate onBlur = () => {\n\t\tthis.mainDiv!.className = this.generateClassName();\n\t}\n\n\tprivate onInputRef = (input: HTMLInputElement | null) => {\n\t\tthis.input = input;\n\t}\n\n\tprivate generateClassName(): string {\n\t\treturn 'TextField' + (this.content.length ? ' TextField_hasContent' : '');\n\t}\n\n\tpublic getValue() { return this.content; }\n\n\tpublic render() {\n\t\tconst { label, placeholder } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ this.generateClassName() } ref={ this.onMainRef }>\n\t\t\t\t<div className='TextField__label'>{ label }</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='TextField__input'\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tref={ this.onInputRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/TextField.tsx","import * as PropTypes from 'prop-types';\nimport Store from './Store';\n\nexport type Context = {\n\tstore: Store\n};\n\nexport const contextTypes: {[T in keyof Context]: PropTypes.Requireable<any>} = {\n\tstore: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/context.ts","import { Atom } from 'mobx';\n\nimport Store from 'shared/Store';\n\nimport { Doc as CrdtDoc, Row as CrdtDow } from 'crdt';\n\nexport type DocType = 'session' | 'user' | 'item';\n\nexport function linked(docPrototype: any, property: string) {\n\tconst atom = new Atom(property);\n\n\tconst getter = function(this: Doc) {\n\t\tatom.reportObserved();\n\t\treturn (this as any).__data[property];\n\t};\n\n\tconst setter = function(this: Doc, val: any) {\n\t\tconst value = (this as any).__data[property];\n\t\tif (value === val) { return; }\n\t\t(this as any).__data[property] = val;\n\t\tif (this.row && this.row.get(property) !== val) {\n\t\t\tthis.row.set(property, val);\n\t\t}\n\t\tatom.reportChanged();\n\t};\n\n\tif (delete docPrototype[property]) {\n\t\tObject.defineProperty(docPrototype, property, {\n\t\t\tget: getter,\n\t\t\tset: setter\n\t\t});\n\t}\n}\n\nexport interface IDoc {\n\tid: string;\n\ttype: DocType;\n}\n\nabstract class Doc<M extends IDoc = any> {\n\tprotected __data = {};\n\t@linked public readonly id: string;\n\t@linked public readonly type: DocType;\n\tpublic row!: CrdtDow<M>;\n\tprotected store: Store;\n\tpublic changes: {[K in keyof M]?: M[K]};\n\n\tconstructor(store: Store, id: string, type: DocType) {\n\t\tthis.store = store;\n\t\tthis.id = id;\n\t\tthis.type = type;\n\t\tthis.changes = {};\n\t}\n\n\tprotected initCRDT(crdt: CrdtDoc): void {\n\t\tthis.row = crdt.get(this.id);\n\t\tif (!this.row.get('type')) {\n\t\t\tthis.row.set(this.toModel());\n\t\t}\n\n\t\tthis.row.on('change', (changed) => {\n\t\t\tObject.assign(this.changes, changed);\n\t\t});\n\t}\n\n\tprotected createDoc<O>(obj: O): O & IDoc {\n\t\treturn Object.assign(obj, { id: this.id, type: this.type });\n\t}\n\n\tpublic abstract toModel(): M;\n}\n\nexport default Doc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Doc.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport type TextItem = { type: 'text', content: string };\n\nexport type ItemContent = TextItem;\n\nexport interface IItem extends IDoc {\n\tcreatorId: string;\n\tcreationDate: string;\n\titemContent: ItemContent;\n}\n\nclass Item extends Doc<IItem> {\n\t@linked public creatorId: string;\n\t@linked public creationDate: string;\n\t@linked public itemContent: ItemContent;\n\n\tconstructor(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, id: string, creatorId: string, creationDate: string, itemContent: ItemContent\n\t) {\n\t\tsuper(store, id, 'item');\n\t\tthis.creatorId = creatorId;\n\t\tthis.creationDate = creationDate;\n\t\tthis.itemContent = itemContent;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, { id, creatorId, creationDate, itemContent }: IItem\n\t): Item {\n\t\treturn new Item(store, crdt, id, creatorId, creationDate, itemContent);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tcreationDate: this.creationDate,\n\t\t\tcreatorId: this.creatorId,\n\t\t\titemContent: this.itemContent\n\t\t});\n\t}\n}\n\nexport default Item;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Item.ts","import { Doc as CRDTDoc } from 'crdt';\nimport { observable } from 'mobx';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport createSeq from './createSeq';\n\nimport Store from 'shared/Store';\n\nexport interface ISession extends IDoc {\n\townerId: string;\n\tname: string;\n}\n\nclass Session extends Doc<ISession> {\n\t@linked public readonly ownerId: string;\n\t@linked public name: string;\n\t@observable public userIds: string[];\n\t@observable public itemIds: string[];\n\n\tconstructor(store: Store, crdt: CRDTDoc<IDoc>, id: string, name: string, ownerId: string) {\n\t\tsuper(store, id, 'session');\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t\tthis.userIds = [];\n\t\tthis.itemIds = [];\n\n\t\tthis.initCRDT(crdt);\n\t\tcreateSeq(crdt, store, 'type', 'item', this.itemIds, row => row.get('id'));\n\t\tcreateSeq(crdt, store, 'type', 'user', this.userIds, row => row.get('id'));\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CRDTDoc<IDoc>, { id, name, ownerId }: ISession): Session {\n\t\treturn new Session(store, crdt, id, name, ownerId);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\townerId: this.ownerId,\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default Session;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Session.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport interface IUser extends IDoc {\n\tname: string;\n}\n\nclass User extends Doc<IUser> {\n\t@linked public name: string;\n\n\tconstructor(store: Store, crdt: CrdtDoc, id: string, name: string) {\n\t\tsuper(store, id, 'user');\n\t\tthis.name = name;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CrdtDoc<IDoc>, { id, name }: IUser): User {\n\t\treturn new User(store, crdt, id, name);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/User.ts","import { Doc as CRDTDoc, Row } from 'crdt';\nimport { IDoc } from 'shared/models/Doc';\nimport Store from 'shared/Store';\n\nexport default function createSeq<D extends IDoc, K extends keyof D, L>(\n\tcrdt: CRDTDoc<D>, store: Store, key: K, value: D[K], list: L[], rowToValue: (row: Row<D>) => L\n) {\n\tconst seq = crdt.createSeq(key, value);\n\n\tseq.forEach(row => list.push(rowToValue(row)));\n\n\tseq.on('add', row => {\n\t\tconst index = seq.indexOf(row);\n\t\tif (index !== -1) {\n\t\t\tconst v = rowToValue(row);\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 0, v);\n\t\t\t});\n\t\t}\n\t});\n\n\tseq.on('remove', row => {\n\t\tconst v = rowToValue(row);\n\t\tconst index = list.indexOf(v);\n\t\tif (index !== -1) {\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 1);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/createSeq.ts","import { Doc as CRDTDoc } from 'crdt';\n\nimport Doc, { DocType, IDoc } from './Doc';\nimport Item from './Item';\nimport Session from './Session';\nimport User from './User';\n\nimport Store from 'shared/Store';\n\nconst docClass: {[D in DocType]: {\n\tnew(...args: any[]): Doc;\n\tinstantiate(store: Store, crdt: CRDTDoc<IDoc>, data: any): Doc;\n}} = {\n\tsession: Session,\n\tuser: User,\n\titem: Item\n};\n\nexport default docClass;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/docClass.ts","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts","import * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateSessionAction from 'shared/actions/CreateSession';\n\nimport Button from 'shared/components/Button';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './CreateSession.less';\n\nexport type Props = {\n\tnavigateToSession(sessionId: string): void\n};\n\nclass CreateSession extends React.PureComponent<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate sessionNameField!: TextField | null;\n\n\tprivate createSession = () => {\n\t\tconst sessionId = 'session-' + uuid();\n\t\tconst store = this.context.store;\n\t\tstore.openSession(sessionId);\n\t\tstore.executeAction(new CreateSessionAction(\n\t\t\tsessionId,\n\t\t\tthis.sessionNameField!.getValue(),\n\t\t\tstore.userIdPerSessionId[sessionId]\n\t\t));\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className='CreateSession'>\n\t\t\t\t<div className='view__explanation'>Create a session to allow another device to connect.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel='choose a name for your session'\n\t\t\t\t\t\t\tplaceholder='My session'\n\t\t\t\t\t\t\tref={ ref => this.sessionNameField = ref }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='view__column CreateSession__create-column'>\n\t\t\t\t\t\t<Button className='action-button  CreateSession__Create' onTap={ this.createSession }>\n\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/CreateSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './JoinSession.less';\n\nexport type Props = {\n\tnavigateToSession(sessionId: string): void\n};\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass JoinSession extends React.PureComponent<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate scanner: SessionScanner | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tisScanning: false\n\t\t};\n\t}\n\n\tprivate onSessionScanned = (sessionId: string) => {\n\t\tthis.setState({ isScanning: false });\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.setState({ isScanning: false }, () => this.scanner!.stop());\n\t}\n\n\tprivate startScanning = () => {\n\t\ttry {\n\t\t\tthis.scanner!.scan();\n\t\t\tthis.setState({ isScanning: true });\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\tprivate validateSession = () => {\n\t\tconst sessionId = this.input!.value;\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate join(sessionId: string) {\n\t\tthis.context.store.join(sessionId);\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tpublic render() {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className={ 'JoinSession' + (isScanning ? ' JoinSession_scanning' : '') }>\n\t\t\t\t<div className='view__explanation'>Join an existing session by scanning its QR code or entering its ID.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Scan a QR Code</div>\n\t\t\t\t\t<Button onTap={ this.startScanning } className='action-button'>Start Scanning</Button>\n\t\t\t\t\t<div className='JoinSession__scanner'>\n\t\t\t\t\t\t<SessionScanner onSessionScanned={ this.onSessionScanned } ref={ ref => this.scanner = ref } />\n\t\t\t\t\t\t<Button onTap={ this.stopScanning } className='action-button JoinSession__StopScanning'>Stop Scanning</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Enter a session ID</div>\n\t\t\t\t\t<input className='JoinSession__id-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.validateSession } className='action-button'>Join</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoinSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/JoinSession.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport SessionItem from 'shared/components/SessionItem';\nimport { Context, contextTypes } from 'shared/context';\n\nexport type Props = {\n\tnavigateToSession(sessionId: string): void\n};\n\n@observer\nclass Sessions extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate onEnterSession = (sessionId: string) => {\n\t\t//\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst sessionList = store.sessionList;\n\n\t\treturn (\n\t\t\t<div className='Sessions'>\n\t\t\t\t{ sessionList.map(sessionId => <SessionItem\n\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\tonEnterSession={ this.onEnterSession }\n\t\t\t\t/>) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/Sessions.tsx","import { observer } from 'mobx-react';\n\nimport { Context, contextTypes } from 'shared/context';\n\nexport type TabId = 'sessions' | 'create' | 'join';\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\nconst SessionLabel: React.StatelessComponent = observer(function (this: { context: Context }) {\n\tconst sessions = this.context.store.sessionList;\n\treturn ('My sessions' + (sessions.length ? ` (${sessions.length})` : '' )) as any;\n});\nSessionLabel.contextTypes = contextTypes;\n\nexport const TabMap: {[tabId in TabId]: React.StatelessComponent}  = {\n\tsessions: SessionLabel,\n\tcreate: () => 'Create Session' as any,\n\tjoin: () => 'Join Session' as any\n};\n\nexport const TabOrder: TabId[] = ['sessions', 'create', 'join'];\nexport const TabsInfo = TabOrder.map(tabId => ({ tabId, Label: TabMap[tabId] }));\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/tabs.tsx"],"sourceRoot":""}