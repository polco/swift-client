{"version":3,"sources":["webpack:///./src/desktop/app.tsx","webpack:///./src/desktop/components/Sidebar.tsx","webpack:///./src/desktop/views/Main.tsx","webpack:///./src/desktop/views/tabs.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/Store.ts","webpack:///./src/shared/actions/Action.ts","webpack:///./src/shared/actions/CreateDoc.ts","webpack:///./src/shared/actions/CreateSession.ts","webpack:///./src/shared/actions/UpdateDoc.ts","webpack:///./src/shared/actions/UpdateUserName.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SelectableText.tsx","webpack:///./src/shared/components/SessionDisplay.tsx","webpack:///./src/shared/components/SessionInfo.tsx","webpack:///./src/shared/components/SessionItem.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/components/Tabs.tsx","webpack:///./src/shared/components/TextField.tsx","webpack:///./src/shared/context.ts","webpack:///./src/shared/models/Doc.ts","webpack:///./src/shared/models/Item.ts","webpack:///./src/shared/models/Session.ts","webpack:///./src/shared/models/User.ts","webpack:///./src/shared/models/createSeq.ts","webpack:///./src/shared/models/docClass.ts","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts","webpack:///./src/shared/views/CreateSession.tsx","webpack:///./src/shared/views/JoinSession.tsx","webpack:///./src/shared/views/SessionViewer.tsx","webpack:///./src/shared/views/Sessions.tsx"],"names":["Mobx","__webpack_require__","React","ReactDOM","Main_1","useStrict","localStorage","setItem","div","document","getElementById","classList","add","render","createElement","default","mobx_react_1","Button_1","context_1","Sidebar","Component","[object Object]","this","onSessionSelect","e","props","selectSession","sessionId","store","context","currentSessionId","className","userName","sessionList","length","map","session","getSession","key","onTap","name","contextTypes","__decorate","observer","exports","mobx_react_devtools_1","configureDevtool","logEnabled","Store_1","CreateSession_1","JoinSession_1","Sessions_1","SessionViewer_1","tabs_1","Sidebar_1","Tabs_1","ContentClasses","sessions","create","join","Main","PureComponent","super","isNewSession","selectTab","tabId","setState","navigateToSession","isNew","navigateToTab","state","ContentClass","tabs","TabsInfo","categoryIndex","currentTabId","onTabSelect","hideIndicator","openInfo","childContextTypes","TabMap","Label","debug","events_1","SocketIO","log","EventEmitter","isConnecting","socket","transports","autoConnect","on","clientId","data","emit","error","connected","Promise","resolve","reject","connect","once","removeListener","disconnect","remoteClientId","ICustomEmitter","type","cb","prototype","call","value","gatewayClient","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","fromClientId","msg","__awaiter","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","setupDataChannel","onSendChannelClose","onSendChannelError","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","onerror","createOffer","onmessage","event","JSON","parse","stringify","crdt_1","mobx_1","dcstream","uuid","GatewayClient_1","CreateDoc_1","UpdateDoc_1","User_1","RTCClient_1","UAParser","Store","docs","RTCClients","crdts","updating","pendingSeqActions","userIdPerSessionId","onJoin","createCRDT","client","setupClient","dc","stream","pipe","createStream","onSessionUser","initiateConnection","window","res","getResult","os","browser","forEach","action","docId","doc","id","crdt","Doc","userId","user","addDoc","row","get","executeAction","changes","toJSON","openSession","closeSession","joinSession","dispose","observe","includes","itemId","sideEffect","run","observable","execute","docClass_1","Session_1","Action_1","instantiate","push","applyPendingSeqAction","ownerId","getDoc","getUser","ButtonPlugin_1","Factory_1","onDoubleTap","onRef","elementRef","button","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","Pdiv","interactionLock_1","onMouseDown","lock","requestLockOn","addEventListener","onMouseUp","releaseLock","removeEventListener","text","ref","SessionDisplay","isScrolledAtBottom","addText","input","creatorId","creationDate","Date","toISOString","itemContent","content","validateAddText","preventDefault","onScroll","scrollHeight","scrollTop","clientHeight","scrollDiv","Math","abs","scrollTo","itemElements","itemIds","lastCreatorId","currentClientElements","i","item","getItem","onSubmit","QRCode","SessionInfo","size","SelectableText_1","SessionItem","enterSession","onEnterSession","count","userIds","isYou","Instascan","videoElt","scan","Camera","getCameras","then","cameras","Error","scanner","start","stop","Scanner","video","mirror","addListener","onSessionScanned","TabButton","INDI_WIDTH","Tabs","indicator","tabsRef","tabWidth","labelUpdated","positionIndicator","clientWidth","fullWidth","passedCurrentTab","beforeWidth","width","transform","onLabelUpdate","category","onUpdate","defaultProps","mainDiv","onChange","onMainRef","onBlur","generateClassName","onInputRef","hasContent","blur","label","placeholder","PropTypes","object","linked","docPrototype","property","atom","Atom","getter","reportObserved","__data","setter","val","set","reportChanged","Object","defineProperty","toModel","changed","assign","obj","Doc_1","Item","initCRDT","createDoc","createSeq_1","Session","User","list","rowToValue","seq","createSeq","index","indexOf","v","splice","Item_1","docClass","spur_events_1","Plugin_1","onLock","DOMNode","current","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","max","coords","repeatTap","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","startTap","x","y","getBoundingClientRect","SpurEvent","press","longTap","now","tapDiff","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","len","listener","lockNodes","lockContainerNodes","node","parentNode","container","parent","TextField_1","CreateSession","createSession","sessionNameField","getValue","validate","SessionScanner_1","JoinSession","isScanning","stopScanning","startScanning","validateSession","formValidate","SessionDisplay_1","SessionInfo_1","toggleInfo","infoOpen","goBack","UpdateUserName_1","SessionItem_1","Sessions","updateUserName","clientNameField","setValue","userNameValidate","Fragment"],"mappings":"wHAAA,MAAAA,EAAAC,EAAA,0CACAC,EAAAD,EAAA,iCACAE,EAAAF,EAAA,qCACAA,EAAA,iCACA,MAAAG,EAAAH,EAAA,gCAEAD,EAAKK,WAAU,GAEfC,aAAaC,QAAQ,QAAS,UAE9B,MAAMC,EAAMC,SAASC,eAAe,SACpCF,EAAKG,UAAUC,IAAI,WACnBT,EAASU,OAAOX,EAAAY,cAACV,EAAAW,QAAI,MAAKP,khBCZ1B,MAAAQ,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACAiB,EAAAjB,EAAA,2BAEAA,EAAA,yCAQA,IAAMkB,gBAAgBjB,EAAMkB,UAD5BC,kCAKSC,KAAAC,gBAAkB,CAACC,IAC1BF,KAAKG,MAAMC,cAAcF,EAAEC,MAAME,aAG3BN,SACN,MAAMO,EAAQN,KAAKO,QAAQD,MACrBE,EAAmBR,KAAKG,MAAME,UAEpC,OACCzB,EAAAY,cAAA,OAAKiB,UAAU,WACd7B,EAAAY,cAAA,OAAKiB,UAAU,iBACd7B,EAAAY,cAAA,OAAKiB,UAAU,kBAAgB,gBAG/B7B,EAAAY,cAAA,OAAKiB,UAAU,sBACZH,EAAMI,WAGRJ,EAAMK,YAAYC,OACnBhC,EAAAY,cAAA,OAAKiB,UAAU,qBACd7B,EAAAY,cAAA,OAAKiB,UAAU,kBAAgB,aAG/B7B,EAAAY,cAAA,OAAKiB,UAAU,yBAEdH,EAAMK,YAAYE,IAAIR,IACrB,MAAMS,EAAUR,EAAMS,WAAWV,GAEjC,OACCzB,EAAAY,cAACG,EAAAF,SACAuB,IAAMX,EACNA,UAAYA,EACZY,MAAQjB,KAAKC,gBACbQ,UAAY,oBAAsBD,IAAqBH,EAAY,2BAA6B,KAE9FS,EAAQI,UAOd,QA5CSrB,EAAAsB,aAAevB,EAAAuB,aAFxBtB,EAAOuB,GADZ1B,EAAA2B,UACKxB,GAoDNyB,EAAA7B,QAAeI,gKClEf,MAAA0B,EAAA5C,EAAA,+CACAC,EAAAD,EAAA,iCAEA4C,EAAAC,kBACCC,YAAY,IAGb,MAAA7B,EAAAjB,EAAA,2BACA+C,EAAA/C,EAAA,yBAEAgD,EAAAhD,EAAA,wCACAiD,EAAAjD,EAAA,sCACAkD,EAAAlD,EAAA,mCACAmD,EAAAnD,EAAA,wCAGAoD,EAAApD,EAAA,gCAEAqD,EAAArD,EAAA,wCACAsD,EAAAtD,EAAA,oCAEAA,EAAA,iCAQA,MAAMuD,GACLC,SAAUN,EAAApC,QACV2C,OAAQT,EAAAlC,QACR4C,KAAMT,EAAAnC,eAGP6C,UAAmB1D,EAAM2D,cAKxBxC,YAAYI,EAAcI,GACzBiC,MAAMrC,EAAOI,GAHNP,KAAAyC,cAAe,EAafzC,KAAA0C,UAAY,CAACC,IACpB3C,KAAK4C,UAAWD,QAAOtC,UAAW,SAG3BL,KAAA6C,kBAAoB,EAACxC,EAAmByC,KAC/C9C,KAAKyC,eAAiBK,EACtB9C,KAAK4C,UAAWD,MAAO,WAAYtC,aAAa,KAC/CL,KAAKyC,cAAe,MAIdzC,KAAA+C,cAAgB,CAACJ,IACxB3C,KAAK4C,UAAWD,QAAOtC,UAAW,SApBlCL,KAAKM,MAAQ,IAAIoB,EAAAjC,QACjBO,KAAKgD,OAAUL,MAAO,WAAYtC,UAAW,MAGvCN,kBACN,OAASO,MAAON,KAAKM,OAkBfP,SACN,MAAM4C,MAAEA,EAAKtC,UAAEA,GAAcL,KAAKgD,MAC5BC,EAAef,EAAeS,GAEpC,OACC/D,EAAAY,cAAA,OAAKiB,UAAU,QACd7B,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAAA,OAAKiB,UAAU,eAAa,SAG5B7B,EAAAY,cAACyC,EAAAxC,SACAyD,KAAOnB,EAAAoB,SACPC,cAAgB,EAChBC,aAAeV,EACfW,YAActD,KAAK0C,UACnBa,gBAAkBlD,KAGpBzB,EAAAY,cAAA,OAAKiB,UAAU,cACd7B,EAAAY,cAACwC,EAAAvC,SAAQW,cAAgBJ,KAAK6C,kBAAoBxC,UAAYA,IAC9DzB,EAAAY,cAAA,OAAKiB,UAAU,uBACZJ,EACCzB,EAAAY,cAACsC,EAAArC,SAAcY,UAAYA,EAAYmD,SAAWxD,KAAKyC,eACvD7D,EAAAY,cAACyD,GACFJ,kBAAoB7C,KAAK6C,kBACzBE,cAAgB/C,KAAK+C,cACrB1C,UAAYA,OAMd,IA7DSiC,EAAAmB,kBAAoB7D,EAAAuB,aAmEnCG,EAAA7B,QAAe6C,gHCpGFhB,EAAAoC,QACZvB,SAAU,IAAM,cAChBC,OAAQ,IAAM,kBACdC,KAAM,IAAM,iBAIAf,EAAA6B,WADW,WAAY,SAAU,QACftC,IAAI8B,KAAYA,QAAOgB,MAAOrC,EAAAoC,OAAOf,qZCXpE,MAAAiB,EAAAjF,EAAA,+CACAkF,EAAAlF,EAAA,mCACAmF,EAAAnF,EAAA,gDACMoF,EAAMH,EAAM,uBA8ElBtC,EAAA7B,sBA5E4BoE,EAAAG,aAK3BjE,cACCyC,QAJOxC,KAAAiE,cAAe,EAKtBjE,KAAKkE,OAASJ,EAAS,uCAAwBK,YAAa,aAAcC,aAAa,IAEvFpE,KAAKkE,OAAOG,GAAG,OAAQ,CAACC,EAAkBC,KACzCR,EAAI,gBAAiBQ,GACrBvE,KAAKwE,KAAK,OAAQF,EAAUC,KAE7BvE,KAAKkE,OAAOG,GAAG,QAAUI,GAAeV,EAAIU,IAC5CzE,KAAKkE,OAAOG,GAAG,aAAc,KAC5BN,EAAI,iCACJ/D,KAAKwE,KAAK,kBAEXxE,KAAKkE,OAAOG,GAAG,OAAQ,CAAChE,EAAmBiE,KAC1CtE,KAAKwE,KAAK,OAAQnE,EAAWiE,KAE9BtE,KAAKkE,OAAOG,GAAG,gBAAiB,CAAChE,EAAmBiE,KACnDtE,KAAKwE,KAAK,gBAAiBnE,EAAWiE,KAIhCvE,UACP,OAAIC,KAAKiE,cAAgBjE,KAAKkE,OAAOQ,UAAoBC,QAAQC,WACjE5E,KAAKiE,cAAe,EAEb,IAAIU,QAAQ,CAACC,EAASC,KAC5B7E,KAAKkE,OAAOY,UAEZ9E,KAAKkE,OAAOa,KAAK,UAAW,KAC3B/E,KAAKiE,cAAe,EACpBF,EAAI,4BACJ/D,KAAKkE,OAAOc,eAAe,iBAC3BhF,KAAKkE,OAAOc,eAAe,mBAC3BJ,MAED5E,KAAKkE,OAAOa,KAAK,gBAAiBF,GAClC7E,KAAKkE,OAAOa,KAAK,kBAAmBF,MAIzB9E,YAAYM,2CACnBL,KAAKkE,OAAOQ,kBAAmB1E,KAAK8E,WACzC9E,KAAKkE,OAAOM,KAAK,cAAenE,KAGpBN,aAAaM,2CACpBL,KAAKkE,OAAOQ,kBAAmB1E,KAAK8E,WACzC9E,KAAKkE,OAAOM,KAAK,eAAgBnE,GACjCL,KAAKiF,eAGOlF,YAAYM,2CACnBL,KAAKkE,OAAOQ,kBAAmB1E,KAAK8E,WACzC9E,KAAKkE,OAAOM,KAAK,OAAQnE,KAGlBN,aACFC,KAAKkE,OAAOQ,YACjB1E,KAAKiE,cAAe,EACpBjE,KAAKkE,OAAOe,aACZjF,KAAKkE,OAAOc,eAAe,iBAC3BhF,KAAKkE,OAAOc,eAAe,oBAGfjF,KAAKmF,EAAwBX,2CACpCvE,KAAKkE,OAAOQ,kBAAmB1E,KAAK8E,WACzCf,EAAI,UAAWQ,EAAM,KAAMW,GAC3BlF,KAAKkE,OAAOM,KAAK,OAAQU,EAAgBX,iZC7E3C,MAAAX,EAAAjF,EAAA,+CACAkF,EAAAlF,EAAA,mCAKMoF,EAAMH,EAAM,yBAelBuB,UAAsCtB,EAAAG,aAC9BjE,GAA6BqF,EAASC,GAE5C,OADAxB,EAAAG,aAAasB,UAAUjB,GAAGkB,KAAKvF,KAAMoF,EAAMC,GACpCrF,KAGDD,KAA+BqF,EAASI,GAC9C,OAAO3B,EAAAG,aAAasB,UAAUd,KAAKe,KAAKvF,KAAMoF,EAAMI,IA+GtDlE,EAAA7B,sBA1GwB0F,EAQvBpF,YAAYmF,EAAwBO,GACnCjD,QANOxC,KAAA0F,YAAqC,KAEtC1F,KAAA2F,iBAAkB,EAClB3F,KAAA4F,gBAAiB,EA8BjB5F,KAAA6F,iBAAmB,EAAOC,EAAsBC,IAAgBC,EAAAhG,UAAA,qBACtE,GAAI8F,IAAiB9F,KAAKkF,eAC1B,GAAiB,UAAba,EAAIX,KAAkB,CACzBpF,KAAKiG,GAAGC,qBAAqB,IAAIC,sBAAsBJ,EAAIK,qBAC3D,MAAMA,QAA2BpG,KAAKiG,GAAGI,eACzCrG,KAAKiG,GAAGK,oBAAoBF,GAC5BpG,KAAKyF,cAAcc,KAAKvG,KAAKkF,gBAAkBE,KAAM,SAAUgB,4BACzD,GAAiB,WAAbL,EAAIX,KACdpF,KAAKiG,GAAGC,qBAAqBH,EAAIK,yBAC3B,GAAiB,cAAbL,EAAIX,KAAsB,CACpC,MAAMoB,EAAY,IAAIC,iBACrBC,cAAeX,EAAIS,UAAUE,cAC7BF,UAAWT,EAAIS,UAAUA,YAE1BxG,KAAKiG,GAAGU,gBAAgBH,OAIlBxG,KAAA4G,kBAAoB,CAAC1G,IAC5B6D,EAAI,uBACJ/D,KAAK6G,qBAGE7G,KAAA8G,mBAAqB,CAAC5G,IAC7B6D,EAAI,qBAAsB7D,KAGnBF,KAAA+G,mBAAqB,CAAC7G,IAC7B6D,EAAI,qBAAsB7D,KAGnBF,KAAAgH,cAAgB,CAAC9G,IACxB6D,EAAI,uBACJ/D,KAAK0F,YAAcxF,EAAE+G,QACrBjH,KAAK6G,qBAsBE7G,KAAAkH,oBAAsB,CAAChH,IACzBA,EAAEsG,WAEPxG,KAAKyF,cAAcc,KAAKvG,KAAKkF,gBAC5BE,KAAM,YACNoB,WACCE,cAAexG,EAAEsG,UAAUE,cAC3BS,OAAQjH,EAAEsG,UAAUW,OACpBX,UAAWtG,EAAEsG,UAAUA,eAzFzBxG,KAAKyF,cAAgBA,EACrBzF,KAAKyF,cAAcpB,GAAG,OAAQrE,KAAK6F,kBACnC7F,KAAKkF,eAAiBA,EAEtBlF,KAAKiG,GAAK,IAAImB,mBACbC,aAAeC,KAAM,mCAEtBtH,KAAKiG,GAAGsB,eAAiBvH,KAAKkH,oBAC9BlH,KAAKiG,GAAGuB,cAAgBxH,KAAKgH,cAGjBjH,6DACZgE,EAAI,sBACJ/D,KAAK0F,YAAc1F,KAAKiG,GAAGwB,kBAAkB,2BAA6BzH,KAAKkF,gBAC/ElF,KAAK0F,YAAYgC,OAAS1H,KAAK4G,kBAC/B5G,KAAK0F,YAAYiC,QAAU3H,KAAK8G,mBAChC9G,KAAK0F,YAAYkC,QAAU5H,KAAK+G,mBAEhChD,EAAI,gBACJ,MAAMqC,QAA2BpG,KAAKiG,GAAG4B,cACzC9D,EAAI,uBACE/D,KAAKiG,GAAGK,oBAAoBF,GAClCpG,KAAKyF,cAAcc,KAAKvG,KAAKkF,gBAAkBE,KAAM,QAASgB,yBAwCvDrG,mBACPC,KAAK0F,YAAaoC,UAAY,CAACC,IAC9B,MAAM3C,KAAEA,EAAIb,KAAEA,GAASyD,KAAKC,MAAMF,EAAMxD,MACxCvE,KAAKwE,KAAKY,EAAMb,KAEjBvE,KAAKyF,cAAcT,eAAe,OAAQhF,KAAK6F,kBAC/C7F,KAAKwE,KAAK,UAAWxE,KAAK0F,aAGpB3F,iBAAmB,OAAOC,KAAK0F,YAE/B3F,YAAsCqF,EAASb,GACjDvE,KAAK0F,YACR1F,KAAK0F,YAAYa,KAAKyB,KAAKE,WAAY9C,OAAMb,UAE7CR,EAAI,mgBCzHP,MAAAoE,EAAAxJ,EAAA,gCACAiF,EAAAjF,EAAA,+CACAyJ,EAAAzJ,EAAA,0CACA0J,EAAA1J,EAAA,wCACA2J,EAAA3J,EAAA,6BAEA4J,EAAA5J,EAAA,iCAGA6J,EAAA7J,EAAA,qCACA8J,EAAA9J,EAAA,qCAKA+J,EAAA/J,EAAA,+BAEAgK,EAAAhK,EAAA,6BACAiK,EAAAjK,EAAA,gDAEMoF,EAAMH,EAAM,yBASlBiF,EAeC9I,cAdmBC,KAAAW,eACXX,KAAA8I,QAIA9I,KAAA+I,cAED/I,KAAAgJ,SACAhJ,KAAAiJ,YAEAjJ,KAAAkJ,qBAEAlJ,KAAAmJ,sBA6BCnJ,KAAAoJ,OAAS,EAAC/I,EAAmBiE,KAGpC,GAFKtE,KAAKgJ,MAAM3I,IAAcL,KAAKqJ,WAAWhJ,GAE1CL,KAAK+I,WAAWzE,GAAa,OACjC,MAAMgF,EAAStJ,KAAK+I,WAAWzE,GAAY,IAAIqE,EAAAlJ,QAAU6E,EAAUtE,KAAKyF,eACxEzF,KAAKuJ,YAAYD,GACjBA,EAAOjF,GAAG,UAAYmF,IACrB,MAAMC,EAASpB,EAASmB,GACxBC,EAAOC,KAAK1J,KAAKgJ,MAAM3I,GAAWsJ,gBAAgBD,KAAKD,OAIjDzJ,KAAA4J,cAAgB,EAACvJ,EAAmBiE,KAG3C,GAFKtE,KAAKgJ,MAAM3I,IAAcL,KAAKqJ,WAAWhJ,GAE1CL,KAAK+I,WAAWzE,GAAa,OACjC,MAAMgF,EAAStJ,KAAK+I,WAAWzE,GAAY,IAAIqE,EAAAlJ,QAAU6E,EAAUtE,KAAKyF,eACxEzF,KAAKuJ,YAAYD,GACjBA,EAAOO,qBACPP,EAAOjF,GAAG,UAAYmF,IACrB,MAAMC,EAASpB,EAASmB,GACxBC,EAAOC,KAAK1J,KAAKgJ,MAAM3I,GAAWsJ,gBAAgBD,KAAKD,OA/CvDK,OAAexJ,MAAQN,KAExB,MACM+J,GADS,IAAInB,GACAoB,YACnBhK,KAAKU,SAAWqJ,EAAIE,GAAG/I,KAAO,MAAQ6I,EAAIG,QAAQhJ,KAElDlB,KAAKyF,cAAgB,IAAI8C,EAAA9I,QACzBO,KAAKyF,cAAcpB,GAAG,OAAQrE,KAAKoJ,QACnCpJ,KAAKyF,cAAcpB,GAAG,gBAAiBrE,KAAK4J,eAGtC7J,wBACFC,KAAKkJ,kBAAkBtI,SAC1BZ,KAAKkJ,kBAAkBiB,QAAQC,GAAUA,KACzCpK,KAAKkJ,sBAIAnJ,OAAOsK,GACb,OAAOrK,KAAK8I,KAAKuB,GAGXtK,OAAOuK,GACbtK,KAAK8I,KAAKwB,EAAIC,IAAMD,EA4BdvK,WAAWM,GACjB,MAAMmK,EAAOxK,KAAKgJ,MAAM3I,GAAa,IAAI8H,EAAAsC,IAGnCC,EAAS,QAAUpC,IACzBtI,KAAKmJ,mBAAmB9I,GAAaqK,EACrC1K,KAAKiJ,SAASyB,IAAU,EACxB,MAAMC,EAAO,IAAIjC,EAAAjJ,QAAKO,KAAMwK,EAAME,EAAQ1K,KAAKU,UAC/CV,KAAK4K,OAAOD,UACL3K,KAAKiJ,SAASyB,GAErBF,EAAKnG,GAAG,aAAewG,IACtB,MAAMN,EAAKM,EAAIC,IAAI,MACf9K,KAAKiJ,SAASsB,KAClBvK,KAAKiJ,SAASsB,IAAM,EAEhBvK,KAAK8I,KAAKyB,GACbvK,KAAK+K,cAAc,IAAItC,EAAAhJ,QAAU8K,EAAIvK,KAAK8I,KAAKyB,GAAIS,UAEnDhL,KAAK+K,cAAc,IAAIvC,EAAA/I,QAAUoL,EAAII,SAAU5K,WAGzCL,KAAKiJ,SAASsB,MAIfxK,YAAYuJ,IAsBbvJ,YAAYM,GAClBL,KAAKqJ,WAAWhJ,GAChBL,KAAKyF,cAAcyF,YAAY7K,GAGzBN,aAAaM,GACnBL,KAAKyF,cAAc0F,aAAa9K,GAG1BN,KAAKM,GAGX,OAFAL,KAAKqJ,WAAWhJ,GAChBL,KAAKyF,cAAc2F,YAAY/K,GACxB,IAAIsE,QAASC,IAEnB,MAAMyG,EAAUjD,EAAAkD,QAAQtL,KAAKW,YAAa,KACrCX,KAAKW,YAAY4K,SAASlL,KAC7BgL,IACAzG,SAMG7E,WAAWM,GACjB,OAAOL,KAAK8I,KAAKzI,GAGXN,cAAcM,GAEpB,IADgBL,KAAK8I,KAAKzI,GACV,OAAO0D,EAAI,yCAA0C1D,UAC9DL,KAAK8I,KAAKzI,GAGXN,QAAQ2K,GACd,OAAO1K,KAAK8I,KAAK4B,GAGX3K,QAAQyL,GACd,OAAOxL,KAAK8I,KAAK0C,GAGXzL,cAAgCqK,EAAWqB,GAAa,GAE9D,OADArB,EAAOsB,IAAI1L,MACJoK,GA7JIhJ,GAAXgH,EAAAuD,8CAGWvK,GAAXgH,EAAAuD,2CA8JFrK,EAAA7B,QAAeoJ,kHC/Lf,MAAAT,EAAAzJ,EAAA,0CAuBA2C,EAAA7B,cAZCM,YAAYqF,GACXpF,KAAKoF,KAAOA,EAGNrF,IAAIO,GACVN,KAAKM,MAAQA,EACb8H,EAAAgC,OAAOpK,KAAKoF,KAAM,IAAMpF,KAAK4L,UAA7BxD,wHChBF,MAAAyD,EAAAlN,EAAA,mCACAmN,EAAAnN,EAAA,kCAEAoN,EAAApN,EAAA,kCA2BA2C,EAAA7B,sBAzBwCsM,EAAAtM,QAIvCM,YAAY8K,EAAQxK,GACnBmC,MAAM,aAENxC,KAAK6K,IAAMA,EACX7K,KAAKK,UAAYA,EAGRN,UACT,MAAMuK,EAAMuB,EAAApM,QAASO,KAAK6K,IAAIzF,MAAM4G,YAAYhM,KAAKM,MAAON,KAAKM,MAAM0I,MAAMhJ,KAAKK,WAAYL,KAAK6K,KASnG,OARA7K,KAAKM,MAAMsK,OAAON,GAEdA,aAAewB,EAAArM,UAAYO,KAAKM,MAAMK,YAAY4K,SAASvL,KAAK6K,IAAIN,KACvEvK,KAAKM,MAAMK,YAAYsL,KAAKjM,KAAK6K,IAAIN,IAGtCvK,KAAKM,MAAM4L,yBAEJ,2HC3BT,MAAAJ,EAAAnN,EAAA,kCAEAoN,EAAApN,EAAA,kCA4BA2C,EAAA7B,sBA1B4BsM,EAAAtM,QAK3BM,YAAYwK,EAAYrJ,EAAciL,GACrC3J,MAAM,iBAENxC,KAAKuK,GAAKA,EACVvK,KAAKkB,KAAOA,EACZlB,KAAKmM,QAAUA,EAGNpM,UACJC,KAAKM,MAAM0I,MAAMhJ,KAAKuK,KAC1BvK,KAAKM,MAAM+I,WAAWrJ,KAAKuK,IAE5BvK,KAAKM,MAAM2I,SAASjJ,KAAKuK,KAAM,EAC/B,MAAMzJ,EAAU,IAAIgL,EAAArM,QAAQO,KAAKM,MAAON,KAAKM,MAAM0I,MAAMhJ,KAAKuK,IAAKvK,KAAKuK,GAAIvK,KAAKkB,KAAMlB,KAAKmM,SAI5F,cAHOnM,KAAKM,MAAM2I,SAASjJ,KAAKuK,IAChCvK,KAAKM,MAAMsK,OAAO9J,GAClBd,KAAKM,MAAMK,YAAYsL,KAAKjM,KAAKuK,KAC1B,uHCvBT,MAAAwB,EAAApN,EAAA,kCA0BA2C,EAAA7B,sBAxBwBsM,EAAAtM,QAIvBM,YAAYsK,EAAeW,GAC1BxI,MAAM,aAENxC,KAAKqK,MAAQA,EACbrK,KAAKgL,QAAUA,EAGNjL,UACT,MAAMuK,EAAMtK,KAAKM,MAAM8L,OAAOpM,KAAKqK,OAEnC,IAAK,MAAMrJ,KAAOhB,KAAKgL,QACrBV,EAAYtJ,GAAQhB,KAAKgL,QAAgBhK,GAK3C,OAFAhB,KAAKM,MAAM4L,yBAEJ,4HCzBT,MAAAH,EAAApN,EAAA,kCAqBA2C,EAAA7B,sBAnB6BsM,EAAAtM,QAG5BM,YAAYmB,GACXsB,MAAM,kBAENxC,KAAKkB,KAAOA,EAGHnB,UACT,IAAK,MAAM2K,KAAU1K,KAAKM,MAAM6I,mBAClBnJ,KAAKM,MAAM+L,QAAQ3B,GAC3BxJ,KAAOlB,KAAKkB,KAGlB,OADAlB,KAAKM,MAAMI,SAAWV,KAAKkB,MACpB,8KCjBT,MAAAtC,EAAAD,EAAA,iCACA2N,EAAA3N,EAAA,qCACA4N,EAAA5N,EAAA,iCAEAA,EAAA,uCA0EA2C,EAAA7B,sBAzDgCb,EAAM2D,cAIrCxC,YAAYI,EAAiBI,GAC5BiC,MAAMrC,EAAOI,GAHPP,KAAAd,IAA6B,KAuB5Bc,KAAAiB,MAAQ,CAACf,IAChBF,KAAKG,MAAMc,MAAOjB,KAAME,KAGjBF,KAAAwM,YAAc,CAACtM,IACtBF,KAAKG,MAAMqM,YAAaxM,KAAME,KAGvBF,KAAAyM,MAAQ,CAACvN,IAChBc,KAAKd,IAAMA,EACPc,KAAKG,MAAMuM,YAAc1M,KAAKG,MAAMuM,WAAWxN,KA5BnD,MAAMyN,EAAS,IAAIL,EAAA7M,QACnBO,KAAK4M,SAAYD,UACjBA,EAAOE,WAAW1M,EAAM2M,UACxBH,EAAOI,SAAW5M,EAAM4M,OAEpB/M,KAAKG,MAAMc,OAAS0L,EAAOtI,GAAG,MAAOrE,KAAKiB,OAC1CjB,KAAKG,MAAMqM,aAAeG,EAAOtI,GAAG,YAAarE,KAAKwM,aAGpDzM,0BAA0BiN,GAChC,MAAML,EAAS3M,KAAK4M,QAAQD,OAC5BA,EAAOE,WAAWG,EAAUF,UAC5BH,EAAOI,SAAWC,EAAUD,OAExBC,EAAU/L,QAAU0L,EAAOM,YAAY,QAAUN,EAAOtI,GAAG,MAAOrE,KAAKiB,OACvE+L,EAAUR,cAAgBG,EAAOM,YAAY,cAAgBN,EAAOtI,GAAG,YAAarE,KAAKwM,aAgBvFzM,SACN,MAAMU,UAAEA,EAASqM,SAAEA,EAAQI,SAAEA,EAAQC,MAAEA,GAAUnN,KAAKG,MAOhDA,GACLM,UALA,UACCA,EAAY,IAAMA,EAAY,KAC9BqM,EAAW,YAAc,IAI1BJ,WAAY1M,KAAKyM,MACjBG,QAAS5M,KAAK4M,QACdO,SAGD,OAAOvO,EAAMY,cAAc+M,EAAAa,KAAMjN,EAAO+M,+LC1E1C,MAAAtO,EAAAD,EAAA,iCACA0O,EAAA1O,EAAA,wCAEAA,EAAA,+CA0CA2C,EAAA7B,sBAnC6Bb,EAAMkB,UAAnCC,kCAQSC,KAAAsN,YAAc,MACrBtN,KAAKuN,KAAOF,EAAA5N,QAAgB+N,cAAcxN,KAAKd,KAE3Cc,KAAKuN,MACRzD,OAAO2D,iBAAiB,UAAWzN,KAAK0N,aAIlC1N,KAAA0N,UAAY,MACnBL,EAAA5N,QAAgBkO,YAAY3N,KAAKuN,QAb3BxN,uBACN+J,OAAO8D,oBAAoB,UAAW5N,KAAK0N,WAerC3N,SACN,MAAM8N,KAAEA,EAAIpN,UAAEA,GAAcT,KAAKG,MAEjC,OACCvB,EAAAY,cAAA,OACCiB,UAAY,kBAAoBA,EAAY,IAAMA,EAAY,IAC9D6M,YAActN,KAAKsN,YACnBQ,IAAMA,GAAO9N,KAAKd,IAAM4O,GAEtBD,giBCvCN,MAAAnO,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCACA2J,EAAA3J,EAAA,6BAEA6J,EAAA7J,EAAA,qCACAgB,EAAAhB,EAAA,sCACAiB,EAAAjB,EAAA,2BAGAA,EAAA,+CAOA,IAAMoP,gBAAuBnP,EAAMkB,UADnCC,kCAMSC,KAAAgO,oBAAqB,EAQrBhO,KAAAiO,QAAU,MACjB,MAAMzI,EAAQxF,KAAKkO,MAAO1I,MACpBnF,EAAYL,KAAKG,MAAME,UAC7B,GAAc,KAAVmF,IAAiBnF,EAAa,OAElC,MAAMmL,EAAS,QAAUlD,IACzBtI,KAAKO,QAAQD,MAAMyK,cAAc,IAAIvC,EAAA/I,SACpC8K,GAAIiB,EACJpG,KAAM,OACN+I,UAAWnO,KAAKO,QAAQD,MAAM6I,mBAAmB9I,GACjD+N,cAAc,IAAIC,MAAOC,cACzBC,aAAenJ,KAAM,OAAQoJ,QAAShJ,IACpCnF,IACHL,KAAKkO,MAAO1I,MAAQ,KAGbxF,KAAAyO,gBAAkB,CAACvO,IAC1BA,EAAEwO,iBACF1O,KAAKiO,YAGEjO,KAAA2O,SAAW,MAClB,MAAMC,aAAEA,EAAYC,UAAEA,EAASC,aAAEA,GAAiB9O,KAAK+O,UACvD/O,KAAKgO,mBAAqBgB,KAAKC,IAAIH,EAAeD,EAAYD,GAAgB,KA7BxE7O,qBACFC,KAAKgO,oBACRhO,KAAK+O,UAAWG,SAAS,EAAGlP,KAAK+O,UAAWH,cA8BvC7O,SACN,MAAMO,EAAQN,KAAKO,QAAQD,OACrBD,UAAEA,GAAcL,KAAKG,MAGrBgP,KAEAC,EAJU9O,EAAMS,WAAWV,GAIT+O,QAExB,IAAIC,EAAwB,GACxBC,KACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQxO,OAAQ2O,GAAK,EAAG,CAC3C,MAAM/D,EAAS4D,EAAQG,GACjBC,EAAOlP,EAAMmP,QAAQjE,GACvBgE,EAAKrB,YAAckB,IACtBA,EAAgBG,EAAKrB,UACrBmB,KAEAH,EAAalD,KACZrN,EAAAY,cAAA,OACCwB,IAAMuO,EACN9O,UACC,gCACC4O,IAAkB/O,EAAM6I,mBAAmB9I,GAAa,oCAAsC,KAGhGzB,EAAAY,cAAA,OAAKiB,UAAU,gCAAiCH,EAAM+L,QAAQmD,EAAKrB,WAAWjN,MAC9EtC,EAAAY,cAAA,OAAKiB,UAAU,yBAA0B6O,MAK5CA,EAAsBrD,KACrBrN,EAAAY,cAAA,OAAKiB,UAAU,uBAAuBO,IAAMuO,GAAMC,EAAKjB,YAAYC,UAIrE,OACC5P,EAAAY,cAAA,OAAKiB,UAAU,kBACd7B,EAAAY,cAAA,OACCiB,UAAU,4BACVkO,SAAW3O,KAAK2O,SAChBb,IAAMA,GAAO9N,KAAK+O,UAAYjB,GAE5BqB,GAEHvQ,EAAAY,cAAA,QAAMiB,UAAU,6BAA6BiP,SAAW1P,KAAKyO,iBAC5D7P,EAAAY,cAAA,SAAOiB,UAAU,6BAA6BqN,IAAMA,GAAO9N,KAAKkO,MAAQJ,IACxElP,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKiO,QAAUxN,UAAU,qCAAmC,WArFlEsN,EAAA5M,aAAevB,EAAAuB,aAFxB4M,EAAc3M,GADnB1B,EAAA2B,UACK0M,GA8FNzM,EAAA7B,QAAesO,uhBC9Gf,MAAArO,EAAAf,EAAA,6CACAgR,EAAAhR,EAAA,4CACAC,EAAAD,EAAA,iCACAiB,EAAAjB,EAAA,2BAEAA,EAAA,4CAOA,IAAMiR,gBAAoBhR,EAAMkB,UAIxBC,SACN,MAAMO,EAAQN,KAAKO,QAAQD,MACrBQ,EAAUR,EAAMS,WAAWf,KAAKG,MAAME,WAE5C,OACCzB,EAAAY,cAAA,OAAKiB,UAAU,eACd7B,EAAAY,cAAA,OAAKiB,UAAU,wBACd7B,EAAAY,cAAA,OAAKiB,UAAU,oBACd7B,EAAAY,cAAA,OAAKiB,UAAU,sBAAoB,SACnC7B,EAAAY,cAAA,OAAKiB,UAAU,qBAAsBK,EAAQI,OAE9CtC,EAAAY,cAAA,OAAKiB,UAAU,oBACd7B,EAAAY,cAAA,OAAKiB,UAAU,sBAAoB,eACnC7B,EAAAY,cAAA,OAAKiB,UAAU,wBAAyBH,EAAM+L,QAAQvL,EAAQqL,SAASjL,OAExEtC,EAAAY,cAAA,OAAKiB,UAAU,oBACd7B,EAAAY,cAAA,OAAKiB,UAAU,sBAAoB,OACnC7B,EAAAY,cAAA,OAAKiB,UAAU,wBAAyBK,EAAQyJ,MAGlD3L,EAAAY,cAAA,OAAKiB,UAAU,mBACd7B,EAAAY,cAACmQ,GAAOnK,MAAQ1E,EAAQyJ,GAAKsF,KAAO,UAvB1BD,EAAAzO,aAAevB,EAAAuB,aAFxByO,EAAWxO,GADhB1B,EAAA2B,UACKuO,GAgCNtO,EAAA7B,QAAemQ,uhBC5Cf,MAAAlQ,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACAmR,EAAAnR,EAAA,8CACAiB,EAAAjB,EAAA,2BAEAA,EAAA,4CAQA,IAAMoR,gBAAoBnR,EAAMkB,UADhCC,kCAKSC,KAAAgQ,aAAe,MACtBhQ,KAAKG,MAAM8P,eAAejQ,KAAKG,MAAME,aAG/BN,SACN,MAAMM,UAAEA,GAAcL,KAAKG,MACrBG,EAAQN,KAAKO,QAAQD,MACrBQ,EAAUR,EAAMS,WAAWV,GAE3B6P,EAAQpP,EAAQsO,QAAQxO,OAE9B,OACChC,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,cAAcQ,MAAQjB,KAAKgQ,cAC5CpR,EAAAY,cAAA,OAAKiB,UAAU,6BACd7B,EAAAY,cAAA,OAAKiB,UAAU,6BAA8BK,EAAQI,MACrDtC,EAAAY,cAAA,OAAKiB,UAAU,8BAA+ByP,SAAcA,EAAQ,EAAI,IAAM,OAE/EtR,EAAAY,cAAA,OAAKiB,UAAU,4BACd7B,EAAAY,cAAA,OAAKiB,UAAU,kCAAgC,sBAC7CK,EAAQqP,QAAQtP,IAAI6J,IACrB,MAAM0F,EAAQ1F,IAAWpK,EAAM6I,mBAAmB9I,GAClD,OACCzB,EAAAY,cAAA,OACCiB,UAAY,uBAAyB2P,EAAQ,2BAA6B,IAC1EpP,IAAM0J,GAEJpK,EAAM+L,QAAQ3B,GAAQxJ,KACtBkP,EAAQ,SAAW,SAKzBxR,EAAAY,cAAA,OAAKiB,UAAU,uBACd7B,EAAAY,cAAA,OAAKiB,UAAU,yBAAuB,OACtC7B,EAAAY,cAACsQ,EAAArQ,SAAegB,UAAU,kBAAkBoN,KAAOxN,QApCzC0P,EAAA5O,aAAevB,EAAAuB,aAFxB4O,EAAW3O,GADhB1B,EAAA2B,UACK0O,GA6CNzO,EAAA7B,QAAesQ,8HC5Df,MAAAnM,EAAAjF,EAAA,+CACA0R,EAAA1R,EAAA,qCACAC,EAAAD,EAAA,iCACMoF,EAAMH,EAAM,wBAwClBtC,EAAA7B,sBAlC6Bb,EAAM2D,cAAnCxC,kCACSC,KAAAsQ,SAAoC,KAWrCtQ,KAAAuQ,KAAO,KACNF,EAAUG,OAAOC,aAAaC,KAAMC,IAC1C,KAAIA,EAAQ/P,OAAS,GAIpB,MADAmD,EAAI,qBACE,IAAI6M,MAAM,qBAHhB5Q,KAAK6Q,QAAQC,MAAMH,EAAQ,IAAMA,EAAQ,OAQrC3Q,KAAA+Q,KAAO,MACb/Q,KAAK6Q,QAAQE,SApBPhR,oBACNC,KAAK6Q,QAAU,IAAIR,EAAUW,SAAUC,MAAOjR,KAAKsQ,SAAUY,QAAQ,IACrElR,KAAK6Q,QAAQM,YAAY,OAAS3C,IACjCxO,KAAK6Q,QAAQE,OACb/Q,KAAKG,MAAMiR,iBAAiB5C,KAmBvBzO,SACN,OACCnB,EAAAY,cAAA,SAAOsO,IAAMA,GAAO9N,KAAKsQ,SAAWxC,EAAMrN,UAAU,4LCtCvD,MAAA7B,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCAEAA,EAAA,qCAKA,MAAM0S,EAAY1R,EAAAF,QAEZ6R,EAAa,UAUnBC,UAAmB3S,EAAM2D,cAAzBxC,kCACSC,KAAAwR,UAAmC,KACnCxR,KAAAyR,WACAzR,KAAA0R,YACA1R,KAAA2R,cAAe,EAYf3R,KAAA4R,kBAAoB,MAC3B,GAAI5R,KAAK2R,aAAc,CACtB3R,KAAK2R,cAAe,EACpB,IAAK,MAAMhP,KAAS3C,KAAKyR,QAAS,CACjC,MAAM9E,EAAS3M,KAAKyR,QAAQ9O,GACxBgK,IACH3M,KAAK0R,SAAS/O,GAASgK,EAAOzN,IAAK2S,cAKtC,MAAMxO,aAAEA,EAAYH,KAAEA,EAAIE,cAAEA,GAAkBpD,KAAKG,MACnD,IAAI2R,EAAY,EACZC,GAAmB,EACnBC,EAAc,EAClB,IAAK,MAAMrP,MAAEA,KAAWO,EAAKE,GAAgB,CACxCT,IAAUU,IAAgB0O,GAAmB,GACjD,MAAME,EAAQjS,KAAK0R,SAAS/O,GACvBoP,IACJC,GAAeC,GAEhBH,GAAaG,EAEdD,GAAeF,EAAY,EAE3B9R,KAAKwR,UAAWrE,MAAM+E,yBACNF,EAAcV,EAAa,qBAAsBtR,KAAK0R,SAASrO,GAAgBiO,OAGxFtR,KAAA0C,UAAY,CAACiK,IACpB3M,KAAKG,MAAMmD,YAAYqJ,EAAOxM,MAAMwC,SAG7B3C,KAAAmS,cAAgB,MACvBnS,KAAK2R,cAAe,IA1Cd5R,oBACNC,KAAK4R,oBAGC7R,qBACNC,KAAK4R,oBAwCC7R,SACN,MAAMsD,aAAEA,EAAYH,KAAEA,EAAIE,cAAEA,EAAaG,cAAEA,GAAkBvD,KAAKG,MAElE,OACCvB,EAAAY,cAAA,OAAKiB,UAAU,QACd7B,EAAAY,cAAA,OAAKiB,UAAU,kBAAkB0M,OAAU+E,6BAA+C,IAAjB9O,UAEvEF,EAAKrC,IAAI,CAACuR,EAAU7C,IACnB3Q,EAAAY,cAAA,OAAKiB,UAAU,iBAAiBO,IAAMuO,GACrC3Q,EAAAY,cAAA,OAAKiB,UAAU,2BAA2BO,IAAMuO,GAE/C6C,EAASvR,IAAI,EAAG8B,QAAOgB,WACtB/E,EAAAY,cAAC6R,GACArQ,IAAM2B,EACNlC,UAAY,aAAe4C,IAAiBV,EAAQ,oBAAsB,IAC1E1B,MAAQjB,KAAK0C,UACbC,MAAQA,EACRmL,IAAMA,GAAO9N,KAAKyR,QAAQ9O,GAASmL,GAEnClP,EAAAY,cAACmE,GAAM0O,SAAWrS,KAAKmS,sBAS9BvT,EAAAY,cAAA,OACCiB,UAAY,mBAAqB8C,EAAgB,0BAA4B,IAC7EuK,IAAMA,GAAO9N,KAAKwR,UAAY1D,MA7EpByD,EAAAe,cAAiC/O,eAAe,GAoF/DjC,EAAA7B,QAAe8R,kLC/Gf,MAAA3S,EAAAD,EAAA,iCAEAA,EAAA,0CAkEA2C,EAAA7B,sBA1DwBb,EAAM2D,cAK7BxC,YAAYI,EAAcI,GACzBiC,MAAMrC,EAAOI,GALNP,KAAAuS,QAAiC,KACjCvS,KAAAkO,MAAiC,KACjClO,KAAAwO,QAAkB,GAQlBxO,KAAAwS,SAAW,MAClBxS,KAAKwO,QAAUxO,KAAKkO,MAAO1I,QAGpBxF,KAAAyS,UAAY,CAACvT,IACpBc,KAAKuS,QAAUrT,IAGRc,KAAA0S,OAAS,MAChB1S,KAAKuS,QAAS9R,UAAYT,KAAK2S,sBAGxB3S,KAAA4S,WAAa,CAAC1E,IACrBlO,KAAKkO,MAAQA,IAhBblO,KAAKgD,OAAU6P,YAAY,GAmBpB9S,oBACP,MAAO,aAAeC,KAAKwO,QAAQ5N,OAAS,wBAA0B,IAGhEb,WAAa,OAAOC,KAAKwO,QAEzBzO,SAASyF,GACfxF,KAAKwO,QAAUhJ,EACfxF,KAAKkO,MAAO1I,MAAQA,EAGdzF,OAASC,KAAKkO,MAAO4E,OAErB/S,SACN,MAAMgT,MAAEA,EAAKC,YAAEA,GAAgBhT,KAAKG,MAEpC,OACCvB,EAAAY,cAAA,OAAKiB,UAAYT,KAAK2S,oBAAsB7E,IAAM9N,KAAKyS,WACtD7T,EAAAY,cAAA,OAAKiB,UAAU,oBAAqBsS,GACpCnU,EAAAY,cAAA,SACCiB,UAAU,mBACVuS,YAAcA,EACdR,SAAWxS,KAAKwS,SAChBE,OAAS1S,KAAK0S,OACd5E,IAAM9N,KAAK4S,yHC7DhB,MAAAK,EAAAtU,EAAA,sCAOa2C,EAAAH,cACZb,MAAO2S,EAAUC,qdCRlB,MAAA9K,EAAAzJ,EAAA,0CAQA,SAAAwU,EAAuBC,EAAmBC,GACzC,MAAMC,EAAO,IAAIlL,EAAAmL,KAAKF,GAEhBG,EAAS,WAEd,OADAF,EAAKG,iBACGzT,KAAa0T,OAAOL,IAGvBM,EAAS,SAAoBC,GACnB5T,KAAa0T,OAAOL,KACrBO,IACb5T,KAAa0T,OAAOL,GAAYO,EAC7B5T,KAAK6K,KAAO7K,KAAK6K,IAAIC,IAAIuI,KAAcO,GAC1C5T,KAAK6K,IAAIgJ,IAAIR,EAAUO,GAExBN,EAAKQ,yBAGKV,EAAaC,IACvBU,OAAOC,eAAeZ,EAAcC,GACnCvI,IAAK0I,EACLK,IAAKF,IArBRrS,EAAA6R,eA+BA1I,EAQC1K,YAAYO,EAAciK,EAAYnF,GAP5BpF,KAAA0T,UAQT1T,KAAKM,MAAQA,EACbN,KAAKuK,GAAKA,EACVvK,KAAKoF,KAAOA,EACZpF,KAAKgL,WAGIjL,SAASyK,GAClBxK,KAAK6K,IAAML,EAAKM,IAAI9K,KAAKuK,IACpBvK,KAAK6K,IAAIC,IAAI,SACjB9K,KAAK6K,IAAIgJ,IAAI7T,KAAKiU,WAGnBjU,KAAK6K,IAAIxG,GAAG,SAAW6P,IACtBH,OAAOI,OAAOnU,KAAKgL,QAASkJ,KAIpBnU,UAAaqU,GACtB,OAAOL,OAAOI,OAAOC,GAAO7J,GAAIvK,KAAKuK,GAAInF,KAAMpF,KAAKoF,QAzB7ChE,GAAP+R,4BACO/R,GAAP+R,8BA8BF7R,EAAA7B,QAAegL,gdCvEf,MAAA4J,EAAA1V,EAAA,oCAcA2V,UAAmBD,EAAA5U,QAKlBM,YACCO,EAAckK,EAAqBD,EAAY4D,EAAmBC,EAAsBG,GAExF/L,MAAMlC,EAAOiK,EAAI,QACjBvK,KAAKmO,UAAYA,EACjBnO,KAAKoO,aAAeA,EACpBpO,KAAKuO,YAAcA,EACnBvO,KAAKuU,SAAS/J,GAGRzK,mBACNO,EAAckK,GAAqBD,GAAEA,EAAE4D,UAAEA,EAASC,aAAEA,EAAYG,YAAEA,IAElE,OAAO,IAAI+F,EAAKhU,EAAOkK,EAAMD,EAAI4D,EAAWC,EAAcG,GAGpDxO,UACN,OAAOC,KAAKwU,WACXpG,aAAcpO,KAAKoO,aACnBD,UAAWnO,KAAKmO,UAChBI,YAAavO,KAAKuO,eAxBZnN,GAAPiT,EAAAlB,wCACO/R,GAAPiT,EAAAlB,2CACO/R,GAAPiT,EAAAlB,0CA2BF7R,EAAA7B,QAAe6U,mdC5Cf,MAAAlM,EAAAzJ,EAAA,0CACA0V,EAAA1V,EAAA,8BAEA8V,EAAA9V,EAAA,0CASA+V,UAAsBL,EAAA5U,QAMrBM,YAAYO,EAAckK,EAAqBD,EAAYrJ,EAAciL,GACxE3J,MAAMlC,EAAOiK,EAAI,WACjBvK,KAAKkB,KAAOA,EACZlB,KAAKmM,QAAUA,EACfnM,KAAKmQ,WACLnQ,KAAKoP,WAELpP,KAAKuU,SAAS/J,GACdiK,EAAAhV,QAAU+K,EAAMlK,EAAO,OAAQ,OAAQN,KAAKoP,QAASvE,GAAOA,EAAIC,IAAI,OACpE2J,EAAAhV,QAAU+K,EAAMlK,EAAO,OAAQ,OAAQN,KAAKmQ,QAAStF,GAAOA,EAAIC,IAAI,OAG9D/K,mBAAmBO,EAAckK,GAAqBD,GAAEA,EAAErJ,KAAEA,EAAIiL,QAAEA,IACxE,OAAO,IAAIuI,EAAQpU,EAAOkK,EAAMD,EAAIrJ,EAAMiL,GAGpCpM,UACN,OAAOC,KAAKwU,WACXrI,QAASnM,KAAKmM,QACdjL,KAAMlB,KAAKkB,QAxBLE,GAAPiT,EAAAlB,sCACO/R,GAAPiT,EAAAlB,mCACW/R,GAAXgH,EAAAuD,0CACWvK,GAAXgH,EAAAuD,0CA0BFrK,EAAA7B,QAAeiV,gdC1Cf,MAAAL,EAAA1V,EAAA,oCAQAgW,UAAmBN,EAAA5U,QAGlBM,YAAYO,EAAckK,EAAeD,EAAYrJ,GACpDsB,MAAMlC,EAAOiK,EAAI,QACjBvK,KAAKkB,KAAOA,EACZlB,KAAKuU,SAAS/J,GAGRzK,mBAAmBO,EAAckK,GAAqBD,GAAEA,EAAErJ,KAAEA,IAClE,OAAO,IAAIyT,EAAKrU,EAAOkK,EAAMD,EAAIrJ,GAG3BnB,UACN,OAAOC,KAAKwU,WACXtT,KAAMlB,KAAKkB,QAdLE,GAAPiT,EAAAlB,mCAmBF7R,EAAA7B,QAAekV,oHCzBfrT,EAAA7B,QAAA,SACC+K,EAAkBlK,EAAcU,EAAQwE,EAAaoP,EAAWC,GAEhE,MAAMC,EAAMtK,EAAKuK,UAAU/T,EAAKwE,GAwBhC,OAtBAsP,EAAI3K,QAAQU,GAAO+J,EAAK3I,KAAK4I,EAAWhK,KAExCiK,EAAIzQ,GAAG,MAAOwG,IACb,MAAMmK,EAAQF,EAAIG,QAAQpK,GAC1B,IAAe,IAAXmK,EAAc,CACjB,MAAME,EAAIL,EAAWhK,GACrBvK,EAAM4I,kBAAkB+C,KAAK,KAC5B2I,EAAKO,OAAOH,EAAO,EAAGE,QAKzBJ,EAAIzQ,GAAG,SAAUwG,IAChB,MAAMqK,EAAIL,EAAWhK,GACfmK,EAAQJ,EAAKK,QAAQC,IACZ,IAAXF,GACH1U,EAAM4I,kBAAkB+C,KAAK,KAC5B2I,EAAKO,OAAOH,EAAO,OAKfJ,oHC5BR,MAAAQ,EAAAzW,EAAA,+BACAmN,EAAAnN,EAAA,kCACA+J,EAAA/J,EAAA,+BAIM0W,GAILvU,QAASgL,EAAArM,QACTkL,KAAMjC,EAAAjJ,QACN+P,KAAM4F,EAAA3V,SAGP6B,EAAA7B,QAAe4V,qHClBf,MAAAC,EAAA3W,EAAA,uCACA0O,EAAA1O,EAAA,wCACA4W,EAAA5W,EAAA,+BAkBA,SAAA6W,EAAgBC,GACXnU,EAAAoU,QAAQ9I,QAAQhM,SACnBU,EAAAoU,QAAQ9I,QAAQzC,QAAQwL,IAClBrU,EAAAoU,QAAQE,cAAgBH,IAAYE,EAAOF,SAAWE,EAAOE,WAEnEvU,EAAAoU,QAAQ9I,YAhBGtL,EAAAoU,SAKP9I,WAAakJ,UAAU,EAAOC,gBAAgB,EAAOH,cAAc,GAEzEN,EAAAnE,YAAYrH,OAAQ,YAAa,SAAS5J,GACzCoB,EAAAoU,QAAQ9I,aAYTS,EAAA5N,QAAgB4E,GAAG,eAAgBmR,GACnCnI,EAAA5N,QAAgB4E,GAAG,iBAAkBmR,GAIrC,MAAMQ,EAAmB,IACnBC,EAAqB,IACrBC,EAAmB,GA8MzB5U,EAAA7B,sBApM2B8V,EAAA9V,QAiB1BM,YAAYoW,MACX3T,QAjBOxC,KAAAoW,QAAS,EACTpW,KAAAqW,OAAwB,KACxBrW,KAAAsW,QAAU,EACVtW,KAAAuW,WAAsC,KACtCvW,KAAAwW,UAAoB,GACpBxW,KAAAyW,WAAqB,EACrBzW,KAAA0W,eAAyB,EACzB1W,KAAA2W,aAAgBC,KAAM,EAAGC,IAAK,EAAG5E,MAAO,EAAG6E,OAAQ,GACpD9W,KAAAyV,QAA8B,KAC7BzV,KAAA+W,YAAcb,EACdlW,KAAAgX,aAAed,EACflW,KAAAiX,WAAY,EACZjX,KAAAkX,cAAwB,EACxBlX,KAAAmX,YAAc,EACfnX,KAAA+M,QAAS,EAKf/M,KAAK+M,SAAWoJ,EAAQpJ,OAGlBhN,oBAAoBkS,EAAe6E,GACzC9W,KAAK+W,YAAc/H,KAAKoI,IAAInF,EAAOiE,GACnClW,KAAKgX,aAAehI,KAAKoI,IAAIN,EAAQZ,GAG9BnW,MAAMsX,GACbrX,KAAKiX,WAAY,EACbjX,KAAK+M,SACR/M,KAAKmX,YAAc,EACnBnX,KAAKsX,aAENtX,KAAKwE,KAAK,QAAS6S,GAGZtX,QAAQ0W,GACfzW,KAAKiX,WAAY,EACjBjX,KAAKwE,KAAK,UAAWiS,GAGd1W,IAAIG,GACXF,KAAKwE,KAAK,MAAOtE,GAGVH,UAAUG,GACjBF,KAAKwE,KAAK,YAAatE,GAGhBH,QAAQsX,GACfrX,KAAKwE,KAAK,UAAW6S,GAGftX,UAAUqW,GAChBpW,KAAKoW,OAASA,EAGPrW,QACHC,KAAKqW,SACRhJ,EAAA5N,QAAgBkO,YAAY3N,KAAKqW,QACjCrW,KAAKqW,OAAS,MAEfvM,OAAOyN,aAAavX,KAAKkX,eACzBpN,OAAOyN,aAAavX,KAAK0W,gBACzBpB,EAAAtQ,eAAe7F,SAAU,cAAea,KAAKwX,eAAiBjX,QAASP,OACvEsV,EAAAtQ,eAAe7F,SAAU,YAAaa,KAAKyX,aAAelX,QAASP,OAG5DD,YACP,MAAM2X,EAA4B,IAArB1X,KAAKmX,YAAoB,IAAM,GAE5CnX,KAAKkX,cAAgBpN,OAAO6N,WAAW,KACtC3X,KAAKmX,aAAe,EACpBnX,KAAK4X,IAAI5X,KAAKuW,YACdvW,KAAKsX,aACHI,GAGG3X,SACFC,KAAKiX,YACRjX,KAAKyW,WAAY,EACjBzW,KAAK6X,SAAQ,IAGd7X,KAAK8X,QAGE/X,cAAcG,GACjBA,EAAEsW,YAAcxW,KAAKwW,YACrBtW,EAAE6X,QAAU/X,KAAK2W,YAAYC,MAChC1W,EAAE6X,QAAU/X,KAAK2W,YAAYC,KAAO5W,KAAK2W,YAAY1E,OACrD/R,EAAE8X,QAAUhY,KAAK2W,YAAYE,KAC7B3W,EAAE8X,QAAUhY,KAAK2W,YAAYE,IAAM7W,KAAK2W,YAAYG,SACpD9W,KAAK6V,SAIC9V,cAAcG,GACrB,IAAKF,KAAKoW,QAAoD,IAAzClW,EAAE+X,cAA6BC,OAAe7K,EAAA5N,QAAgB0Y,SAASjY,EAAEkY,QAC7F,OAGD9W,EAAAoU,QAAQ9I,QAAQX,KAAKjM,MACrBA,KAAKwW,UAAYtW,EAAEsW,UAEnBxW,KAAKyW,WAAY,EACjB,MAAM4B,GACLC,EAAGpY,EAAE6X,QACLQ,EAAGrY,EAAE8X,SAGAI,EAASlY,EAAEkY,OAEXzB,EAAc3W,KAAKyV,QAAS+C,wBAClCxY,KAAK2W,YAAYE,IAAMF,EAAYE,IACnC7W,KAAK2W,YAAYC,KAAOD,EAAYC,KAChCD,EAAY1E,MAAQjS,KAAK+W,aAC5B/W,KAAK2W,YAAY1E,MAAQjS,KAAK+W,YAC9B/W,KAAK2W,YAAYC,OAAS5W,KAAK+W,YAAcJ,EAAY1E,OAAS,GAElEjS,KAAK2W,YAAY1E,MAAQ0E,EAAY1E,MAGlC0E,EAAYG,OAAS9W,KAAKgX,cAC7BhX,KAAK2W,YAAYG,OAAS9W,KAAKgX,aAC/BhX,KAAK2W,YAAYE,MAAQ7W,KAAKgX,aAAeL,EAAYG,QAAU,GAEnE9W,KAAK2W,YAAYG,OAASH,EAAYG,OAGnC9W,KAAK+M,SACR/M,KAAKuW,WAAa,IAAIjB,EAAAmD,UAAUvY,EAAEkF,MAClCpF,KAAKuW,WAAaxC,OAAOI,OAAOnU,KAAKuW,WAAYrW,IAElDF,KAAK0Y,MAAML,GAEX/W,EAAAoU,QAAQI,SAAWxU,EAAAoU,QAAQK,eAAiBzU,EAAAoU,QAAQE,cAAe,EAC/D5V,KAAKiN,YAAY,aAAejN,KAAK+M,SACxCjD,OAAOyN,aAAavX,KAAK0W,gBACzB1W,KAAK0W,eAAiB5M,OAAO6N,WAAW,KACvC3X,KAAKqW,OAAShJ,EAAA5N,QAAgB+N,cAAc4K,GACxCpY,KAAKqW,SACRrW,KAAK2Y,QAAQN,GACb/W,EAAAoU,QAAQE,cAAe,IAEtBI,IAGJV,EAAAnE,YAAYhS,SAAU,cAAea,KAAKwX,eAAiBjX,QAASP,OACpEsV,EAAAnE,YAAYhS,SAAU,YAAaa,KAAKyX,aAAelX,QAASP,OAGzDD,YAAYG,GACnB,GAAIA,EAAEsW,YAAcxW,KAAKwW,YAAaxW,KAAKyW,YAI3CzW,KAAK8X,QACL9X,KAAK6X,SAAQ,IAERvW,EAAAoU,QAAQE,cAAc,CAC1B,MAAMgD,EAAMvK,KAAKuK,MACXC,EAAUD,EAAM5Y,KAAKsW,QAQ3B,GAPAtW,KAAKsW,QAAUsC,GAEVtX,EAAAoU,QAAQI,UAAY9V,KAAKiN,YAAY,SACzC3L,EAAAoU,QAAQI,UAAW,EACnB9V,KAAK4X,IAAI1X,IAGN2Y,EAAU5C,EAOb,OANAjW,KAAKsW,QAAU,QACVhV,EAAAoU,QAAQK,gBAAkB/V,KAAKiN,YAAY,eAC/C3L,EAAAoU,QAAQK,gBAAiB,EACzB7V,EAAEwO,iBACF1O,KAAK8Y,UAAU5Y,MAOZH,kBAAkB0V,GACxBzV,KAAKyV,QAAUA,EACfH,EAAAnE,YAAYnR,KAAKyV,QAAS,cAAezV,KAAK+Y,eAAiBxY,QAASP,OAGlED,uBACNuV,EAAAtQ,eAAehF,KAAKyV,QAAU,cAAezV,KAAK+Y,eAAiBxY,QAASP,OAC5EA,KAAK8X,QACL9X,KAAKyV,QAAU,KACf3L,OAAOyN,aAAavX,KAAKkX,+aC9O3B,MAAAtY,EAAAD,EAAA,uCAoBAqa,UACSpa,EAAM2D,cAEdxC,YAAYI,EAAUI,GACrBiC,MAAMrC,EAAOI,GAEb,IAAK,MAAMgK,KAAMpK,EAAMyM,QAAS,CAChBzM,EAAMyM,QAAQrC,GACtB0O,qBAAqBjZ,OAIvBD,qBACN,MAAM6M,EAAU5M,KAAKG,MAAMyM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChB2O,sBAIFnZ,6BAA6BoZ,GACnC,MAAMvM,EAAU5M,KAAKG,MAAMyM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChB6O,kBAAkBD,IAIpBpZ,0BAA0BiN,GAChC,MAAMJ,EAAU5M,KAAKG,MAAMyM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChB8O,0BAA0BrM,IAI5BjN,oBAAoBiN,GAC1B,MAAMJ,EAAU5M,KAAKG,MAAMyM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChB+O,oBAAoBtM,IAItBjN,qBACN,MAAM6M,EAAU5M,KAAKG,MAAMyM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACVA,EAAQrC,GAChBgP,sBAIFxZ,uBACN,MAAM6M,EAAU5M,KAAKG,MAAMyM,QAC3B,IAAK,MAAMrC,KAAMqC,EAAS,CACzB,MAAM+I,EAAS/I,EAAQrC,GACvBoL,EAAO6D,uBACP7D,EAAO8D,yBAKV,SAAAC,EAA4EC,GAG3E,qBAAsCX,EAGrCjZ,YAAYI,EAAiBI,GAC5BiC,MAAMrC,EAAOI,GAHPP,KAAAmZ,QAAoB,KAK1BnZ,KAAKyM,MAAQzM,KAAKyM,MAAMmN,KAAK5Z,MAGvBD,oBACNC,KAAK6Z,6BAA6B7Z,KAAKmZ,SAGhCpZ,MAAM+Z,GACb9Z,KAAKmZ,QAAUW,EACX9Z,KAAKG,MAAMuM,YACd1M,KAAKG,MAAMuM,WAAWoN,GAIjB/Z,SACN,MAAMga,EAAUJ,EACVK,EAAAha,KAAAG,OAAA+M,SAAEA,EAAQN,QAAEA,EAAOF,WAAEA,GAAUsN,EAAE7Z,EAAA8Z,EAAAD,GAAA,oCACvC,OACCpb,EAAAY,cAACua,EAAOhG,OAAAI,UAAMhU,GAAQ2N,IAAM9N,KAAKyM,QAC9BS,KA1FP5L,EAAA0X,gBA8DA1X,EAAAoY,yBAmCapY,EAAA8L,KAAOsM,EAAuC,OAC9CpY,EAAA4Y,MAAQR,EAAwC,qHC5D7DpY,EAAA7B,cA1DAM,cA6BSC,KAAAma,aA5BDpa,qBAAqBqa,IAIrBra,kBAAkBsa,IAIlBta,sBAIAA,0BAA0BiN,IAI1BjN,oBAAoBiN,IAIpBjN,sBAIAA,wBAMAA,GAAyBua,EAAcC,EAAwCha,EAAoBP,MACrGsa,KAAata,KAAKma,UACrBna,KAAKma,UAAUG,GAAWrO,MAAOsO,WAAUha,YAE3CP,KAAKma,UAAUG,KAAgBC,WAAUha,YAIpCR,uBACNC,KAAKma,aAGIpa,KAAwBua,EAAcE,GAC/C,MAAML,EAAYna,KAAKma,UAAUG,GACjC,GAAIH,EACH,IAAK,IAAI5K,EAAI,EAAGkL,EAAMN,EAAUvZ,OAAQ2O,EAAIkL,EAAKlL,GAAK,EAAG,CACxD,MAAMmL,EAAWP,EAAU5K,GAC3BmL,EAASH,SAAShV,KAAKmV,EAASna,QAASia,IAKrCza,YAAYua,GAClB,QAASta,KAAKma,UAAUG,2HCtD1B,MAAAzW,EAAAlF,EAAA,mCAyDA2C,EAAA7B,QAAe,kBAvDeoE,EAAAG,aAA9BjE,kCACSC,KAAA2a,aACA3a,KAAA4a,sBACA5a,KAAAqW,OAAS,EAEVtW,SAAS0V,GACf,IAAK,MAAMlL,KAAMvK,KAAK2a,UAAW,CAChC,IAAIE,EAAoB7a,KAAK2a,UAAUpQ,GACvC,KAAgB,OAATsQ,GAAe,CACrB,GAAIA,IAASpF,EAAW,OAAO,EAC/BoF,EAAOA,EAAKC,YAId,IAAK,MAAMvQ,KAAMvK,KAAK4a,mBAAoB,CACzC,MAAMG,EAAY/a,KAAK4a,mBAAmBrQ,GAC1C,IAAIyQ,EAAsBvF,EAC1B,KAAkB,OAAXuF,GAAiB,CACvB,GAAIA,IAAWD,EAAa,OAAO,EACnCC,EAASA,EAAOF,YAIlB,OAAO,EAGD/a,cAAc0V,GACpB,OAAIzV,KAAKmY,SAAS1C,GAAmB,MAErCzV,KAAKqW,QAAU,EACfrW,KAAK2a,UAAU3a,KAAKqW,QAAUZ,EAC9BzV,KAAKwE,KAAK,eAAgBiR,GACnBzV,KAAKqW,QAGNtW,uBAAuB0V,GAC7B,OAAIzV,KAAKmY,SAAS1C,GAAmB,MAErCzV,KAAKqW,QAAU,EACfrW,KAAK4a,mBAAmB5a,KAAKqW,QAAUZ,EACvCzV,KAAKwE,KAAK,iBAAkBiR,GACrBzV,KAAKqW,QAGNtW,YAAYwK,GAClB,MAAMkL,EAAUzV,KAAK2a,UAAUpQ,IAAOvK,KAAK4a,mBAAmBrQ,GAC1DkL,WACIzV,KAAK2a,UAAUpQ,UACfvK,KAAK4a,mBAAmBrQ,GAC/BvK,KAAKqW,QAAU,EACfrW,KAAKwE,KAAK,SAAUiR,oOCpDvB,MAAA7W,EAAAD,EAAA,iCACA2J,EAAA3J,EAAA,6BAEAgD,EAAAhD,EAAA,yCAEAgB,EAAAhB,EAAA,sCACAsc,EAAAtc,EAAA,yCACAiB,EAAAjB,EAAA,2BAGAA,EAAA,+CAEAuc,UAA4Btc,EAAM2D,cAAlCxC,kCAKSC,KAAAmb,cAAgB,MACvB,MAAM3V,EAAQxF,KAAKob,iBAAkBC,WACrC,GAAc,KAAV7V,EAAgB,OAEpB,MAAMlF,EAAQN,KAAKO,QAAQD,MACrBD,EAAY,WAAaiI,IAC/BhI,EAAM4K,YAAY7K,GAClBC,EAAMyK,cAAc,IAAIpJ,EAAAlC,QACvBY,EACAmF,EACAlF,EAAM6I,mBAAmB9I,KAE1BL,KAAKG,MAAM0C,kBAAkBxC,GAAW,KAGjCL,KAAAsb,SAAW,CAACpb,IACnBA,EAAEwO,iBACF1O,KAAKmb,kBAGCpb,SACN,OACCnB,EAAAY,cAAA,OAAKiB,UAAU,iBACd7B,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,wDAClC7B,EAAAY,cAAA,QAAMiB,UAAU,YAAYiP,SAAW1P,KAAKsb,UAC3C1c,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAACyb,EAAAxb,SACAsT,MAAM,iCACNC,YAAY,aACZlF,IAAMA,GAAO9N,KAAKob,iBAAmBtN,KAGvClP,EAAAY,cAAA,OAAKiB,UAAU,6CACd7B,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,uCAAuCQ,MAAQjB,KAAKmb,eAAa,cApC1ED,EAAA/Z,aAAevB,EAAAuB,aA8C9BG,EAAA7B,QAAeyb,4KC5Df,MAAAtc,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACA4c,EAAA5c,EAAA,8CACAiB,EAAAjB,EAAA,2BAGAA,EAAA,6CAMA6c,UAA0B5c,EAAM2D,cAM/BxC,YAAYI,EAA0BI,GACrCiC,MAAMrC,EAAOI,GAJNP,KAAA6Q,QAAiC,KACjC7Q,KAAAkO,MAAiC,KAUjClO,KAAAoR,iBAAmB,CAAC/Q,IAC3BL,KAAK4C,UAAW6Y,YAAY,IAC5Bzb,KAAKqC,KAAKhC,KAGHL,KAAA0b,aAAe,MACtB1b,KAAK4C,UAAW6Y,YAAY,GAAS,IAAMzb,KAAK6Q,QAASE,UAGlD/Q,KAAA2b,cAAgB,MACvB,IACC3b,KAAK6Q,QAASN,OACdvQ,KAAK4C,UAAW6Y,YAAY,IAC3B,MAAOzB,OAKFha,KAAA4b,gBAAkB,MACzB,MAAMvb,EAAYL,KAAKkO,MAAO1I,MACzBnF,GACLL,KAAKqC,KAAKhC,KASHL,KAAA6b,aAAe,CAAC3b,IACvBA,EAAEwO,iBACF1O,KAAK4b,oBArCL5b,KAAKgD,OACJyY,YAAY,GA4BN1b,KAAKM,GACZL,KAAKO,QAAQD,MAAM+B,KAAKhC,GAAWqQ,KAAK,KACvC1Q,KAAKG,MAAM0C,kBAAkBxC,KASxBN,SACN,MAAM0b,WAAEA,GAAezb,KAAKgD,MAE5B,OACCpE,EAAAY,cAAA,OAAKiB,UAAY,eAAiBgb,EAAa,wBAA0B,KACxE7c,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,wEAClC7B,EAAAY,cAAA,OAAKiB,UAAU,aACd7B,EAAAY,cAAA,OAAKiB,UAAU,gBAAc,kBAC7B7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAK2b,cAAgBlb,UAAU,iBAAe,kBAC9D7B,EAAAY,cAAA,OAAKiB,UAAU,wBACd7B,EAAAY,cAAC+b,EAAA9b,SAAe2R,iBAAmBpR,KAAKoR,iBAAmBtD,IAAMA,GAAO9N,KAAK6Q,QAAU/C,IACvFlP,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAK0b,aAAejb,UAAU,2CAAyC,mBAGzF7B,EAAAY,cAAA,QAAMiB,UAAU,YAAYiP,SAAW1P,KAAK6b,cAC3Cjd,EAAAY,cAAA,OAAKiB,UAAU,gBAAc,sBAC7B7B,EAAAY,cAAA,SAAOiB,UAAU,wBAAwBqN,IAAMA,GAAO9N,KAAKkO,MAAQJ,IACnElP,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAK4b,gBAAkBnb,UAAU,iBAAe,WAhEtD+a,EAAAra,aAAevB,EAAAuB,aAuE9BG,EAAA7B,QAAe+b,gLCtFf,MAAA5c,EAAAD,EAAA,iCAEAgB,EAAAhB,EAAA,sCACAmd,EAAAnd,EAAA,8CACAod,EAAApd,EAAA,2CAEAA,EAAA,yCAoDA2C,EAAA7B,sBAxC4Bb,EAAMkB,UACjCC,YAAYI,EAAcI,GACzBiC,MAAMrC,EAAOI,GAWNP,KAAAgc,WAAa,MACpBhc,KAAK4C,UAAWqZ,UAAWjc,KAAKgD,MAAMiZ,aAVtCjc,KAAKgD,OAAUiZ,SAAU9b,EAAMqD,UAGzBzD,0BAA0BiN,GAC5BA,EAAUxJ,WAAaxD,KAAKgD,MAAMiZ,UACrCjc,KAAK4C,UAAWqZ,UAAU,IAQrBlc,SACN,MAAMM,EAAYL,KAAKG,MAAME,UACvB4b,EAAWjc,KAAKgD,MAAMiZ,SAE5B,OACCrd,EAAAY,cAAA,OAAKiB,UAAU,iBACd7B,EAAAY,cAAA,OAAKiB,UAAU,yBACd7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKgc,WAAavb,UAAU,uBAAqB,QACjE7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKG,MAAM+b,OAASzb,UAAU,0BAAwB,WACtE7B,EAAAY,cAAA,OACCiB,UAAY,mCAAqCwb,EAAW,GAAK,2CAEjErd,EAAAY,cAAA,OAAKiB,UAAU,yBACd7B,EAAAY,cAACuc,EAAAtc,SAAYY,UAAYA,OAI5BzB,EAAAY,cAACsc,EAAArc,SAAeY,UAAYA,4gBCpDhC,MAAAX,EAAAf,EAAA,6CACAC,EAAAD,EAAA,iCAEAwd,EAAAxd,EAAA,0CAEAgB,EAAAhB,EAAA,sCACAyd,EAAAzd,EAAA,2CACAsc,EAAAtc,EAAA,yCACAiB,EAAAjB,EAAA,2BAGAA,EAAA,oCAGA,IAAM0d,gBAAiBzd,EAAMkB,UAD7BC,kCAMSC,KAAAiQ,eAAiB,CAAC5P,IACzBL,KAAKG,MAAM0C,kBAAkBxC,KAGtBL,KAAAsc,eAAiB,MACxB,MAAM5b,EAAWV,KAAKuc,gBAAiBlB,WACvC,GAAiB,KAAb3a,EAAmB,OAEvBV,KAAKuc,gBAAiBC,SAAS,IAC/Bxc,KAAKuc,gBAAiBzJ,OAEtB,MAAMxS,EAAQN,KAAKO,QAAQD,MACvBI,IAAaJ,EAAMI,UACtBJ,EAAMyK,cAAc,IAAIoR,EAAA1c,QAAeiB,MAIjCV,KAAAyc,iBAAmB,CAACvc,IAC3BA,EAAEwO,iBACF1O,KAAKsc,mBAGEtc,KAAAoC,OAAS,MAChBpC,KAAKG,MAAM4C,cAAc,YAGlB/C,KAAAqC,KAAO,MACdrC,KAAKG,MAAM4C,cAAc,UAGnBhD,SACN,MACMY,EADQX,KAAKO,QAAQD,MACDK,YAE1B,OACC/B,EAAAY,cAAA,OAAKiB,UAAU,YAEU,IAAvBE,EAAYC,OACZhC,EAAAY,cAACZ,EAAM8d,SAAQ,KACf9d,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,8BAClC7B,EAAAY,cAAA,QAAMiB,UAAU,YAAYiP,SAAW1P,KAAKyc,kBAC3C7d,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAACyb,EAAAxb,SACAsT,MAAM,wCACNC,YAAchT,KAAKO,QAAQD,MAAMI,SACjCoN,IAAMA,GAAO9N,KAAKuc,gBAAkBzO,KAGtClP,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAACG,EAAAF,SAAOgB,UAAU,gBAAgBQ,MAAQjB,KAAKsc,gBAAc,SAK/D1d,EAAAY,cAAA,OAAKiB,UAAU,qBAAmB,6BAClC7B,EAAAY,cAAA,OAAKiB,UAAU,aACd7B,EAAAY,cAAA,OAAKiB,UAAU,gBACd7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKoC,OAAS3B,UAAU,iBAAe,WAIxD7B,EAAAY,cAAA,OAAKiB,UAAU,gBACf7B,EAAAY,cAACG,EAAAF,SAAOwB,MAAQjB,KAAKqC,KAAO5B,UAAU,iBAAe,WAMpD,KAEDE,EAAYE,IAAIR,GAAazB,EAAAY,cAAC4c,EAAA3c,SAC/BY,UAAYA,EACZW,IAAMX,EACN4P,eAAiBjQ,KAAKiQ,qBA5EZoM,EAAAlb,aAAevB,EAAAuB,aAFxBkb,EAAQjb,GADb1B,EAAA2B,UACKgb,GAqFN/a,EAAA7B,QAAe4c","file":"desktop-app.eb8580e319d4e25755a2.js","sourcesContent":["import * as Mobx from 'mobx';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'shared/styles/core.less';\nimport Main from './views/Main';\n\nMobx.useStrict(true);\n\nlocalStorage.setItem('debug', 'swift*');\n\nconst div = document.getElementById('swift');\ndiv!.classList.add('desktop');\nReactDOM.render(<Main />, div);\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/app.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './Sidebar.less';\n\nexport type Props = {\n\tselectSession(sesionId: string): void,\n\tsessionId: string | null\n};\n\n@observer\nclass Sidebar extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate onSessionSelect = (e: Button<{ sessionId: string }>) => {\n\t\tthis.props.selectSession(e.props.sessionId);\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst currentSessionId = this.props.sessionId;\n\n\t\treturn (\n\t\t\t<div className='Sidebar'>\n\t\t\t\t<div className='Sidebar__user'>\n\t\t\t\t\t<div className='Sidebar__label'>\n\t\t\t\t\t\tClient name:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Sidebar__user-name'>\n\t\t\t\t\t\t{ store.userName }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{ store.sessionList.length ?\n\t\t\t\t\t<div className='Sidebar__sessions'>\n\t\t\t\t\t\t<div className='Sidebar__label'>\n\t\t\t\t\t\t\tSessions:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Sidebar__session-list'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstore.sessionList.map(sessionId => {\n\t\t\t\t\t\t\t\tconst session = store.getSession(sessionId);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\t\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\t\t\t\t\t\tonTap={ this.onSessionSelect }\n\t\t\t\t\t\t\t\t\t\tclassName={ 'Sidebar__session' + (currentSessionId === sessionId ? ' Sidebar__session_active' : '') }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ session.name }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t: null }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sidebar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/components/Sidebar.tsx","import DevTools, { configureDevtool } from 'mobx-react-devtools';\nimport * as React from 'react';\n\nconfigureDevtool({\n\tlogEnabled: true\n});\n\nimport { Context, contextTypes } from 'shared/context';\nimport Store from 'shared/Store';\n\nimport CreateSession from 'shared/views/CreateSession';\nimport JoinSession from 'shared/views/JoinSession';\nimport Sessions from 'shared/views/Sessions';\nimport SessionViewer from 'shared/views/SessionViewer';\nimport { TabComponentProps, TabId } from 'shared/views/tabs';\n\nimport { TabsInfo } from './tabs';\n\nimport Sidebar from 'desktop/components/Sidebar';\nimport Tabs from 'shared/components/Tabs';\n\nimport './Main.less';\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId,\n\tsessionId: string | null\n};\n\nconst ContentClasses: {[tabId in TabId]: React.ComponentClass<TabComponentProps> } = {\n\tsessions: Sessions,\n\tcreate: CreateSession,\n\tjoin: JoinSession\n};\n\nclass Main extends React.PureComponent<Props, State> {\n\tprivate store: Store;\n\tpublic static childContextTypes = contextTypes;\n\tprivate isNewSession = false;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.store = new Store();\n\t\tthis.state = { tabId: 'sessions', sessionId: null };\n\t}\n\n\tpublic getChildContext(): Context {\n\t\treturn { store: this.store };\n\t}\n\n\tprivate selectTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId, sessionId: null });\n\t}\n\n\tprivate navigateToSession = (sessionId: string, isNew?: boolean) => {\n\t\tthis.isNewSession = !!isNew;\n\t\tthis.setState({ tabId: 'sessions', sessionId }, () => {\n\t\t\tthis.isNewSession = false;\n\t\t});\n\t}\n\n\tprivate navigateToTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId, sessionId: null });\n\t}\n\n\tpublic render() {\n\t\tconst { tabId, sessionId } = this.state;\n\t\tconst ContentClass = ContentClasses[tabId];\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<div className='Main__header'>\n\t\t\t\t\t<div className='Main__title'>\n\t\t\t\t\t\tSwift\n\t\t\t\t\t</div>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\ttabs={ TabsInfo }\n\t\t\t\t\t\tcategoryIndex={ 0 }\n\t\t\t\t\t\tcurrentTabId={ tabId }\n\t\t\t\t\t\tonTabSelect={ this.selectTab }\n\t\t\t\t\t\thideIndicator={ !!sessionId }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='Main__body'>\n\t\t\t\t\t<Sidebar selectSession={ this.navigateToSession } sessionId={ sessionId } />\n\t\t\t\t\t<div className='Main__tab-container'>\n\t\t\t\t\t\t{ sessionId\n\t\t\t\t\t\t\t? <SessionViewer sessionId={ sessionId } openInfo={ this.isNewSession } />\n\t\t\t\t\t\t\t: <ContentClass\n\t\t\t\t\t\t\t\tnavigateToSession={ this.navigateToSession }\n\t\t\t\t\t\t\t\tnavigateToTab={ this.navigateToTab }\n\t\t\t\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{ __IS_DEV__ &&  <DevTools /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/views/Main.tsx","import { TabId } from 'shared/views/tabs';\n\nimport { LabelProps } from 'shared/components/Tabs';\n\nexport const TabMap: {[tabId in TabId]: React.StatelessComponent<LabelProps>}  = {\n\tsessions: () => 'My sessions' as any,\n\tcreate: () => 'Create Sessions' as any,\n\tjoin: () => 'Join Sessions' as any\n};\n\nconst order: TabId[] = ['sessions', 'create', 'join'];\nexport const TabsInfo = [order.map(tabId => ({ tabId, Label: TabMap[tabId] }))];\n\n\n\n// WEBPACK FOOTER //\n// ./src/desktop/views/tabs.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\tprivate isConnecting = false;\n\t// private socketIdPerUserId: {[userId: string]: string} = {};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false });\n\n\t\tthis.socket.on('data', (clientId: string, data: any) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('data', clientId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t\tthis.socket.on('join', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('join', sessionId, clientId);\n\t\t});\n\t\tthis.socket.on('sessionClient', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('sessionClient', sessionId, clientId);\n\t\t});\n\t}\n\n\tprivate connect(): Promise<void> {\n\t\tif (this.isConnecting || this.socket.connected) { return Promise.resolve(); }\n\t\tthis.isConnecting = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tthis.isConnecting = false;\n\t\t\t\tlog(`Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tpublic async openSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('openSession', sessionId);\n\t}\n\n\tpublic async closeSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('closeSession', sessionId);\n\t\tthis.disconnect();\n\t}\n\n\tpublic async joinSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('join', sessionId);\n\t}\n\n\tprivate disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.isConnecting = false;\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic async send(remoteClientId: string, data: any) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tlog('sending', data, 'to', remoteClientId);\n\t\tthis.socket.emit('data', remoteClientId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\n\nimport { DocChange } from 'shared/Store';\n\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'client', sessionId: string } |\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nexport type RTCEvent = {\n\t'connect': RTCDataChannel,\n\t'get-docs': string[],\n\t'docs': any[],\n\t'doc-changes': { sessionId: string, changes: {[docId: string]: DocChange[]} },\n};\n\nabstract class ICustomEmitter extends EventEmitter {\n\tpublic on<K extends keyof RTCEvent>(type: K, cb: (value: RTCEvent[K]) => void): this {\n\t\tEventEmitter.prototype.on.call(this, type, cb);\n\t\treturn this;\n\t}\n\n\tpublic emit<K extends keyof RTCEvent>(type: K, value: RTCEvent[K]): boolean {\n\t\treturn EventEmitter.prototype.emit.call(this, type, value);\n\t}\n}\n\n// tslint:disable:max-classes-per-file\nclass RTCClient extends ICustomEmitter {\n\tprivate pc: RTCPeerConnection;\n\tprivate gatewayClient: GatewayClient;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate remoteClientId: string;\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor(remoteClientId: string, gatewayClient: GatewayClient) {\n\t\tsuper();\n\n\t\tthis.gatewayClient = gatewayClient;\n\t\tthis.gatewayClient.on('data', this.onGatewayMessage);\n\t\tthis.remoteClientId = remoteClientId;\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tpublic async initiateConnection() {\n\t\tlog('initiateConnection');\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel with ' + this.remoteClientId);\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\t\tthis.sendChannel.onerror = this.onSendChannelError;\n\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'offer', sessionDescription });\n\t}\n\n\tpublic onGatewayMessage = async (fromClientId: string, msg: Message) => {\n\t\tif (fromClientId !== this.remoteClientId) { return; }\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onSendChannelError = (e: ErrorEvent) => {\n\t\tlog('onSendChannelError', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconst { type, data } = JSON.parse(event.data);\n\t\t\tthis.emit(type, data);\n\t\t};\n\t\tthis.gatewayClient.removeListener('data', this.onGatewayMessage);\n\t\tthis.emit('connect', this.sendChannel!);\n\t}\n\n\tpublic getDataChannel() { return this.sendChannel; }\n\n\tpublic sendMessage<K extends keyof RTCEvent>(type: K, data: RTCEvent[K]): void {\n\t\tif (this.sendChannel) {\n\t\t\tthis.sendChannel.send(JSON.stringify({ type, data }));\n\t\t} else {\n\t\t\tlog('trying to send a message before the channel is opened');\n\t\t}\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteClientId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import { Doc as CRDTDoc } from 'crdt';\nimport * as debug from 'debug-logger';\nimport { IObjectChange, observable, observe } from 'mobx';\nimport * as dcstream from 'rtc-dcstream';\nimport * as uuid from 'uuid/v4';\n\nimport GatewayClient from 'shared/GatewayClient';\n\nimport Action from 'shared/actions/Action';\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport UpdateDoc from 'shared/actions/UpdateDoc';\n\nimport Doc from 'shared/models/Doc';\nimport Item from 'shared/models/Item';\nimport Session, { ISession } from 'shared/models/Session';\nimport User, { IUser } from 'shared/models/User';\n\nimport RTCClient from 'shared/RTCClient';\nimport * as UAParser from 'ua-parser-js';\n\nconst log = debug('swift:RTCClient');\n\nexport type DocChange = {\n\tname: string;\n\tdocId: string;\n\ttype: IObjectChange['type'];\n\tnewValue: any;\n};\n\nclass Store {\n\t@observable public sessionList: string[] = [];\n\tprivate docs: { [docId: string]: Doc } = {};\n\t// public userId = 'user-' + uuid();\n\t@observable public userName: string;\n\tprivate gatewayClient: GatewayClient;\n\tprivate RTCClients: { [clientId: string]: RTCClient } = {};\n\n\tpublic crdts: {[sessionId: string]: CRDTDoc<ISession | IUser>} = {};\n\tpublic updating: {[id: string]: true} = {};\n\n\tpublic pendingSeqActions: Array<() => void> = [];\n\n\tpublic userIdPerSessionId: {[sessionId: string]: string} = {};\n\n\tconstructor() {\n\t\t(window as any).store = this;\n\n\t\tconst parser = new UAParser();\n\t\tconst res = parser.getResult();\n\t\tthis.userName = res.os.name + ' - ' + res.browser.name;\n\n\t\tthis.gatewayClient = new GatewayClient();\n\t\tthis.gatewayClient.on('join', this.onJoin);\n\t\tthis.gatewayClient.on('sessionClient', this.onSessionUser);\n\t}\n\n\tpublic applyPendingSeqAction() {\n\t\tif (this.pendingSeqActions.length) {\n\t\t\tthis.pendingSeqActions.forEach(action => action());\n\t\t\tthis.pendingSeqActions = [];\n\t\t}\n\t}\n\n\tpublic getDoc(docId: string): Doc {\n\t\treturn this.docs[docId];\n\t}\n\n\tpublic addDoc(doc: Doc) {\n\t\tthis.docs[doc.id] = doc;\n\t}\n\n\tprivate onJoin = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tprivate onSessionUser = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.initiateConnection();\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tpublic createCRDT(sessionId: string) {\n\t\tconst crdt = this.crdts[sessionId] = new CRDTDoc();\n\n\t\t// TODO: how do we deal with the same user in different CRDTDOC ?\n\t\tconst userId = 'user-' + uuid();\n\t\tthis.userIdPerSessionId[sessionId] = userId;\n\t\tthis.updating[userId] = true;\n\t\tconst user = new User(this, crdt, userId, this.userName);\n\t\tthis.addDoc(user);\n\t\tdelete this.updating[userId];\n\n\t\tcrdt.on('row_update', (row) => {\n\t\t\tconst id = row.get('id');\n\t\t\tif (this.updating[id]) { return; }\n\t\t\tthis.updating[id] = true;\n\n\t\t\tif (this.docs[id]) {\n\t\t\t\tthis.executeAction(new UpdateDoc(id, this.docs[id].changes));\n\t\t\t} else {\n\t\t\t\tthis.executeAction(new CreateDoc(row.toJSON(), sessionId));\n\t\t\t}\n\n\t\t\tdelete this.updating[id];\n\t\t});\n\t}\n\n\tprivate setupClient(client: RTCClient) {\n\t\t// client.on('get-docs', (docIds: string[]) => {\n\t\t\t// client.sendMessage('docs', docIds.map(docId => this.docs[docId].toModel()));\n\t\t// });\n\n\t\t// client.on('docs', (objects: any[]) => {\n\t\t// \tthis.executeAction(new DocsUpdate(objects), true);\n\t\t// });\n\n\t\t// client.on('doc-changes', (docChanges) => {\n\t\t\t// const { changes, sessionId } = docChanges;\n\t\t\t// const session = this.docs[sessionId] as Session;\n\t\t\t// if (session.ownerId === this.user.id) { // send to others\n\t\t\t// \tfor (const userId of session.userIds) {\n\t\t\t// \t\tthis.RTCClients[userId].sendMessage('doc-changes', docChanges);\n\t\t\t// \t}\n\t\t\t// } else {\n\t\t\t// \tconsole.log(changes);\n\t\t\t// }\n\t\t// });\n\t}\n\n\tpublic openSession(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.openSession(sessionId);\n\t}\n\n\tpublic closeSession(sessionId: string) {\n\t\tthis.gatewayClient.closeSession(sessionId);\n\t}\n\n\tpublic join(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.joinSession(sessionId);\n\t\treturn new Promise((resolve) => {\n\t\t\t// TODO handle error and reject ?\n\t\t\tconst dispose = observe(this.sessionList, () => {\n\t\t\t\tif (this.sessionList.includes(sessionId)) {\n\t\t\t\t\tdispose();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getSession(sessionId: string): Session {\n\t\treturn this.docs[sessionId] as Session;\n\t}\n\n\tpublic removeSession(sessionId: string) {\n\t\tconst session = this.docs[sessionId] as Session;\n\t\tif (!session) { return log('trying to remove an inexisting session', sessionId); }\n\t\tdelete this.docs[sessionId];\n\t}\n\n\tpublic getUser(userId: string): User {\n\t\treturn this.docs[userId] as User;\n\t}\n\n\tpublic getItem(itemId: string): Item {\n\t\treturn this.docs[itemId] as Item;\n\t}\n\n\tpublic executeAction<A extends Action>(action: A, sideEffect = false): A {\n\t\taction.run(this);\n\t\treturn action;\n\t}\n}\n\nexport default Store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Store.ts","import { action } from 'mobx';\nimport Store from 'shared/Store';\n\nexport type ActionsType =\n\t'createSession' | 'updateSessionName' | 'updateDoc' |\n\t'updateUserName' | 'addSession' | 'createDoc' | 'addItem' | 'removeItem';\n\nabstract class IAction {\n\tpublic type: ActionsType;\n\tprotected store!: Store;\n\n\tconstructor(type: ActionsType) {\n\t\tthis.type = type;\n\t}\n\n\tpublic run(store: Store) {\n\t\tthis.store = store;\n\t\taction(this.type, () => this.execute())();\n\t}\n\n\tprotected abstract execute(): boolean;\n}\n\nexport default IAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/Action.ts","import { IDoc } from 'shared/models/Doc';\nimport docClass from 'shared/models/docClass';\nimport Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateDoc<D extends IDoc> extends Action {\n\tprivate row: D;\n\tprivate sessionId: string;\n\n\tconstructor(row: D, sessionId: string) {\n\t\tsuper('createDoc');\n\n\t\tthis.row = row;\n\t\tthis.sessionId = sessionId;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = docClass[this.row.type].instantiate(this.store, this.store.crdts[this.sessionId], this.row);\n\t\tthis.store.addDoc(doc);\n\n\t\tif (doc instanceof Session && !this.store.sessionList.includes(this.row.id)) {\n\t\t\tthis.store.sessionList.push(this.row.id);\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default CreateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateDoc.ts","import Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateSession extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\tprivate ownerId: string;\n\n\tconstructor(id: string, name: string, ownerId: string) {\n\t\tsuper('createSession');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t}\n\n\tprotected execute() {\n\t\tif (!this.store.crdts[this.id]) {\n\t\t\tthis.store.createCRDT(this.id);\n\t\t}\n\t\tthis.store.updating[this.id] = true;\n\t\tconst session = new Session(this.store, this.store.crdts[this.id], this.id, this.name, this.ownerId);\n\t\tdelete this.store.updating[this.id];\n\t\tthis.store.addDoc(session);\n\t\tthis.store.sessionList.push(this.id);\n\t\treturn true;\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateSession.ts","import { Changed } from 'crdt';\n\nimport { IDoc } from 'shared/models/Doc';\nimport Action from './Action';\n\nclass UpdateDoc extends Action {\n\tprivate docId: string;\n\tprivate changes: Changed<IDoc>;\n\n\tconstructor(docId: string, changes: Changed<IDoc>) {\n\t\tsuper('updateDoc');\n\n\t\tthis.docId = docId;\n\t\tthis.changes = changes;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = this.store.getDoc(this.docId);\n\n\t\tfor (const key in this.changes) {\n\t\t\t(doc as any)[key] = (this.changes as any)[key];\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default UpdateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateDoc.ts","import Action from './Action';\n\nclass UpdateUserName extends Action {\n\tprivate name: string;\n\n\tconstructor(name: string) {\n\t\tsuper('updateUserName');\n\n\t\tthis.name = name;\n\t}\n\n\tprotected execute() {\n\t\tfor (const userId in this.store.userIdPerSessionId) {\n\t\t\tconst user = this.store.getUser(userId);\n\t\t\tuser.name = this.name;\n\t\t}\n\t\tthis.store.userName = this.name;\n\t\treturn true;\n\t}\n}\n\nexport default UpdateUserName;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateUserName.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | null) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = Props> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\tpublic div: HTMLDivElement | null = null;\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tprivate onRef = (div: HTMLDivElement | null) => {\n\t\tthis.div = div;\n\t\tif (this.props.elementRef) { this.props.elementRef(div); }\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.onRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import * as React from 'react';\nimport interactionLock from 'shared/spur/interactionLock';\n\nimport './SelectableText.less';\n\nexport type Props = {\n\ttext: string,\n\tclassName?: string\n};\n\nclass SelectableText extends React.Component<Props> {\n\tprivate div!: HTMLDivElement | null;\n\tprivate lock!: number | null;\n\n\tpublic componentWillUnmount() {\n\t\twindow.removeEventListener('mouseup', this.onMouseUp);\n\t}\n\n\tprivate onMouseDown = () => {\n\t\tthis.lock = interactionLock.requestLockOn(this.div!);\n\n\t\tif (this.lock) {\n\t\t\twindow.addEventListener('mouseup', this.onMouseUp);\n\t\t}\n\t}\n\n\tprivate onMouseUp = () => {\n\t\tinteractionLock.releaseLock(this.lock!);\n\t}\n\n\tpublic render() {\n\t\tconst { text, className } = this.props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ 'SelectableText' + (className ? ' ' + className : '') }\n\t\t\t\tonMouseDown={ this.onMouseDown }\n\t\t\t\tref={ ref => this.div = ref }\n\t\t\t>\n\t\t\t\t{ text }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SelectableText;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SelectableText.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\nimport { IItem } from 'shared/models/Item';\n\nimport './SessionDisplay.less';\n\nexport type Props = {\n\tsessionId: string\n};\n\n@observer\nclass SessionDisplay extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate input!: HTMLInputElement | null;\n\tprivate scrollDiv!: HTMLDivElement | null;\n\tprivate isScrolledAtBottom = true;\n\n\tpublic componentDidUpdate() {\n\t\tif (this.isScrolledAtBottom) {\n\t\t\tthis.scrollDiv!.scrollTo(0, this.scrollDiv!.scrollHeight);\n\t\t}\n\t}\n\n\tprivate addText = () => {\n\t\tconst value = this.input!.value;\n\t\tconst sessionId = this.props.sessionId;\n\t\tif (value === '' || !sessionId) { return; }\n\n\t\tconst itemId = 'item-' + uuid();\n\t\tthis.context.store.executeAction(new CreateDoc<IItem>({\n\t\t\tid: itemId,\n\t\t\ttype: 'item',\n\t\t\tcreatorId: this.context.store.userIdPerSessionId[sessionId],\n\t\t\tcreationDate: new Date().toISOString(),\n\t\t\titemContent: { type: 'text', content: value }\n\t\t}, sessionId));\n\t\tthis.input!.value = '';\n\t}\n\n\tprivate validateAddText = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.addText();\n\t}\n\n\tprivate onScroll = () => {\n\t\tconst { scrollHeight, scrollTop, clientHeight } = this.scrollDiv!;\n\t\tthis.isScrolledAtBottom = Math.abs(clientHeight + scrollTop - scrollHeight) < 10;\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst { sessionId } = this.props;\n\t\tconst session = store.getSession(sessionId);\n\n\t\tconst itemElements: JSX.Element[] = [];\n\n\t\tconst itemIds = session.itemIds;\n\n\t\tlet lastCreatorId: string = '';\n\t\tlet currentClientElements: JSX.Element[] = [];\n\t\tfor (let i = 0; i < itemIds.length; i += 1) {\n\t\t\tconst itemId = itemIds[i];\n\t\t\tconst item = store.getItem(itemId);\n\t\t\tif (item.creatorId !== lastCreatorId) {\n\t\t\t\tlastCreatorId = item.creatorId;\n\t\t\t\tcurrentClientElements = [];\n\n\t\t\t\titemElements.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={ i }\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'SessionDisplay__client-block' +\n\t\t\t\t\t\t\t(lastCreatorId === store.userIdPerSessionId[sessionId] ? ' SessionDisplay__client-block_you' : '')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className='SessionDisplay__item-creator'>{ store.getUser(item.creatorId).name }</div>\n\t\t\t\t\t\t<div className='SessionDisplay__items'>{ currentClientElements }</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcurrentClientElements.push(\n\t\t\t\t<div className='SessionDisplay__item' key={ i }>{ item.itemContent.content }</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='SessionDisplay'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='SessionDisplay__item-list'\n\t\t\t\t\tonScroll={ this.onScroll }\n\t\t\t\t\tref={ ref => this.scrollDiv = ref }\n\t\t\t\t>\n\t\t\t\t\t{ itemElements }\n\t\t\t\t</div>\n\t\t\t\t<form className='SessionDisplay__input-area' onSubmit={ this.validateAddText }>\n\t\t\t\t\t<input className='SessionDisplay__text-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.addText } className='SessionDisplay__add action-button'>Add</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionDisplay.tsx","import { observer } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport * as React from 'react';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './SessionInfo.less';\n\nexport type Props = {\n\tsessionId: string\n};\n\n@observer\nclass SessionInfo extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst session = store.getSession(this.props.sessionId);\n\n\t\treturn (\n\t\t\t<div className='SessionInfo'>\n\t\t\t\t<div className='SessionInfo__details'>\n\t\t\t\t\t<div className='SessionInfo__box'>\n\t\t\t\t\t\t<div className='SessionInfo__label'>Name:</div>\n\t\t\t\t\t\t<div className='SessionInfo__name'>{ session.name }</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='SessionInfo__box'>\n\t\t\t\t\t\t<div className='SessionInfo__label'>Created by:</div>\n\t\t\t\t\t\t<div className='SessionInfo__creator'>{ store.getUser(session.ownerId).name }</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='SessionInfo__box'>\n\t\t\t\t\t\t<div className='SessionInfo__label'>Id:</div>\n\t\t\t\t\t\t<div className='SessionInfo__creator'>{ session.id }</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='SessionInfo__QR'>\n\t\t\t\t\t<QRCode value={ session.id } size={ 256 } />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionInfo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionInfo.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SelectableText from 'shared/components/SelectableText';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './SessionItem.less';\n\nexport type Props = {\n\tsessionId: string,\n\tonEnterSession(sessionId: string): void\n};\n\n@observer\nclass SessionItem extends React.Component<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate enterSession = () => {\n\t\tthis.props.onEnterSession(this.props.sessionId);\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId } = this.props;\n\t\tconst store = this.context.store;\n\t\tconst session = store.getSession(sessionId);\n\n\t\tconst count = session.itemIds.length;\n\n\t\treturn (\n\t\t\t<Button className='SessionItem' onTap={ this.enterSession }>\n\t\t\t\t<div className='SessionItem__session-info'>\n\t\t\t\t\t<div className='SessionItem__session-name'>{ session.name }</div>\n\t\t\t\t\t<div className='SessionItem__item-count'>{ `${count} item${ count > 1 ? 's' : '' }` }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='SessionItem__client-list'>\n\t\t\t\t\t<div className='SessionItem__client-list-label'>Connected clients:</div>\n\t\t\t\t\t{ session.userIds.map(userId => {\n\t\t\t\t\t\tconst isYou = userId === store.userIdPerSessionId[sessionId];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ 'SessionItem__client' + (isYou ? ' SessionItem__client_you' : '') }\n\t\t\t\t\t\t\t\tkey={ userId }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ store.getUser(userId).name }\n\t\t\t\t\t\t\t\t{ isYou ? ' (you)' : null }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}) }\n\t\t\t\t</div>\n\t\t\t\t<div className='SessionItem__id-box'>\n\t\t\t\t\t<div className='SessionItem__id-label'>Id:</div>\n\t\t\t\t\t<SelectableText className='SessionItem__id' text={ sessionId } />\n\t\t\t\t</div>\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default SessionItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionItem.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\nclass SessionScanner extends React.PureComponent<Props> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.props.onSessionScanned(content);\n\t\t});\n\t}\n\n\tpublic scan = (): Promise<void> => {\n\t\treturn Instascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\tif (cameras.length > 0) {\n\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t} else {\n\t\t\t\tlog('No cameras found.');\n\t\t\t\tthrow new Error('No cameras found.');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stop = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\treturn (\n\t\t\t<video ref={ ref => this.videoElt = ref } className='session-scanner' />\n\t\t);\n\t}\n}\n\nexport default SessionScanner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import * as React from 'react';\n\nimport Button, { IButtonClass } from 'shared/components/Button';\n\nimport './Tabs.less';\n\nexport type LabelProps = { onUpdate: () => void };\n\ntype TabButtonProps = { tabId: string };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nconst INDI_WIDTH = 100;\n\nexport type Props = {\n\ttabs: Array<Array<{ tabId: string, Label: React.StatelessComponent<LabelProps> }>>,\n\tcategoryIndex: number,\n\tcurrentTabId: string,\n\tonTabSelect(tabId: string | string): void,\n\thideIndicator?: boolean\n};\n\nclass Tabs extends React.PureComponent<Props> {\n\tprivate indicator: HTMLDivElement | null = null;\n\tprivate tabsRef: { [tabId: string]: Button<TabButtonProps> | null } = {};\n\tprivate tabWidth: { [tabId: string]: number } = {};\n\tprivate labelUpdated = true;\n\n\tpublic static defaultProps: Partial<Props> = { hideIndicator: false };\n\n\tpublic componentDidMount() {\n\t\tthis.positionIndicator();\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tthis.positionIndicator();\n\t}\n\n\tprivate positionIndicator = () => {\n\t\tif (this.labelUpdated) {\n\t\t\tthis.labelUpdated = false;\n\t\t\tfor (const tabId in this.tabsRef) {\n\t\t\t\tconst button = this.tabsRef[tabId];\n\t\t\t\tif (button) {\n\t\t\t\t\tthis.tabWidth[tabId] = button.div!.clientWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst { currentTabId, tabs, categoryIndex } = this.props;\n\t\tlet fullWidth = 0;\n\t\tlet passedCurrentTab = false;\n\t\tlet beforeWidth = 0;\n\t\tfor (const { tabId } of tabs[categoryIndex]) {\n\t\t\tif (tabId === currentTabId) { passedCurrentTab = true; }\n\t\t\tconst width = this.tabWidth[tabId];\n\t\t\tif (!passedCurrentTab) {\n\t\t\t\tbeforeWidth += width;\n\t\t\t}\n\t\t\tfullWidth += width;\n\t\t}\n\t\tbeforeWidth -= fullWidth / 2;\n\n\t\tthis.indicator!.style.transform =\n\t\t\t`translate3d(${beforeWidth + INDI_WIDTH / 2}px, 0, 0) scaleX(${ this.tabWidth[currentTabId] / INDI_WIDTH })`;\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.props.onTabSelect(button.props.tabId);\n\t}\n\n\tprivate onLabelUpdate = () => {\n\t\tthis.labelUpdated = true;\n\t}\n\n\tpublic render() {\n\t\tconst { currentTabId, tabs, categoryIndex, hideIndicator } = this.props;\n\n\t\treturn (\n\t\t\t<div className='Tabs'>\n\t\t\t\t<div className='Tabs__container' style={ { transform: `translate3d(0, ${ categoryIndex * -100 }%,0)` } }>\n\t\t\t\t\t{\n\t\t\t\t\t\ttabs.map((category, i) =>\n\t\t\t\t\t\t\t<div className='Tabs__category' key={ i }>\n\t\t\t\t\t\t\t\t<div className='Tabs__category_container' key={ i }>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcategory.map(({ tabId, Label }) =>\n\t\t\t\t\t\t\t\t\t\t<TabButton\n\t\t\t\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\t\t\t\tclassName={ 'Tabs__tab' + (currentTabId === tabId ? ' Tabs__tab_active' : '') }\n\t\t\t\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t\t\t\t\tref={ ref => this.tabsRef[tabId] = ref }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Label onUpdate={ this.onLabelUpdate } />\n\t\t\t\t\t\t\t\t\t\t</TabButton>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ 'Tabs__indicator' + (hideIndicator ? ' Tabs__indicator_hidden' : '') }\n\t\t\t\t\tref={ ref => this.indicator = ref }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Tabs.tsx","import * as React from 'react';\n\nimport './TextField.less';\n\nexport type Props = {\n\tlabel: string,\n\tplaceholder: string,\n\tclassName?: string\n};\n\nclass TextField extends React.PureComponent<Props> {\n\tprivate mainDiv: HTMLDivElement | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\tprivate content: string = '';\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { hasContent: false };\n\t}\n\n\tprivate onChange = () => {\n\t\tthis.content = this.input!.value;\n\t}\n\n\tprivate onMainRef = (div: HTMLDivElement | null) => {\n\t\tthis.mainDiv = div;\n\t}\n\n\tprivate onBlur = () => {\n\t\tthis.mainDiv!.className = this.generateClassName();\n\t}\n\n\tprivate onInputRef = (input: HTMLInputElement | null) => {\n\t\tthis.input = input;\n\t}\n\n\tprivate generateClassName(): string {\n\t\treturn 'TextField' + (this.content.length ? ' TextField_hasContent' : '');\n\t}\n\n\tpublic getValue() { return this.content; }\n\n\tpublic setValue(value: string) {\n\t\tthis.content = value;\n\t\tthis.input!.value = value;\n\t}\n\n\tpublic blur() { this.input!.blur(); }\n\n\tpublic render() {\n\t\tconst { label, placeholder } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ this.generateClassName() } ref={ this.onMainRef }>\n\t\t\t\t<div className='TextField__label'>{ label }</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='TextField__input'\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tref={ this.onInputRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/TextField.tsx","import * as PropTypes from 'prop-types';\nimport Store from './Store';\n\nexport type Context = {\n\tstore: Store\n};\n\nexport const contextTypes: {[T in keyof Context]: PropTypes.Requireable<any>} = {\n\tstore: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/context.ts","import { Atom } from 'mobx';\n\nimport Store from 'shared/Store';\n\nimport { Doc as CrdtDoc, Row as CrdtDow } from 'crdt';\n\nexport type DocType = 'session' | 'user' | 'item';\n\nexport function linked(docPrototype: any, property: string) {\n\tconst atom = new Atom(property);\n\n\tconst getter = function(this: Doc) {\n\t\tatom.reportObserved();\n\t\treturn (this as any).__data[property];\n\t};\n\n\tconst setter = function(this: Doc, val: any) {\n\t\tconst value = (this as any).__data[property];\n\t\tif (value === val) { return; }\n\t\t(this as any).__data[property] = val;\n\t\tif (this.row && this.row.get(property) !== val) {\n\t\t\tthis.row.set(property, val);\n\t\t}\n\t\tatom.reportChanged();\n\t};\n\n\tif (delete docPrototype[property]) {\n\t\tObject.defineProperty(docPrototype, property, {\n\t\t\tget: getter,\n\t\t\tset: setter\n\t\t});\n\t}\n}\n\nexport interface IDoc {\n\tid: string;\n\ttype: DocType;\n}\n\nabstract class Doc<M extends IDoc = any> {\n\tprotected __data = {};\n\t@linked public readonly id: string;\n\t@linked public readonly type: DocType;\n\tpublic row!: CrdtDow<M>;\n\tprotected store: Store;\n\tpublic changes: {[K in keyof M]?: M[K]};\n\n\tconstructor(store: Store, id: string, type: DocType) {\n\t\tthis.store = store;\n\t\tthis.id = id;\n\t\tthis.type = type;\n\t\tthis.changes = {};\n\t}\n\n\tprotected initCRDT(crdt: CrdtDoc): void {\n\t\tthis.row = crdt.get(this.id);\n\t\tif (!this.row.get('type')) {\n\t\t\tthis.row.set(this.toModel());\n\t\t}\n\n\t\tthis.row.on('change', (changed) => {\n\t\t\tObject.assign(this.changes, changed);\n\t\t});\n\t}\n\n\tprotected createDoc<O>(obj: O): O & IDoc {\n\t\treturn Object.assign(obj, { id: this.id, type: this.type });\n\t}\n\n\tpublic abstract toModel(): M;\n}\n\nexport default Doc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Doc.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport type TextItem = { type: 'text', content: string };\n\nexport type ItemContent = TextItem;\n\nexport interface IItem extends IDoc {\n\tcreatorId: string;\n\tcreationDate: string;\n\titemContent: ItemContent;\n}\n\nclass Item extends Doc<IItem> {\n\t@linked public creatorId: string;\n\t@linked public creationDate: string;\n\t@linked public itemContent: ItemContent;\n\n\tconstructor(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, id: string, creatorId: string, creationDate: string, itemContent: ItemContent\n\t) {\n\t\tsuper(store, id, 'item');\n\t\tthis.creatorId = creatorId;\n\t\tthis.creationDate = creationDate;\n\t\tthis.itemContent = itemContent;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, { id, creatorId, creationDate, itemContent }: IItem\n\t): Item {\n\t\treturn new Item(store, crdt, id, creatorId, creationDate, itemContent);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tcreationDate: this.creationDate,\n\t\t\tcreatorId: this.creatorId,\n\t\t\titemContent: this.itemContent\n\t\t});\n\t}\n}\n\nexport default Item;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Item.ts","import { Doc as CRDTDoc } from 'crdt';\nimport { observable } from 'mobx';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport createSeq from './createSeq';\n\nimport Store from 'shared/Store';\n\nexport interface ISession extends IDoc {\n\townerId: string;\n\tname: string;\n}\n\nclass Session extends Doc<ISession> {\n\t@linked public readonly ownerId: string;\n\t@linked public name: string;\n\t@observable public userIds: string[];\n\t@observable public itemIds: string[];\n\n\tconstructor(store: Store, crdt: CRDTDoc<IDoc>, id: string, name: string, ownerId: string) {\n\t\tsuper(store, id, 'session');\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t\tthis.userIds = [];\n\t\tthis.itemIds = [];\n\n\t\tthis.initCRDT(crdt);\n\t\tcreateSeq(crdt, store, 'type', 'item', this.itemIds, row => row.get('id'));\n\t\tcreateSeq(crdt, store, 'type', 'user', this.userIds, row => row.get('id'));\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CRDTDoc<IDoc>, { id, name, ownerId }: ISession): Session {\n\t\treturn new Session(store, crdt, id, name, ownerId);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\townerId: this.ownerId,\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default Session;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Session.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport interface IUser extends IDoc {\n\tname: string;\n}\n\nclass User extends Doc<IUser> {\n\t@linked public name: string;\n\n\tconstructor(store: Store, crdt: CrdtDoc, id: string, name: string) {\n\t\tsuper(store, id, 'user');\n\t\tthis.name = name;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CrdtDoc<IDoc>, { id, name }: IUser): User {\n\t\treturn new User(store, crdt, id, name);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/User.ts","import { Doc as CRDTDoc, Row } from 'crdt';\nimport { IDoc } from 'shared/models/Doc';\nimport Store from 'shared/Store';\n\nexport default function createSeq<D extends IDoc, K extends keyof D, L>(\n\tcrdt: CRDTDoc<D>, store: Store, key: K, value: D[K], list: L[], rowToValue: (row: Row<D>) => L\n) {\n\tconst seq = crdt.createSeq(key, value);\n\n\tseq.forEach(row => list.push(rowToValue(row)));\n\n\tseq.on('add', row => {\n\t\tconst index = seq.indexOf(row);\n\t\tif (index !== -1) {\n\t\t\tconst v = rowToValue(row);\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 0, v);\n\t\t\t});\n\t\t}\n\t});\n\n\tseq.on('remove', row => {\n\t\tconst v = rowToValue(row);\n\t\tconst index = list.indexOf(v);\n\t\tif (index !== -1) {\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 1);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/createSeq.ts","import { Doc as CRDTDoc } from 'crdt';\n\nimport Doc, { DocType, IDoc } from './Doc';\nimport Item from './Item';\nimport Session from './Session';\nimport User from './User';\n\nimport Store from 'shared/Store';\n\nconst docClass: {[D in DocType]: {\n\tnew(...args: any[]): Doc;\n\tinstantiate(store: Store, crdt: CRDTDoc<IDoc>, data: any): Doc;\n}} = {\n\tsession: Session,\n\tuser: User,\n\titem: Item\n};\n\nexport default docClass;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/docClass.ts","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts","import * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateSessionAction from 'shared/actions/CreateSession';\n\nimport Button from 'shared/components/Button';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './CreateSession.less';\n\nclass CreateSession extends React.PureComponent<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate sessionNameField!: TextField | null;\n\n\tprivate createSession = () => {\n\t\tconst value = this.sessionNameField!.getValue();\n\t\tif (value === '') { return; }\n\n\t\tconst store = this.context.store;\n\t\tconst sessionId = 'session-' + uuid();\n\t\tstore.openSession(sessionId);\n\t\tstore.executeAction(new CreateSessionAction(\n\t\t\tsessionId,\n\t\t\tvalue,\n\t\t\tstore.userIdPerSessionId[sessionId]\n\t\t));\n\t\tthis.props.navigateToSession(sessionId, true);\n\t}\n\n\tprivate validate = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.createSession();\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className='CreateSession'>\n\t\t\t\t<div className='view__explanation'>Create a session to allow another device to connect.</div>\n\t\t\t\t<form className='view__box' onSubmit={ this.validate }>\n\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel='choose a name for your session'\n\t\t\t\t\t\t\tplaceholder='My session'\n\t\t\t\t\t\t\tref={ ref => this.sessionNameField = ref }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='view__column CreateSession__create-column'>\n\t\t\t\t\t\t<Button className='action-button  CreateSession__Create' onTap={ this.createSession }>\n\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/CreateSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './JoinSession.less';\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass JoinSession extends React.PureComponent<TabComponentProps, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate scanner: SessionScanner | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\n\tconstructor(props: TabComponentProps, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tisScanning: false\n\t\t};\n\t}\n\n\tprivate onSessionScanned = (sessionId: string) => {\n\t\tthis.setState({ isScanning: false });\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.setState({ isScanning: false }, () => this.scanner!.stop());\n\t}\n\n\tprivate startScanning = () => {\n\t\ttry {\n\t\t\tthis.scanner!.scan();\n\t\t\tthis.setState({ isScanning: true });\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\tprivate validateSession = () => {\n\t\tconst sessionId = this.input!.value;\n\t\tif (!sessionId) { return; }\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate join(sessionId: string) {\n\t\tthis.context.store.join(sessionId).then(() => {\n\t\t\tthis.props.navigateToSession(sessionId);\n\t\t});\n\t}\n\n\tprivate formValidate = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.validateSession();\n\t}\n\n\tpublic render() {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className={ 'JoinSession' + (isScanning ? ' JoinSession_scanning' : '') }>\n\t\t\t\t<div className='view__explanation'>Join an existing session by scanning its QR code or entering its ID.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Scan a QR Code</div>\n\t\t\t\t\t<Button onTap={ this.startScanning } className='action-button'>Start Scanning</Button>\n\t\t\t\t\t<div className='JoinSession__scanner'>\n\t\t\t\t\t\t<SessionScanner onSessionScanned={ this.onSessionScanned } ref={ ref => this.scanner = ref } />\n\t\t\t\t\t\t<Button onTap={ this.stopScanning } className='action-button JoinSession__StopScanning'>Stop Scanning</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form className='view__box' onSubmit={ this.formValidate }>\n\t\t\t\t\t<div className='view__header'>Enter a session ID</div>\n\t\t\t\t\t<input className='JoinSession__id-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.validateSession } className='action-button'>Join</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoinSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/JoinSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionDisplay from 'shared/components/SessionDisplay';\nimport SessionInfo from 'shared/components/SessionInfo';\n\nimport './SessionViewer.less';\n\nexport type Props = {\n\tsessionId: string,\n\topenInfo: boolean,\n\tgoBack?(): void\n};\n\ntype State = {\n\tinfoOpen: boolean\n};\n\nclass SessionViewer extends React.Component<Props, State> {\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { infoOpen: props.openInfo };\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props) {\n\t\tif (nextProps.openInfo && !this.state.infoOpen) {\n\t\t\tthis.setState({ infoOpen: true });\n\t\t}\n\t}\n\n\tprivate toggleInfo = () => {\n\t\tthis.setState({ infoOpen: !this.state.infoOpen });\n\t}\n\n\tpublic render() {\n\t\tconst sessionId = this.props.sessionId;\n\t\tconst infoOpen = this.state.infoOpen;\n\n\t\treturn (\n\t\t\t<div className='SessionViewer'>\n\t\t\t\t<div className='SessionViewer__header'>\n\t\t\t\t\t<Button onTap={ this.toggleInfo } className='SessionViewer__info'>Info</Button>\n\t\t\t\t\t<Button onTap={ this.props.goBack } className='SessionViewer__go-back'>Go back</Button>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ 'SessionViewer__slider-container' + (infoOpen ? '' : ' SessionViewer__slider-container_close') }\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className='SessionViewer__slider'>\n\t\t\t\t\t\t\t<SessionInfo sessionId={ sessionId } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<SessionDisplay sessionId={ sessionId } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/SessionViewer.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport UpdateUserName from 'shared/actions/UpdateUserName';\n\nimport Button from 'shared/components/Button';\nimport SessionItem from 'shared/components/SessionItem';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './Sessions.less';\n\n@observer\nclass Sessions extends React.Component<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate clientNameField!: TextField | null;\n\n\tprivate onEnterSession = (sessionId: string) => {\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tprivate updateUserName = () => {\n\t\tconst userName = this.clientNameField!.getValue();\n\t\tif (userName === '') { return; }\n\n\t\tthis.clientNameField!.setValue('');\n\t\tthis.clientNameField!.blur();\n\n\t\tconst store = this.context.store;\n\t\tif (userName !== store.userName) {\n\t\t\tstore.executeAction(new UpdateUserName(userName));\n\t\t}\n\t}\n\n\tprivate userNameValidate = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tthis.updateUserName();\n\t}\n\n\tprivate create = () => {\n\t\tthis.props.navigateToTab('create');\n\t}\n\n\tprivate join = () => {\n\t\tthis.props.navigateToTab('join');\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst sessionList = store.sessionList;\n\n\t\treturn (\n\t\t\t<div className='Sessions'>\n\t\t\t\t{\n\t\t\t\t\tsessionList.length === 0 ?\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className='view__explanation'>To start, setup your name.</div>\n\t\t\t\t\t<form className='view__box' onSubmit={ this.userNameValidate }>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel='choose a name to identify this client'\n\t\t\t\t\t\t\t\tplaceholder={ this.context.store.userName }\n\t\t\t\t\t\t\t\tref={ ref => this.clientNameField = ref }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t\t<Button className='action-button' onTap={ this.updateUserName }>\n\t\t\t\t\t\t\t\tSet\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className='view__explanation'>Create or Join a session.</div>\n\t\t\t\t\t<div className='view__box'>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t\t<Button onTap={ this.create } className='action-button'>\n\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<Button onTap={ this.join } className='action-button'>\n\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{ sessionList.map(sessionId => <SessionItem\n\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\tonEnterSession={ this.onEnterSession }\n\t\t\t\t/>) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/Sessions.tsx"],"sourceRoot":""}