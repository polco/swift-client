{"version":3,"sources":["webpack:///./src/mobile/app.tsx","webpack:///./src/mobile/views/Main.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/Store.ts","webpack:///./src/shared/actions/Action.ts","webpack:///./src/shared/actions/AddSession.ts","webpack:///./src/shared/actions/AddSessionUser.ts","webpack:///./src/shared/actions/CreateSession.ts","webpack:///./src/shared/actions/DocsUpdate.ts","webpack:///./src/shared/actions/UpdateUserName.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SessionItem.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/components/Tabs.tsx","webpack:///./src/shared/components/TextField.tsx","webpack:///./src/shared/context.ts","webpack:///./src/shared/models/Doc.ts","webpack:///./src/shared/models/Session.ts","webpack:///./src/shared/models/User.ts","webpack:///./src/shared/models/docClass.ts","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts","webpack:///./src/shared/views/CreateSession.tsx","webpack:///./src/shared/views/JoinSession.tsx","webpack:///./src/shared/views/Sessions.tsx","webpack:///./src/shared/views/tabs.tsx"],"names":["React","__webpack_require__","ReactDOM","Main_1","localStorage","setItem","div","document","getElementById","classList","add","render","createElement","default","mobx_react_devtools_1","configureDevtool","logEnabled","context_1","Store_1","CreateSession_1","JoinSession_1","Sessions_1","tabs_1","Tabs_1","ContentClasses","sessions","create","join","Main","PureComponent","[object Object]","props","context","super","this","selectTab","tabId","setState","store","state","currentTabId","ContentClass","className","tabs","TabsInfo","onTabSelect","childContextTypes","contextTypes","exports","debug","events_1","SocketIO","log","EventEmitter","userId","isConnecting","socket","transports","autoConnect","query","on","fromId","data","emit","error","sessionId","remoteUserId","connected","Promise","resolve","reject","connect","once","removeListener","disconnect","gatewayClient","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","fromUserId","msg","__awaiter","type","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","e","setupDataChannel","onSendChannelClose","onSendChannelError","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","onerror","createOffer","onmessage","event","JSON","parse","stringify","mobx_1","uuid","GatewayClient_1","AddSession_1","AddSessionUser_1","UpdateUserName_1","User_1","DocsUpdate_1","RTCClient_1","Store","sessionList","docs","RTCClients","onJoin","client","setupClient","executeAction","sendMessage","onSessionUser","initiateConnection","onDocChange","change","window","test","name","user","id","addDoc","docId","doc","disposeObserver","observe","docIds","map","toModel","objects","openSession","closeSession","joinSession","session","action","run","__decorate","observable","execute","Session_1","Action_1","push","getSession","userIds","ownerId","docClass_1","object","getDoc","merge","instantiate","getUser","ButtonPlugin_1","Factory_1","onTap","onDoubleTap","onRef","elementRef","button","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","Pdiv","mobx_react_1","QRCode","Button_1","SessionItem","Component","enterSession","onEnterSession","displayInfo","info","value","size","observer","Instascan","videoElt","scan","Camera","getCameras","then","cameras","length","Error","scanner","start","stop","Scanner","video","mirror","addListener","content","onSessionScanned","ref","TabButton","indicator","tabWidth","positionIndicator","fullWidth","passedCurrentTab","beforeWidth","width","transform","saveTabRef","clientWidth","Label","key","mainDiv","input","onChange","onMainRef","onBlur","generateClassName","onInputRef","hasContent","label","placeholder","PropTypes","obj","Object","assign","Doc_1","Session","createDoc","i","User","docClass","spur_events_1","interactionLock_1","Plugin_1","onLock","DOMNode","current","forEach","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","Math","max","coords","repeatTap","releaseLock","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","startTap","x","y","getBoundingClientRect","SpurEvent","press","requestLockOn","longTap","now","Date","tapDiff","preventDefault","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","len","listener","call","lockNodes","lockContainerNodes","node","parentNode","container","parent","TextField_1","CreateSession","createSession","sessionNameField","getValue","SessionScanner_1","JoinSession","stopScanning","isScanning","startScanning","validateSession","SessionItem_1","Sessions","SessionLabel","TabMap","TabOrder"],"mappings":"uHAAA,MAAAA,EAAAC,EAAA,iCACAC,EAAAD,EAAA,qCACAA,EAAA,iCACA,MAAAE,EAAAF,EAAA,+BAEAG,aAAaC,QAAQ,QAAS,UAE9B,MAAMC,EAAMC,SAASC,eAAe,SACpCF,EAAKG,UAAUC,IAAI,UACnBR,EAASS,OAAOX,EAAAY,cAACT,EAAAU,QAAI,MAAKP,+JCT1B,MAAAQ,EAAAb,EAAA,+CACAD,EAAAC,EAAA,iCAEAa,EAAAC,kBACCC,YAAY,IAGb,MAAAC,EAAAhB,EAAA,2BACAiB,EAAAjB,EAAA,yBAEAkB,EAAAlB,EAAA,wCACAmB,EAAAnB,EAAA,sCACAoB,EAAApB,EAAA,mCACAqB,EAAArB,EAAA,+BAEAsB,EAAAtB,EAAA,oCAEAA,EAAA,gCAOA,MAAMuB,GACLC,SAAUJ,EAAAR,QACVa,OAAQP,EAAAN,QACRc,KAAMP,EAAAP,eAGPe,UAAmB5B,EAAM6B,cAGxBC,YAAYC,EAAcC,GACzBC,MAAMF,EAAOC,GAYNE,KAAAC,UAAY,CAACC,IACpBF,KAAKG,UAAWD,YAXhBF,KAAKI,MAAQ,IAAIpB,EAAAL,QACjBqB,KAAKK,OAAUH,MAAO,UAKhBN,kBACN,OAASQ,MAAOJ,KAAKI,OAOfR,SACN,MAAMU,EAAeN,KAAKK,MAAMH,MAC1BK,EAAejB,EAAegB,GAEpC,OACCxC,EAAAY,cAAA,OAAK8B,UAAU,QACd1C,EAAAY,cAAA,OAAK8B,UAAU,uBAAsB1C,EAAAY,cAAC6B,EAAY,OAClDzC,EAAAY,cAACW,EAAAV,SACA8B,KAAOrB,EAAAsB,SACPJ,aAAeA,EACfK,YAAcX,KAAKC,aAElB,IAtBSP,EAAAkB,kBAAoB7B,EAAA8B,aA4BnCC,EAAAnC,QAAee,gZCpEf,MAAAqB,EAAAhD,EAAA,+CACAiD,EAAAjD,EAAA,mCACAkD,EAAAlD,EAAA,gDACMmD,EAAMH,EAAM,uBA6ElBD,EAAAnC,sBA3E4BqC,EAAAG,aAI3BvB,YAAYwB,GACXrB,QAHOC,KAAAqB,cAAe,EAItBrB,KAAKsB,OAASL,EAAS,uCAAwBM,YAAa,aAAcC,aAAa,EAAOC,OAASL,YAEvGpB,KAAKsB,OAAOI,GAAG,OAAQ,CAACC,EAAgBC,KACvCV,EAAI,gBAAiBU,GACrB5B,KAAK6B,KAAK,OAAQF,EAAQC,KAE3B5B,KAAKsB,OAAOI,GAAG,QAAUI,GAAeZ,EAAIY,IAC5C9B,KAAKsB,OAAOI,GAAG,aAAc,KAC5BR,EAAI,iCACJlB,KAAK6B,KAAK,kBAEX7B,KAAKsB,OAAOI,GAAG,OAAQ,CAACK,EAAmBC,KAC1ChC,KAAK6B,KAAK,OAAQE,EAAWC,KAE9BhC,KAAKsB,OAAOI,GAAG,cAAe,CAACK,EAAmBC,KACjDhC,KAAK6B,KAAK,cAAeE,EAAWC,KAI9BpC,UACP,OAAII,KAAKqB,cAAgBrB,KAAKsB,OAAOW,UAAoBC,QAAQC,WACjEnC,KAAKqB,cAAe,EAEb,IAAIa,QAAQ,CAACC,EAASC,KAC5BpC,KAAKsB,OAAOe,UAEZrC,KAAKsB,OAAOgB,KAAK,UAAW,KAC3BtC,KAAKqB,cAAe,EACpBH,EAAI,4BACJlB,KAAKsB,OAAOiB,eAAe,iBAC3BvC,KAAKsB,OAAOiB,eAAe,mBAC3BJ,MAEDnC,KAAKsB,OAAOgB,KAAK,gBAAiBF,GAClCpC,KAAKsB,OAAOgB,KAAK,kBAAmBF,MAIzBxC,YAAYmC,2CACnB/B,KAAKsB,OAAOW,kBAAmBjC,KAAKqC,WACzCrC,KAAKsB,OAAOO,KAAK,cAAeE,KAGpBnC,aAAamC,2CACpB/B,KAAKsB,OAAOW,kBAAmBjC,KAAKqC,WACzCrC,KAAKsB,OAAOO,KAAK,eAAgBE,GACjC/B,KAAKwC,eAGO5C,YAAYmC,2CACnB/B,KAAKsB,OAAOW,kBAAmBjC,KAAKqC,WACzCrC,KAAKsB,OAAOO,KAAK,OAAQE,KAGlBnC,aACFI,KAAKsB,OAAOW,YACjBjC,KAAKqB,cAAe,EACpBrB,KAAKsB,OAAOkB,aACZxC,KAAKsB,OAAOiB,eAAe,iBAC3BvC,KAAKsB,OAAOiB,eAAe,oBAGf3C,KAAKoC,EAAsBJ,2CAClC5B,KAAKsB,OAAOW,kBAAmBjC,KAAKqC,WACzCnB,EAAI,UAAWU,EAAM,KAAMI,GAC3BhC,KAAKsB,OAAOO,KAAK,OAAQG,EAAcJ,iZC5EzC,MAAAb,EAAAhD,EAAA,+CACAiD,EAAAjD,EAAA,mCAEMmD,EAAMH,EAAM,mBAgHlBD,EAAAnC,sBAxGwBqC,EAAAG,aAQvBvB,YAAYoC,EAAsBS,GACjC1C,QANOC,KAAA0C,YAAqC,KAEtC1C,KAAA2C,iBAAkB,EAClB3C,KAAA4C,gBAAiB,EA8BjB5C,KAAA6C,iBAAmB,EAAOC,EAAoBC,IAAgBC,EAAAhD,UAAA,qBACpE,GAAI8C,IAAe9C,KAAKgC,aACxB,GAAiB,UAAbe,EAAIE,KAAkB,CACzBjD,KAAKkD,GAAGC,qBAAqB,IAAIC,sBAAsBL,EAAIM,qBAC3D,MAAMA,QAA2BrD,KAAKkD,GAAGI,eACzCtD,KAAKkD,GAAGK,oBAAoBF,GAC5BrD,KAAKyC,cAAce,KAAKxD,KAAKgC,cAAgBiB,KAAM,SAAUI,4BACvD,GAAiB,WAAbN,EAAIE,KACdjD,KAAKkD,GAAGC,qBAAqBJ,EAAIM,yBAC3B,GAAiB,cAAbN,EAAIE,KAAsB,CACpC,MAAMQ,EAAY,IAAIC,iBACrBC,cAAeZ,EAAIU,UAAUE,cAC7BF,UAAWV,EAAIU,UAAUA,YAE1BzD,KAAKkD,GAAGU,gBAAgBH,OAIlBzD,KAAA6D,kBAAoB,CAACC,IAC5B5C,EAAI,uBACJlB,KAAK+D,qBAGE/D,KAAAgE,mBAAqB,CAACF,IAC7B5C,EAAI,qBAAsB4C,KAGnB9D,KAAAiE,mBAAqB,CAACH,IAC7B5C,EAAI,qBAAsB4C,KAGnB9D,KAAAkE,cAAgB,CAACJ,IACxB5C,EAAI,uBACJlB,KAAK0C,YAAcoB,EAAEK,QACrBnE,KAAK+D,qBAoBE/D,KAAAoE,oBAAsB,CAACN,IACzBA,EAAEL,WAEPzD,KAAKyC,cAAce,KAAKxD,KAAKgC,cAC5BiB,KAAM,YACNQ,WACCE,cAAeG,EAAEL,UAAUE,cAC3BU,OAAQP,EAAEL,UAAUY,OACpBZ,UAAWK,EAAEL,UAAUA,eAvFzBzD,KAAKyC,cAAgBA,EACrBzC,KAAKyC,cAAcf,GAAG,OAAQ1B,KAAK6C,kBACnC7C,KAAKgC,aAAeA,EAEpBhC,KAAKkD,GAAK,IAAIoB,mBACbC,aAAeC,KAAM,mCAEtBxE,KAAKkD,GAAGuB,eAAiBzE,KAAKoE,oBAC9BpE,KAAKkD,GAAGwB,cAAgB1E,KAAKkE,cAGjBtE,6DACZsB,EAAI,sBACJlB,KAAK0C,YAAc1C,KAAKkD,GAAGyB,kBAAkB,2BAA6B3E,KAAKgC,cAC/EhC,KAAK0C,YAAYkC,OAAS5E,KAAK6D,kBAC/B7D,KAAK0C,YAAYmC,QAAU7E,KAAKgE,mBAChChE,KAAK0C,YAAYoC,QAAU9E,KAAKiE,mBAEhC/C,EAAI,gBACJ,MAAMmC,QAA2BrD,KAAKkD,GAAG6B,cACzC7D,EAAI,uBACElB,KAAKkD,GAAGK,oBAAoBF,GAClCrD,KAAKyC,cAAce,KAAKxD,KAAKgC,cAAgBiB,KAAM,QAASI,yBAwCrDzD,mBACPI,KAAK0C,YAAasC,UAAY,CAACC,IAC9B,MAAMhC,KAAEA,EAAIrB,KAAEA,GAASsD,KAAKC,MAAMF,EAAMrD,MACxC5B,KAAK6B,KAAKoB,EAAMrB,KAEjB5B,KAAKyC,cAAcF,eAAe,OAAQvC,KAAK6C,kBAC/C7C,KAAK6B,KAAK,WAGJjC,YAAYqD,EAAcrB,GAC5B5B,KAAK0C,YACR1C,KAAK0C,YAAYc,KAAK0B,KAAKE,WAAYnC,OAAMrB,UAE7CV,EAAI,mgBCjGP,MAAAH,EAAAhD,EAAA,+CACAsH,EAAAtH,EAAA,0CACAuH,EAAAvH,EAAA,6BAEAwH,EAAAxH,EAAA,iCAIAyH,EAAAzH,EAAA,sCACA0H,EAAA1H,EAAA,0CACA2H,EAAA3H,EAAA,0CAIA4H,EAAA5H,EAAA,+BACA6H,EAAA7H,EAAA,sCACA8H,EAAA9H,EAAA,6BAEMmD,EAAMH,EAAM,yBAElB+E,EAOClG,cANmBI,KAAA+F,eACX/F,KAAAgG,QAGAhG,KAAAiG,cAyBAjG,KAAAkG,OAAS,EAACnE,EAAmBX,KACpC,GAAIpB,KAAKiG,WAAW7E,GAAW,OAC/B,MAAM+E,EAASnG,KAAKiG,WAAW7E,GAAU,IAAIyE,EAAAlH,QAAUyC,EAAQpB,KAAKyC,eACpEzC,KAAKoG,YAAYD,GACjBA,EAAOzE,GAAG,UAAW,KACpB1B,KAAKqG,cAAc,IAAIZ,EAAA9G,QAAeoD,EAAWX,IACjD+E,EAAOG,YAAY,YAAalF,QAI1BpB,KAAAuG,cAAgB,EAACxE,EAAmBX,KAC3C,GAAIpB,KAAKiG,WAAW7E,GAAW,OAC/B,MAAM+E,EAASnG,KAAKiG,WAAW7E,GAAU,IAAIyE,EAAAlH,QAAUyC,EAAQpB,KAAKyC,eACpEzC,KAAKoG,YAAYD,GACjBA,EAAOK,qBACPL,EAAOzE,GAAG,UAAW,KACpB1B,KAAKqG,cAAc,IAAIb,EAAA7G,QAAWoD,EAAWX,IAC7C+E,EAAOG,YAAY,YAAavE,EAAWX,QA0BrCpB,KAAAyG,YAAc,CAACC,OAjErBC,OAAevG,MAAQJ,KACvB2G,OAAeC,KAAO,CAACC,IACvB7G,KAAKqG,cAAc,IAAIX,EAAA/G,QAAeqB,KAAK8G,KAAKC,GAAIF,MAGrD7G,KAAK8G,KAAO,IAAInB,EAAAhH,QAAK,QAAU2G,IAAQ,QACvCtF,KAAKgH,OAAOhH,KAAK8G,MAEjB9G,KAAKyC,cAAgB,IAAI8C,EAAA5G,QAAcqB,KAAK8G,KAAKC,IACjD/G,KAAKyC,cAAcf,GAAG,OAAQ1B,KAAKkG,QACnClG,KAAKyC,cAAcf,GAAG,cAAe1B,KAAKuG,eAGpC3G,OAAOqH,GACb,OAAOjH,KAAKgG,KAAKiB,GAGXrH,OAAOsH,GACblH,KAAKgG,KAAKkB,EAAIH,IAAMG,EACpBA,EAAIC,gBAAkB9B,EAAA+B,QAAQF,EAAKlH,KAAKyG,aAwBjC7G,YAAYuG,GACnBA,EAAOzE,GAAG,WAAa2F,IACtBlB,EAAOG,YAAY,OAAQe,EAAOC,IAAIL,GAASjH,KAAKgG,KAAKiB,GAAOM,cAGjEpB,EAAOzE,GAAG,OAAS8F,IAClBxH,KAAKqG,cAAc,IAAIT,EAAAjH,QAAW6I,MAI7B5H,YAAYmC,GAClB/B,KAAKyC,cAAcgF,YAAY1F,GAGzBnC,aAAamC,GACnB/B,KAAKyC,cAAciF,aAAa3F,GAG1BnC,KAAKmC,GACX/B,KAAKyC,cAAckF,YAAY5F,GAOzBnC,WAAWmC,GACjB,OAAO/B,KAAKgG,KAAKjE,GAGXnC,cAAcmC,GACpB,MAAM6F,EAAU5H,KAAKgG,KAAKjE,GAC1B,IAAK6F,EAAW,OAAO1G,EAAI,yCAA0Ca,GACrE6F,EAAQT,yBACDnH,KAAKgG,KAAKjE,GAGXnC,QAAQwB,GACd,OAAOpB,KAAKgG,KAAK5E,GAGXxB,cAAgCiI,GAEtC,OADAA,EAAOC,IAAI9H,MACJ6H,GA7FIE,GAAX1C,EAAA2C,8CAiGFlH,EAAAnC,QAAemH,kHCtHf,MAAAT,EAAAtH,EAAA,0CAuBA+C,EAAAnC,cAZCiB,YAAYqD,GACXjD,KAAKiD,KAAOA,EAGNrD,IAAIQ,GACVJ,KAAKI,MAAQA,EACbiF,EAAAwC,OAAO7H,KAAKiD,KAAM,IAAMjD,KAAKiI,UAA7B5C,yHCjBF,MAAA6C,EAAAnK,EAAA,kCACAoK,EAAApK,EAAA,kCAoBA+C,EAAAnC,sBAlByBwJ,EAAAxJ,QAIxBiB,YAAYmC,EAAmBX,GAC9BrB,MAAM,cAENC,KAAK+B,UAAYA,EACjB/B,KAAKoB,OAASA,EAGLxB,UAGT,OAFAI,KAAKI,MAAM2F,YAAYqC,KAAKpI,KAAK+B,WACjC/B,KAAKI,MAAM4G,OAAO,IAAIkB,EAAAvJ,QAAQqB,KAAK+B,UAAW,GAAI/B,KAAKoB,UAChD,4HCjBT,MAAA+G,EAAApK,EAAA,kCAoBA+C,EAAAnC,sBAlB6BwJ,EAAAxJ,QAI5BiB,YAAYmH,EAAY3F,GACvBrB,MAAM,kBAENC,KAAK+G,GAAKA,EACV/G,KAAKoB,OAASA,EAGLxB,UAGT,OAFgBI,KAAKI,MAAMiI,WAAWrI,KAAK+G,IACnCuB,QAAQF,KAAKpI,KAAKoB,SACnB,2HChBT,MAAA8G,EAAAnK,EAAA,kCAEAoK,EAAApK,EAAA,kCAuBA+C,EAAAnC,sBArB4BwJ,EAAAxJ,QAK3BiB,YAAYmH,EAAYF,EAAc0B,GACrCxI,MAAM,iBAENC,KAAK+G,GAAKA,EACV/G,KAAK6G,KAAOA,EACZ7G,KAAKuI,QAAUA,EAGN3I,UACT,MAAMgI,EAAU,IAAIM,EAAAvJ,QAAQqB,KAAK+G,GAAI/G,KAAK6G,KAAM7G,KAAKuI,SAGrD,OAFAvI,KAAKI,MAAM2F,YAAYqC,KAAKpI,KAAK+G,IACjC/G,KAAKI,MAAM4G,OAAOY,IACX,wHCnBT,MAAAY,EAAAzK,EAAA,mCAEAoK,EAAApK,EAAA,kCAuBA+C,EAAAnC,sBArByBwJ,EAAAxJ,QAGxBiB,YAAY4H,GACXzH,MAAM,cAENC,KAAKwH,QAAUA,EAGN5H,UACT,IAAK,MAAM6I,KAAUzI,KAAKwH,QACrBxH,KAAKI,MAAMsI,OAAOD,EAAO1B,IAC5B/G,KAAKI,MAAMsI,OAAOD,EAAO1B,IAAI4B,MAAMF,GAEnCzI,KAAKI,MAAM4G,OAAOwB,EAAA7J,QAAS8J,EAAOxF,MAAM2F,YAAYH,IAGtD,OAAO,4HCvBT,MAAAN,EAAApK,EAAA,kCAoBA+C,EAAAnC,sBAlB6BwJ,EAAAxJ,QAI5BiB,YAAYwB,EAAgByF,GAC3B9G,MAAM,kBAENC,KAAKoB,OAASA,EACdpB,KAAK6G,KAAOA,EAGHjH,UAGT,OAFaI,KAAKI,MAAMyI,QAAQ7I,KAAKoB,QAChCyF,KAAO7G,KAAK6G,MACV,8KChBT,MAAA/I,EAAAC,EAAA,iCACA+K,EAAA/K,EAAA,qCACAgL,EAAAhL,EAAA,iCAEAA,EAAA,uCA0EA+C,EAAAnC,sBAzDgCb,EAAM6B,cAIrCC,YAAYC,EAAiBC,GAC5BC,MAAMF,EAAOC,GAHPE,KAAA5B,IAA6B,KAuB5B4B,KAAAgJ,MAAQ,CAAClF,IAChB9D,KAAKH,MAAMmJ,MAAOhJ,KAAM8D,KAGjB9D,KAAAiJ,YAAc,CAACnF,IACtB9D,KAAKH,MAAMoJ,YAAajJ,KAAM8D,KAGvB9D,KAAAkJ,MAAQ,CAAC9K,IAChB4B,KAAK5B,IAAMA,EACP4B,KAAKH,MAAMsJ,YAAcnJ,KAAKH,MAAMsJ,WAAW/K,KA5BnD,MAAMgL,EAAS,IAAIN,EAAAnK,QACnBqB,KAAKqJ,SAAYD,UACjBA,EAAOE,WAAWzJ,EAAM0J,UACxBH,EAAOI,SAAW3J,EAAM2J,OAEpBxJ,KAAKH,MAAMmJ,OAASI,EAAO1H,GAAG,MAAO1B,KAAKgJ,OAC1ChJ,KAAKH,MAAMoJ,aAAeG,EAAO1H,GAAG,YAAa1B,KAAKiJ,aAGpDrJ,0BAA0B6J,GAChC,MAAML,EAASpJ,KAAKqJ,QAAQD,OAC5BA,EAAOE,WAAWG,EAAUF,UAC5BH,EAAOI,SAAWC,EAAUD,OAExBC,EAAUT,QAAUI,EAAOM,YAAY,QAAUN,EAAO1H,GAAG,MAAO1B,KAAKgJ,OACvES,EAAUR,cAAgBG,EAAOM,YAAY,cAAgBN,EAAO1H,GAAG,YAAa1B,KAAKiJ,aAgBvFrJ,SACN,MAAMY,UAAEA,EAAS+I,SAAEA,EAAQI,SAAEA,EAAQC,MAAEA,GAAU5J,KAAKH,MAOhDA,GACLW,UALA,UACCA,EAAY,IAAMA,EAAY,KAC9B+I,EAAW,YAAc,IAI1BJ,WAAYnJ,KAAKkJ,MACjBG,QAASrJ,KAAKqJ,QACdO,SAGD,OAAO9L,EAAMY,cAAcqK,EAAAc,KAAMhK,EAAO8J,+dC1E1C,MAAAG,EAAA/L,EAAA,6CACAgM,EAAAhM,EAAA,4CACAD,EAAAC,EAAA,iCAEAiM,EAAAjM,EAAA,sCACAgB,EAAAhB,EAAA,2BAYA,IAAMkM,gBAAoBnM,EAAMoM,UAI/BtK,YAAYC,EAAcC,GACzBC,MAAMF,EAAOC,GAKNE,KAAAmK,aAAe,MACtBnK,KAAKH,MAAMuK,eAAepK,KAAKH,MAAMkC,aAG9B/B,KAAAqK,YAAc,MACrBrK,KAAKG,UAAWmK,MAAOtK,KAAKK,MAAMiK,SARlCtK,KAAKK,OAAUiK,MAAM,GAWf1K,SACN,MAAMmC,UAAEA,GAAc/B,KAAKH,OACrByK,KAAEA,GAAStK,KAAKK,MAChBuH,EAAU5H,KAAKF,QAAQM,MAAMiI,WAAWtG,GAE9C,OACCjE,EAAAY,cAACsL,EAAArL,SAAO6B,UAAY,eAAiB8J,EAAO,oBAAsB,IAAMtB,MAAQhJ,KAAKmK,cACpFrM,EAAAY,cAAA,WAAOkJ,EAAQf,MACf/I,EAAAY,cAACsL,EAAArL,SAAOqK,MAAQhJ,KAAKqK,aAAW,QAC9BC,GACDxM,EAAAY,cAAA,OAAK8B,UAAU,qBACd1C,EAAAY,cAAA,OAAK8B,UAAU,eAAgBoH,EAAQb,IACvCjJ,EAAAY,cAACqL,GAAOQ,MAAQ3C,EAAQb,GAAKyD,KAAO,UA5B3BP,EAAApJ,aAAe9B,EAAA8B,aAFxBoJ,EAAWlC,GADhB+B,EAAAW,UACKR,GAsCNnJ,EAAAnC,QAAesL,8HCvDf,MAAAlJ,EAAAhD,EAAA,+CACA2M,EAAA3M,EAAA,qCACAD,EAAAC,EAAA,iCACMmD,EAAMH,EAAM,wBAwClBD,EAAAnC,sBAlC6Bb,EAAM6B,cAAnCC,kCACSI,KAAA2K,SAAoC,KAWrC3K,KAAA4K,KAAO,KACNF,EAAUG,OAAOC,aAAaC,KAAMC,IAC1C,KAAIA,EAAQC,OAAS,GAIpB,MADA/J,EAAI,qBACE,IAAIgK,MAAM,qBAHhBlL,KAAKmL,QAAQC,MAAMJ,EAAQ,IAAMA,EAAQ,OAQrChL,KAAAqL,KAAO,MACbrL,KAAKmL,QAAQE,SApBPzL,oBACNI,KAAKmL,QAAU,IAAIT,EAAUY,SAAUC,MAAOvL,KAAK2K,SAAUa,QAAQ,IACrExL,KAAKmL,QAAQM,YAAY,OAASC,IACjC1L,KAAKmL,QAAQE,OACbrL,KAAKH,MAAM8L,iBAAiBD,KAmBvB9L,SACN,OACC9B,EAAAY,cAAA,SAAOkN,IAAMA,GAAO5L,KAAK2K,SAAWiB,EAAMpL,UAAU,4LCtCvD,MAAA1C,EAAAC,EAAA,iCAEAiM,EAAAjM,EAAA,sCAEAA,EAAA,qCAGA,MAAM8N,EAAY7B,EAAArL,QA2ElBmC,EAAAnC,sBAnEmBb,EAAM6B,cAAzBC,kCACSI,KAAA8L,UAAmC,KACnC9L,KAAA+L,YAUA/L,KAAAgM,kBAAoB,MAC3B,MAAM1L,aAAEA,EAAYG,KAAEA,GAAST,KAAKH,MACpC,IAAIoM,EAAY,EACZC,GAAmB,EACnBC,EAAc,EAClB,IAAK,MAAMjM,MAAEA,KAAWO,EAAM,CACzBP,IAAUI,IAAgB4L,GAAmB,GACjD,MAAME,EAAQpM,KAAK+L,SAAS7L,GACvBgM,IACJC,GAAeC,GAEhBH,GAAaG,EAGdpM,KAAK8L,UAAWlC,MAAMyC,yBACQ,IAAdF,EAAoBF,oBAA6BjM,KAAK+L,SAASzL,GAAgB2L,OAGxFjM,KAAAsM,WAAa,CAAClD,IACjBA,IACHpJ,KAAK+L,SAAS3C,EAAOvJ,MAAMK,OAASkJ,EAAOhL,IAAKmO,eAI1CvM,KAAAC,UAAY,CAACmJ,IACpBpJ,KAAKH,MAAMc,YAAYyI,EAAOvJ,MAAMK,SAjC9BN,oBACNI,KAAKgM,oBAGCpM,qBACNI,KAAKgM,oBA+BCpM,SACN,MAAMU,aAAEA,EAAYG,KAAEA,GAAST,KAAKH,MAEpC,OACC/B,EAAAY,cAAA,OAAK8B,UAAU,QACd1C,EAAAY,cAAA,OAAK8B,UAAU,mBAEbC,EAAK6G,IAAI,EAAGpH,QAAOsM,WAEV1O,EAAAY,cAACmN,GACRY,IAAMvM,EACNM,UAAY,aAAeF,IAAiBJ,EAAQ,oBAAsB,IAC1E8I,MAAQhJ,KAAKC,UACbC,MAAQA,EACR0L,IAAM5L,KAAKsM,YAEXxO,EAAAY,cAAC8N,EAAK,QAIT1O,EAAAY,cAAA,OAAK8B,UAAU,kBAAkBoL,IAAMA,GAAO5L,KAAK8L,UAAYF,wLC3EpE,MAAA9N,EAAAC,EAAA,iCAEAA,EAAA,0CA2DA+C,EAAAnC,sBAnDwBb,EAAM6B,cAK7BC,YAAYC,EAAcC,GACzBC,MAAMF,EAAOC,GALNE,KAAA0M,QAAiC,KACjC1M,KAAA2M,MAAiC,KACjC3M,KAAA0L,QAAkB,GAQlB1L,KAAA4M,SAAW,MAClB5M,KAAK0L,QAAU1L,KAAK2M,MAAOpC,QAGpBvK,KAAA6M,UAAY,CAACzO,IACpB4B,KAAK0M,QAAUtO,IAGR4B,KAAA8M,OAAS,MAChB9M,KAAK0M,QAASlM,UAAYR,KAAK+M,sBAGxB/M,KAAAgN,WAAa,CAACL,IACrB3M,KAAK2M,MAAQA,IAhBb3M,KAAKK,OAAU4M,YAAY,GAmBpBrN,oBACP,MAAO,aAAeI,KAAK0L,QAAQT,OAAS,wBAA0B,IAGhErL,WAAa,OAAOI,KAAK0L,QAEzB9L,SACN,MAAMsN,MAAEA,EAAKC,YAAEA,GAAgBnN,KAAKH,MAEpC,OACC/B,EAAAY,cAAA,OAAK8B,UAAYR,KAAK+M,oBAAsBnB,IAAM5L,KAAK6M,WACtD/O,EAAAY,cAAA,OAAK8B,UAAU,oBAAqB0M,GACpCpP,EAAAY,cAAA,SACC8B,UAAU,mBACV2M,YAAcA,EACdP,SAAW5M,KAAK4M,SAChBE,OAAS9M,KAAK8M,OACdlB,IAAM5L,KAAKgN,yHCtDhB,MAAAI,EAAArP,EAAA,sCAOa+C,EAAAD,cACZT,MAAOgN,EAAU3E,oHCclB3H,EAAAnC,cAbCiB,YAAYmH,EAAY9D,GACvBjD,KAAK+G,GAAKA,EACV/G,KAAKiD,KAAOA,EAGHrD,UAAUyN,GACnB,OAAOC,OAAOC,OAAOF,GAAOtG,GAAI/G,KAAK+G,GAAI9D,KAAMjD,KAAKiD,0dCftD,MAAAoC,EAAAtH,EAAA,0CAEAyP,EAAAzP,EAAA,oCAEA0P,UAAsBD,EAAA7O,QAKrBiB,YAAYmH,EAAYF,EAAc0B,EAAiBD,MACtDvI,MAAMgH,EAAI,WAEV/G,KAAK6G,KAAOA,EACZ7G,KAAKuI,QAAUA,EACfvI,KAAKsI,WAGC1I,oBACNmH,GAAEA,EAAEF,KAAEA,EAAI0B,QAAEA,EAAOD,QAAEA,IACrB,OAAO,IAAImF,EAAQ1G,EAAIF,EAAM0B,EAASD,GAGhC1I,UACN,OAAOI,KAAK0N,WACXnF,QAASvI,KAAKuI,QACd1B,KAAM7G,KAAK6G,KACXyB,QAAStI,KAAKsI,UAIT1I,MAAMyN,GAKZ,GAJIrN,KAAK6G,OAASwG,EAAIxG,OACrB7G,KAAK6G,KAAOwG,EAAIxG,MAGb7G,KAAKsI,QAAQ2C,SAAWoC,EAAI/E,QAAQ2C,OACvCjL,KAAKsI,QAAU+E,EAAI/E,aAEnB,IAAK,IAAIqF,EAAI,EAAGA,EAAI3N,KAAKsI,QAAQ2C,OAAQ0C,GAAK,EAC7C,GAAI3N,KAAKsI,QAAQqF,KAAON,EAAI/E,QAAQqF,GAAI,CACvC3N,KAAKsI,QAAU+E,EAAI/E,QACnB,QAnCQP,GAAX1C,EAAA2C,uCACWD,GAAX1C,EAAA2C,0CAyCFlH,EAAAnC,QAAe8O,gdChDf,MAAApI,EAAAtH,EAAA,0CAEAyP,EAAAzP,EAAA,oCAEA6P,UAAmBJ,EAAA7O,QAGlBiB,YAAYmH,EAAYF,GACvB9G,MAAMgH,EAAI,QAEV/G,KAAK6G,KAAOA,EAGNjH,oBAAmBmH,GAAEA,EAAEF,KAAEA,IAC/B,OAAO,IAAI+G,EAAK7G,EAAIF,GAGdjH,UACN,OAAOI,KAAK0N,WACX7G,KAAM7G,KAAK6G,OAINjH,MAAMyN,GACRrN,KAAK6G,OAASwG,EAAIxG,OACrB7G,KAAK6G,KAAOwG,EAAIxG,OApBNkB,GAAX1C,EAAA2C,uCAyBFlH,EAAAnC,QAAeiP,mHC7Bf,MAAA1F,EAAAnK,EAAA,kCACA4H,EAAA5H,EAAA,+BAEM8P,GAILjG,QAASM,EAAAvJ,QACTmI,KAAMnB,EAAAhH,SAGPmC,EAAAnC,QAAekP,qHCZf,MAAAC,EAAA/P,EAAA,uCACAgQ,EAAAhQ,EAAA,wCACAiQ,EAAAjQ,EAAA,+BAkBA,SAAAkQ,EAAgBC,GACXpN,EAAAqN,QAAQ9E,QAAQ4B,SACnBnK,EAAAqN,QAAQ9E,QAAQ+E,QAAQC,IAClBvN,EAAAqN,QAAQG,cAAgBJ,IAAYG,EAAOH,SAAWG,EAAOE,WAEnEzN,EAAAqN,QAAQ9E,YAhBGvI,EAAAqN,SAKP9E,WAAamF,UAAU,EAAOC,gBAAgB,EAAOH,cAAc,GAEzER,EAAArC,YAAY9E,OAAQ,YAAa,SAAS7C,GACzChD,EAAAqN,QAAQ9E,aAYT0E,EAAApP,QAAgB+C,GAAG,eAAgBuM,GACnCF,EAAApP,QAAgB+C,GAAG,iBAAkBuM,GAIrC,MAAMS,EAAmB,IACnBC,EAAqB,IACrBC,EAAmB,GA8MzB9N,EAAAnC,sBApM2BqP,EAAArP,QAiB1BiB,YAAYiP,MACX9O,QAjBOC,KAAA8O,QAAS,EACT9O,KAAA+O,OAAwB,KACxB/O,KAAAgP,QAAU,EACVhP,KAAAiP,WAAsC,KACtCjP,KAAAkP,UAAoB,GACpBlP,KAAAmP,WAAqB,EACrBnP,KAAAoP,eAAyB,EACzBpP,KAAAqP,aAAgBC,KAAM,EAAGC,IAAK,EAAGnD,MAAO,EAAGoD,OAAQ,GACpDxP,KAAAkO,QAA8B,KAC7BlO,KAAAyP,YAAcb,EACd5O,KAAA0P,aAAed,EACf5O,KAAA2P,WAAY,EACZ3P,KAAA4P,cAAwB,EACxB5P,KAAA6P,YAAc,EACf7P,KAAAwJ,QAAS,EAKfxJ,KAAKwJ,SAAWqF,EAAQrF,OAGlB5J,oBAAoBwM,EAAeoD,GACzCxP,KAAKyP,YAAcK,KAAKC,IAAI3D,EAAOwC,GACnC5O,KAAK0P,aAAeI,KAAKC,IAAIP,EAAQZ,GAG9BhP,MAAMoQ,GACbhQ,KAAK2P,WAAY,EACb3P,KAAKwJ,SACRxJ,KAAK6P,YAAc,EACnB7P,KAAKiQ,aAENjQ,KAAK6B,KAAK,QAASmO,GAGZpQ,QAAQuP,GACfnP,KAAK2P,WAAY,EACjB3P,KAAK6B,KAAK,UAAWsN,GAGdvP,IAAIkE,GACX9D,KAAK6B,KAAK,MAAOiC,GAGVlE,UAAUkE,GACjB9D,KAAK6B,KAAK,YAAaiC,GAGhBlE,QAAQoQ,GACfhQ,KAAK6B,KAAK,UAAWmO,GAGfpQ,UAAUkP,GAChB9O,KAAK8O,OAASA,EAGPlP,QACHI,KAAK+O,SACRhB,EAAApP,QAAgBuR,YAAYlQ,KAAK+O,QACjC/O,KAAK+O,OAAS,MAEfpI,OAAOwJ,aAAanQ,KAAK4P,eACzBjJ,OAAOwJ,aAAanQ,KAAKoP,gBACzBtB,EAAAvL,eAAelE,SAAU,cAAe2B,KAAKoQ,eAAiBtQ,QAASE,OACvE8N,EAAAvL,eAAelE,SAAU,YAAa2B,KAAKqQ,aAAevQ,QAASE,OAG5DJ,YACP,MAAM0Q,EAA4B,IAArBtQ,KAAK6P,YAAoB,IAAM,GAE5C7P,KAAK4P,cAAgBjJ,OAAO4J,WAAW,KACtCvQ,KAAK6P,aAAe,EACpB7P,KAAKwQ,IAAIxQ,KAAKiP,YACdjP,KAAKiQ,aACHK,GAGG1Q,SACFI,KAAK2P,YACR3P,KAAKmP,WAAY,EACjBnP,KAAKyQ,SAAQ,IAGdzQ,KAAK0Q,QAGE9Q,cAAckE,GACjBA,EAAEoL,YAAclP,KAAKkP,YACrBpL,EAAE6M,QAAU3Q,KAAKqP,YAAYC,MAChCxL,EAAE6M,QAAU3Q,KAAKqP,YAAYC,KAAOtP,KAAKqP,YAAYjD,OACrDtI,EAAE8M,QAAU5Q,KAAKqP,YAAYE,KAC7BzL,EAAE8M,QAAU5Q,KAAKqP,YAAYE,IAAMvP,KAAKqP,YAAYG,SACpDxP,KAAKuO,SAIC3O,cAAckE,GACrB,IAAK9D,KAAK8O,QAAoD,IAAzChL,EAAE+M,cAA6BC,OAAe/C,EAAApP,QAAgBoS,SAASjN,EAAEkN,QAC7F,OAGDlQ,EAAAqN,QAAQ9E,QAAQjB,KAAKpI,MACrBA,KAAKkP,UAAYpL,EAAEoL,UAEnBlP,KAAKmP,WAAY,EACjB,MAAM8B,GACLC,EAAGpN,EAAE6M,QACLQ,EAAGrN,EAAE8M,SAGAI,EAASlN,EAAEkN,OAEX3B,EAAcrP,KAAKkO,QAASkD,wBAClCpR,KAAKqP,YAAYE,IAAMF,EAAYE,IACnCvP,KAAKqP,YAAYC,KAAOD,EAAYC,KAChCD,EAAYjD,MAAQpM,KAAKyP,aAC5BzP,KAAKqP,YAAYjD,MAAQpM,KAAKyP,YAC9BzP,KAAKqP,YAAYC,OAAStP,KAAKyP,YAAcJ,EAAYjD,OAAS,GAElEpM,KAAKqP,YAAYjD,MAAQiD,EAAYjD,MAGlCiD,EAAYG,OAASxP,KAAK0P,cAC7B1P,KAAKqP,YAAYG,OAASxP,KAAK0P,aAC/B1P,KAAKqP,YAAYE,MAAQvP,KAAK0P,aAAeL,EAAYG,QAAU,GAEnExP,KAAKqP,YAAYG,OAASH,EAAYG,OAGnCxP,KAAKwJ,SACRxJ,KAAKiP,WAAa,IAAInB,EAAAuD,UAAUvN,EAAEb,MAClCjD,KAAKiP,WAAa3B,OAAOC,OAAOvN,KAAKiP,WAAYnL,IAElD9D,KAAKsR,MAAML,GAEXnQ,EAAAqN,QAAQK,SAAW1N,EAAAqN,QAAQM,eAAiB3N,EAAAqN,QAAQG,cAAe,EAC/DtO,KAAK0J,YAAY,aAAe1J,KAAKwJ,SACxC7C,OAAOwJ,aAAanQ,KAAKoP,gBACzBpP,KAAKoP,eAAiBzI,OAAO4J,WAAW,KACvCvQ,KAAK+O,OAAShB,EAAApP,QAAgB4S,cAAcP,GACxChR,KAAK+O,SACR/O,KAAKwR,QAAQP,GACbnQ,EAAAqN,QAAQG,cAAe,IAEtBI,IAGJZ,EAAArC,YAAYpN,SAAU,cAAe2B,KAAKoQ,eAAiBtQ,QAASE,OACpE8N,EAAArC,YAAYpN,SAAU,YAAa2B,KAAKqQ,aAAevQ,QAASE,OAGzDJ,YAAYkE,GACnB,GAAIA,EAAEoL,YAAclP,KAAKkP,YAAalP,KAAKmP,YAI3CnP,KAAK0Q,QACL1Q,KAAKyQ,SAAQ,IAER3P,EAAAqN,QAAQG,cAAc,CAC1B,MAAMmD,EAAMC,KAAKD,MACXE,EAAUF,EAAMzR,KAAKgP,QAQ3B,GAPAhP,KAAKgP,QAAUyC,GAEV3Q,EAAAqN,QAAQK,UAAYxO,KAAK0J,YAAY,SACzC5I,EAAAqN,QAAQK,UAAW,EACnBxO,KAAKwQ,IAAI1M,IAGN6N,EAAUhD,EAOb,OANA3O,KAAKgP,QAAU,QACVlO,EAAAqN,QAAQM,gBAAkBzO,KAAK0J,YAAY,eAC/C5I,EAAAqN,QAAQM,gBAAiB,EACzB3K,EAAE8N,iBACF5R,KAAK6R,UAAU/N,MAOZlE,kBAAkBsO,GACxBlO,KAAKkO,QAAUA,EACfJ,EAAArC,YAAYzL,KAAKkO,QAAS,cAAelO,KAAK8R,eAAiBhS,QAASE,OAGlEJ,uBACNkO,EAAAvL,eAAevC,KAAKkO,QAAU,cAAelO,KAAK8R,eAAiBhS,QAASE,OAC5EA,KAAK0Q,QACL1Q,KAAKkO,QAAU,KACfvH,OAAOwJ,aAAanQ,KAAK4P,+aC9O3B,MAAA9R,EAAAC,EAAA,uCAoBAgU,UACSjU,EAAM6B,cAEdC,YAAYC,EAAUC,GACrBC,MAAMF,EAAOC,GAEb,IAAK,MAAMiH,KAAMlH,EAAMwJ,QAAS,CAChBxJ,EAAMwJ,QAAQtC,GACtBiL,qBAAqBhS,OAIvBJ,qBACN,MAAMyJ,EAAUrJ,KAAKH,MAAMwJ,QAC3B,IAAK,MAAMtC,KAAMsC,EAAS,CACVA,EAAQtC,GAChBkL,sBAIFrS,6BAA6BsS,GACnC,MAAM7I,EAAUrJ,KAAKH,MAAMwJ,QAC3B,IAAK,MAAMtC,KAAMsC,EAAS,CACVA,EAAQtC,GAChBoL,kBAAkBD,IAIpBtS,0BAA0B6J,GAChC,MAAMJ,EAAUrJ,KAAKH,MAAMwJ,QAC3B,IAAK,MAAMtC,KAAMsC,EAAS,CACVA,EAAQtC,GAChBqL,0BAA0B3I,IAI5B7J,oBAAoB6J,GAC1B,MAAMJ,EAAUrJ,KAAKH,MAAMwJ,QAC3B,IAAK,MAAMtC,KAAMsC,EAAS,CACVA,EAAQtC,GAChBsL,oBAAoB5I,IAItB7J,qBACN,MAAMyJ,EAAUrJ,KAAKH,MAAMwJ,QAC3B,IAAK,MAAMtC,KAAMsC,EAAS,CACVA,EAAQtC,GAChBuL,sBAIF1S,uBACN,MAAMyJ,EAAUrJ,KAAKH,MAAMwJ,QAC3B,IAAK,MAAMtC,KAAMsC,EAAS,CACzB,MAAMgF,EAAShF,EAAQtC,GACvBsH,EAAOkE,uBACPlE,EAAOmE,yBAKV,SAAAC,EAA4EC,GAG3E,qBAAsCX,EAGrCnS,YAAYC,EAAiBC,GAC5BC,MAAMF,EAAOC,GAHPE,KAAAkS,QAAoB,KAK1BlS,KAAKkJ,MAAQlJ,KAAKkJ,MAAMyJ,KAAK3S,MAGvBJ,oBACNI,KAAK4S,6BAA6B5S,KAAKkS,SAGhCtS,MAAMiT,GACb7S,KAAKkS,QAAUW,EACX7S,KAAKH,MAAMsJ,YACdnJ,KAAKH,MAAMsJ,WAAW0J,GAIjBjT,SACN,MAAMkT,EAAUJ,EACVK,EAAA/S,KAAAH,OAAA8J,SAAEA,EAAQN,QAAEA,EAAOF,WAAEA,GAAU4J,EAAElT,EAAAmT,EAAAD,GAAA,oCACvC,OACCjV,EAAAY,cAACoU,EAAOxF,OAAAC,UAAM1N,GAAQ+L,IAAM5L,KAAKkJ,QAC9BS,KA1FP7I,EAAAiR,gBA8DAjR,EAAA2R,yBAmCa3R,EAAA+I,KAAO4I,EAAuC,OAC9C3R,EAAAmS,MAAQR,EAAwC,qHC5D7D3R,EAAAnC,cA1DAiB,cA6BSI,KAAAkT,aA5BDtT,qBAAqBuT,IAIrBvT,kBAAkBwT,IAIlBxT,sBAIAA,0BAA0B6J,IAI1B7J,oBAAoB6J,IAIpB7J,sBAIAA,wBAMAA,GAAyByT,EAAcC,EAAwCxT,EAAoBE,MACrGqT,KAAarT,KAAKkT,UACrBlT,KAAKkT,UAAUG,GAAWjL,MAAOkL,WAAUxT,YAE3CE,KAAKkT,UAAUG,KAAgBC,WAAUxT,YAIpCF,uBACNI,KAAKkT,aAGItT,KAAwByT,EAAcE,GAC/C,MAAML,EAAYlT,KAAKkT,UAAUG,GACjC,GAAIH,EACH,IAAK,IAAIvF,EAAI,EAAG6F,EAAMN,EAAUjI,OAAQ0C,EAAI6F,EAAK7F,GAAK,EAAG,CACxD,MAAM8F,EAAWP,EAAUvF,GAC3B8F,EAASH,SAASI,KAAKD,EAAS3T,QAASyT,IAKrC3T,YAAYyT,GAClB,QAASrT,KAAKkT,UAAUG,2HCtD1B,MAAArS,EAAAjD,EAAA,mCAyDA+C,EAAAnC,QAAe,kBAvDeqC,EAAAG,aAA9BvB,kCACSI,KAAA2T,aACA3T,KAAA4T,sBACA5T,KAAA+O,OAAS,EAEVnP,SAASsO,GACf,IAAK,MAAMnH,KAAM/G,KAAK2T,UAAW,CAChC,IAAIE,EAAoB7T,KAAK2T,UAAU5M,GACvC,KAAgB,OAAT8M,GAAe,CACrB,GAAIA,IAAS3F,EAAW,OAAO,EAC/B2F,EAAOA,EAAKC,YAId,IAAK,MAAM/M,KAAM/G,KAAK4T,mBAAoB,CACzC,MAAMG,EAAY/T,KAAK4T,mBAAmB7M,GAC1C,IAAIiN,EAAsB9F,EAC1B,KAAkB,OAAX8F,GAAiB,CACvB,GAAIA,IAAWD,EAAa,OAAO,EACnCC,EAASA,EAAOF,YAIlB,OAAO,EAGDlU,cAAcsO,GACpB,OAAIlO,KAAK+Q,SAAS7C,GAAmB,MAErClO,KAAK+O,QAAU,EACf/O,KAAK2T,UAAU3T,KAAK+O,QAAUb,EAC9BlO,KAAK6B,KAAK,eAAgBqM,GACnBlO,KAAK+O,QAGNnP,uBAAuBsO,GAC7B,OAAIlO,KAAK+Q,SAAS7C,GAAmB,MAErClO,KAAK+O,QAAU,EACf/O,KAAK4T,mBAAmB5T,KAAK+O,QAAUb,EACvClO,KAAK6B,KAAK,iBAAkBqM,GACrBlO,KAAK+O,QAGNnP,YAAYmH,GAClB,MAAMmH,EAAUlO,KAAK2T,UAAU5M,IAAO/G,KAAK4T,mBAAmB7M,GAC1DmH,WACIlO,KAAK2T,UAAU5M,UACf/G,KAAK4T,mBAAmB7M,GAC/B/G,KAAK+O,QAAU,EACf/O,KAAK6B,KAAK,SAAUqM,oOCpDvB,MAAApQ,EAAAC,EAAA,iCACAuH,EAAAvH,EAAA,6BAEAkB,EAAAlB,EAAA,yCAEAiM,EAAAjM,EAAA,sCACAkW,EAAAlW,EAAA,yCACAgB,EAAAhB,EAAA,2BAEAA,EAAA,+CAIAmW,UAA4BpW,EAAM6B,cAAlCC,kCAKSI,KAAAmU,cAAgB,MACvB,MAAMpS,EAAY,WAAauD,IACzBlF,EAAQJ,KAAKF,QAAQM,MAC3BA,EAAMiG,cAAc,IAAIpH,EAAAN,QACvBoD,EACA/B,KAAKoU,iBAAkBC,WACvBjU,EAAM0G,KAAKC,KAEZ3G,EAAMqH,YAAY1F,KAGZnC,SACN,OACC9B,EAAAY,cAAA,OAAK8B,UAAU,iBACd1C,EAAAY,cAAA,OAAK8B,UAAU,qBAAmB,wDAClC1C,EAAAY,cAAA,OAAK8B,UAAU,aACd1C,EAAAY,cAAA,OAAK8B,UAAU,gBACd1C,EAAAY,cAACuV,EAAAtV,SACAuO,MAAM,iCACNC,YAAY,aACZvB,IAAMA,GAAO5L,KAAKoU,iBAAmBxI,KAGvC9N,EAAAY,cAAA,OAAK8B,UAAU,6CACd1C,EAAAY,cAACsL,EAAArL,SAAO6B,UAAU,uCAAuCwI,MAAQhJ,KAAKmU,eAAa,cA3B1ED,EAAArT,aAAe9B,EAAA8B,aAqC9BC,EAAAnC,QAAeuV,4KCpDf,MAAApW,EAAAC,EAAA,iCAEAiM,EAAAjM,EAAA,sCACAuW,EAAAvW,EAAA,8CACAgB,EAAAhB,EAAA,2BAEAA,EAAA,6CAQAwW,UAA0BzW,EAAM6B,cAM/BC,YAAYC,EAAcC,GACzBC,MAAMF,EAAOC,GAJNE,KAAAmL,QAAiC,KACjCnL,KAAA2M,MAAiC,KAUjC3M,KAAA2L,iBAAmB,CAACvK,IAC3BpB,KAAKP,KAAK2B,KAGHpB,KAAAwU,aAAe,MACtBxU,KAAKG,UAAWsU,YAAY,GAAS,IAAMzU,KAAKmL,QAASE,UAGlDrL,KAAA0U,cAAgB,MACvB,IACC1U,KAAKmL,QAASP,OACd5K,KAAKG,UAAWsU,YAAY,IAC3B,MAAO1B,OAKF/S,KAAA2U,gBAAkB,MACzB,MAAM5S,EAAY/B,KAAK2M,MAAOpC,MAC9BvK,KAAKP,KAAKsC,KAxBV/B,KAAKK,OACJoU,YAAY,GA0BN7U,KAAKwB,GACZpB,KAAKF,QAAQM,MAAMX,KAAK2B,GAGlBxB,SACN,MAAM6U,WAAEA,GAAezU,KAAKK,MAE5B,OACCvC,EAAAY,cAAA,OAAK8B,UAAY,eAAiBiU,EAAa,wBAA0B,KACxE3W,EAAAY,cAAA,OAAK8B,UAAU,qBAAmB,wEAClC1C,EAAAY,cAAA,OAAK8B,UAAU,aACd1C,EAAAY,cAAA,OAAK8B,UAAU,gBAAc,kBAC7B1C,EAAAY,cAACsL,EAAArL,SAAOqK,MAAQhJ,KAAK0U,cAAgBlU,UAAU,iBAAe,kBAC9D1C,EAAAY,cAAA,OAAK8B,UAAU,wBACd1C,EAAAY,cAAC4V,EAAA3V,SAAegN,iBAAmB3L,KAAK2L,iBAAmBC,IAAMA,GAAO5L,KAAKmL,QAAUS,IACvF9N,EAAAY,cAACsL,EAAArL,SAAOqK,MAAQhJ,KAAKwU,aAAehU,UAAU,2CAAyC,mBAGzF1C,EAAAY,cAAA,OAAK8B,UAAU,aACd1C,EAAAY,cAAA,OAAK8B,UAAU,gBAAc,sBAC7B1C,EAAAY,cAAA,SAAO8B,UAAU,wBAAwBoL,IAAMA,GAAO5L,KAAK2M,MAAQf,IACnE9N,EAAAY,cAACsL,EAAArL,SAAOqK,MAAQhJ,KAAK2U,gBAAkBnU,UAAU,iBAAe,WAvDtD+T,EAAA1T,aAAe9B,EAAA8B,aA8D9BC,EAAAnC,QAAe4V,odC9Ef,MAAAzK,EAAA/L,EAAA,6CACAD,EAAAC,EAAA,iCAEA6W,EAAA7W,EAAA,2CACAgB,EAAAhB,EAAA,2BAGA,IAAM8W,gBAAiB/W,EAAMoM,UAD7BtK,kCAKSI,KAAAoK,eAAiB,CAACrI,OAInBnC,SACN,MACMmG,EADQ/F,KAAKF,QAAQM,MACD2F,YAE1B,OACCjI,EAAAY,cAAA,OAAK8B,UAAU,YACZuF,EAAYuB,IAAIvF,GAAajE,EAAAY,cAACkW,EAAAjW,SAC/BoD,UAAYA,EACZ0K,IAAM1K,EACNqI,eAAiBpK,KAAKoK,qBAfZyK,EAAAhU,aAAe9B,EAAA8B,aAFxBgU,EAAQ9M,GADb+B,EAAAW,UACKoK,GAwBN/T,EAAAnC,QAAekW,+GC/Bf,MAAA/K,EAAA/L,EAAA,6CAEAgB,EAAAhB,EAAA,2BAKM+W,EAAyChL,EAAAW,SAAS,WACvD,MAAMlL,EAAWS,KAAKF,QAAQM,MAAM2F,YACpC,MAAQ,eAAiBxG,EAAS0L,YAAc1L,EAAS0L,UAAY,MAEtE6J,EAAajU,aAAe9B,EAAA8B,aAEfC,EAAAiU,QACZxV,SAAUuV,EACVtV,OAAQ,IAAM,iBACdC,KAAM,IAAM,gBAGAqB,EAAAkU,UAAqB,WAAY,SAAU,QAC3ClU,EAAAJ,SAAWI,EAAAkU,SAAS1N,IAAIpH,KAAYA,QAAOsM,MAAO1L,EAAAiU,OAAO7U","file":"mobile-app.40592bede456f77378e2.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'shared/styles/core.less';\nimport Main from './views/Main';\n\nlocalStorage.setItem('debug', 'swift*');\n\nconst div = document.getElementById('swift');\ndiv!.classList.add('mobile');\nReactDOM.render(<Main />, div);\n\n\n\n// WEBPACK FOOTER //\n// ./src/mobile/app.tsx","import DevTools, { configureDevtool } from 'mobx-react-devtools';\nimport * as React from 'react';\n\nconfigureDevtool({\n\tlogEnabled: true\n});\n\nimport { Context, contextTypes } from 'shared/context';\nimport Store from 'shared/Store';\n\nimport CreateSession from 'shared/views/CreateSession';\nimport JoinSession from 'shared/views/JoinSession';\nimport Sessions from 'shared/views/Sessions';\nimport { TabId, TabsInfo } from 'shared/views/tabs';\n\nimport Tabs from 'shared/components/Tabs';\n\nimport './Main.less';\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId\n};\n\nconst ContentClasses: {[tabId in TabId]: React.ComponentClass} = {\n\tsessions: Sessions,\n\tcreate: CreateSession,\n\tjoin: JoinSession\n};\n\nclass Main extends React.PureComponent<Props, State> {\n\tprivate store: Store;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.store = new Store();\n\t\tthis.state = { tabId: 'create' };\n\t}\n\n\tpublic static childContextTypes = contextTypes;\n\n\tpublic getChildContext(): Context {\n\t\treturn { store: this.store };\n\t}\n\n\tprivate selectTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId });\n\t}\n\n\tpublic render() {\n\t\tconst currentTabId = this.state.tabId;\n\t\tconst ContentClass = ContentClasses[currentTabId];\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<div className='Main__tab-container'><ContentClass /></div>\n\t\t\t\t<Tabs\n\t\t\t\t\ttabs={ TabsInfo }\n\t\t\t\t\tcurrentTabId={ currentTabId }\n\t\t\t\t\tonTabSelect={ this.selectTab }\n\t\t\t\t/>\n\t\t\t\t{ __IS_DEV__ &&  <DevTools /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mobile/views/Main.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\tprivate isConnecting = false;\n\n\tconstructor(userId: string) {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false, query: { userId } });\n\n\t\tthis.socket.on('data', (fromId: string, data: any) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('data', fromId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t\tthis.socket.on('join', (sessionId: string, remoteUserId: string) => {\n\t\t\tthis.emit('join', sessionId, remoteUserId);\n\t\t});\n\t\tthis.socket.on('sessionUser', (sessionId: string, remoteUserId: string) => {\n\t\t\tthis.emit('sessionUser', sessionId, remoteUserId);\n\t\t});\n\t}\n\n\tprivate connect(): Promise<void> {\n\t\tif (this.isConnecting || this.socket.connected) { return Promise.resolve(); }\n\t\tthis.isConnecting = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tthis.isConnecting = false;\n\t\t\t\tlog(`Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tpublic async openSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('openSession', sessionId);\n\t}\n\n\tpublic async closeSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('closeSession', sessionId);\n\t\tthis.disconnect();\n\t}\n\n\tpublic async joinSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('join', sessionId);\n\t}\n\n\tprivate disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.isConnecting = false;\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic async send(remoteUserId: string, data: any) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tlog('sending', data, 'to', remoteUserId);\n\t\tthis.socket.emit('data', remoteUserId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'client', sessionId: string } |\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nclass RTCClient extends EventEmitter {\n\tprivate pc: RTCPeerConnection;\n\tprivate gatewayClient: GatewayClient;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate remoteUserId: string;\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor(remoteUserId: string, gatewayClient: GatewayClient) {\n\t\tsuper();\n\n\t\tthis.gatewayClient = gatewayClient;\n\t\tthis.gatewayClient.on('data', this.onGatewayMessage);\n\t\tthis.remoteUserId = remoteUserId;\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tpublic async initiateConnection() {\n\t\tlog('initiateConnection');\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel with ' + this.remoteUserId);\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\t\tthis.sendChannel.onerror = this.onSendChannelError;\n\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(this.remoteUserId, { type: 'offer', sessionDescription });\n\t}\n\n\tpublic onGatewayMessage = async (fromUserId: string, msg: Message) => {\n\t\tif (fromUserId !== this.remoteUserId) { return; }\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(this.remoteUserId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onSendChannelError = (e: ErrorEvent) => {\n\t\tlog('onSendChannelError', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconst { type, data } = JSON.parse(event.data);\n\t\t\tthis.emit(type, data);\n\t\t};\n\t\tthis.gatewayClient.removeListener('data', this.onGatewayMessage);\n\t\tthis.emit('connect');\n\t}\n\n\tpublic sendMessage(type: string, data: any) {\n\t\tif (this.sendChannel) {\n\t\t\tthis.sendChannel.send(JSON.stringify({ type, data }));\n\t\t} else {\n\t\t\tlog('trying to send a message before the channel is opened');\n\t\t}\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteUserId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import * as debug from 'debug-logger';\nimport { IObjectChange, observable, observe } from 'mobx';\nimport * as uuid from 'uuid/v4';\n\nimport GatewayClient from 'shared/GatewayClient';\n\nimport Doc from 'shared/models/Doc';\n\nimport AddSession from 'shared/actions/AddSession';\nimport AddSessionUser from 'shared/actions/AddSessionUser';\nimport UpdateUserName from 'shared/actions/UpdateUserName';\n\nimport Action from 'shared/actions/Action';\nimport Session from 'shared/models/Session';\nimport User from 'shared/models/User';\nimport DocsUpdate from './actions/DocsUpdate';\nimport RTCClient from './RTCClient';\n\nconst log = debug('swift:RTCClient');\n\nclass Store {\n\t@observable public sessionList: string[] = [];\n\tprivate docs: {[docId: string]: Doc} = {};\n\tpublic user: User;\n\tprivate gatewayClient: GatewayClient;\n\tprivate RTCClients: {[userId: string]: RTCClient} = {};\n\n\tconstructor() {\n\t\t(window as any).store = this;\n\t\t(window as any).test = (name: string) => {\n\t\t\tthis.executeAction(new UpdateUserName(this.user.id, name));\n\t\t};\n\n\t\tthis.user = new User('user-' + uuid(), 'user');\n\t\tthis.addDoc(this.user);\n\n\t\tthis.gatewayClient = new GatewayClient(this.user.id);\n\t\tthis.gatewayClient.on('join', this.onJoin);\n\t\tthis.gatewayClient.on('sessionUser', this.onSessionUser);\n\t}\n\n\tpublic getDoc(docId: string): Doc {\n\t\treturn this.docs[docId];\n\t}\n\n\tpublic addDoc(doc: Doc) {\n\t\tthis.docs[doc.id] = doc;\n\t\tdoc.disposeObserver = observe(doc, this.onDocChange);\n\t}\n\n\tprivate onJoin = (sessionId: string, userId: string) => {\n\t\tif (this.RTCClients[userId]) { return; } // just update the session object\n\t\tconst client = this.RTCClients[userId] = new RTCClient(userId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.on('connect', () => {\n\t\t\tthis.executeAction(new AddSessionUser(sessionId, userId));\n\t\t\tclient.sendMessage('get-docs', [userId]);\n\t\t});\n\t}\n\n\tprivate onSessionUser = (sessionId: string, userId: string) => {\n\t\tif (this.RTCClients[userId]) { return; }\n\t\tconst client = this.RTCClients[userId] = new RTCClient(userId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.initiateConnection();\n\t\tclient.on('connect', () => {\n\t\t\tthis.executeAction(new AddSession(sessionId, userId));\n\t\t\tclient.sendMessage('get-docs', [sessionId, userId]);\n\t\t});\n\t}\n\n\tprivate setupClient(client: RTCClient) {\n\t\tclient.on('get-docs', (docIds: string[]) => {\n\t\t\tclient.sendMessage('docs', docIds.map(docId => this.docs[docId].toModel()));\n\t\t});\n\n\t\tclient.on('docs', (objects: any[]) => {\n\t\t\tthis.executeAction(new DocsUpdate(objects));\n\t\t});\n\t}\n\n\tpublic openSession(sessionId: string) {\n\t\tthis.gatewayClient.openSession(sessionId);\n\t}\n\n\tpublic closeSession(sessionId: string) {\n\t\tthis.gatewayClient.closeSession(sessionId);\n\t}\n\n\tpublic join(sessionId: string) {\n\t\tthis.gatewayClient.joinSession(sessionId);\n\t}\n\n\tprivate onDocChange = (change: IObjectChange) => {\n\t\t// TODO implement the logic to update clients with those new data\n\t}\n\n\tpublic getSession(sessionId: string): Session {\n\t\treturn this.docs[sessionId] as Session;\n\t}\n\n\tpublic removeSession(sessionId: string) {\n\t\tconst session = this.docs[sessionId] as Session;\n\t\tif (!session) { return log('trying to remove an inexisting session', sessionId); }\n\t\tsession.disposeObserver();\n\t\tdelete this.docs[sessionId];\n\t}\n\n\tpublic getUser(userId: string): User {\n\t\treturn this.docs[userId] as User;\n\t}\n\n\tpublic executeAction<A extends Action>(action: A): A {\n\t\taction.run(this);\n\t\treturn action;\n\t}\n}\n\nexport default Store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Store.ts","import { action } from 'mobx';\nimport Store from 'shared/Store';\n\nexport type ActionsType =\n\t'createSession' | 'createUser' | 'updateSessionName' | 'addSessionUser' |\n\t'updateUserName' | 'docsUpdate' | 'addSession';\n\nabstract class IAction {\n\tpublic type: ActionsType;\n\tprotected store!: Store;\n\n\tconstructor(type: ActionsType) {\n\t\tthis.type = type;\n\t}\n\n\tpublic run(store: Store) {\n\t\tthis.store = store;\n\t\taction(this.type, () => this.execute())();\n\t}\n\n\tprotected abstract execute(): boolean;\n}\n\nexport default IAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/Action.ts","import Session from 'shared/models/Session';\nimport Action from './Action';\n\nclass AddSession extends Action {\n\tprivate sessionId: string;\n\tprivate userId: string;\n\n\tconstructor(sessionId: string, userId: string) {\n\t\tsuper('addSession');\n\n\t\tthis.sessionId = sessionId;\n\t\tthis.userId = userId;\n\t}\n\n\tprotected execute() {\n\t\tthis.store.sessionList.push(this.sessionId);\n\t\tthis.store.addDoc(new Session(this.sessionId, '', this.userId));\n\t\treturn true;\n\t}\n}\n\nexport default AddSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/AddSession.ts","import Action from './Action';\n\nclass AddSessionUser extends Action {\n\tprivate id: string;\n\tprivate userId: string;\n\n\tconstructor(id: string, userId: string) {\n\t\tsuper('addSessionUser');\n\n\t\tthis.id = id;\n\t\tthis.userId = userId;\n\t}\n\n\tprotected execute() {\n\t\tconst session = this.store.getSession(this.id);\n\t\tsession.userIds.push(this.userId);\n\t\treturn true;\n\t}\n}\n\nexport default AddSessionUser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/AddSessionUser.ts","import Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateSession extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\tprivate ownerId: string;\n\n\tconstructor(id: string, name: string, ownerId: string) {\n\t\tsuper('createSession');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t}\n\n\tprotected execute() {\n\t\tconst session = new Session(this.id, this.name, this.ownerId);\n\t\tthis.store.sessionList.push(this.id);\n\t\tthis.store.addDoc(session);\n\t\treturn true;\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateSession.ts","import { DocType } from 'shared/models/Doc';\n\nimport docClass from 'shared/models/docClass';\n\nimport Action from './Action';\n\nclass DocsUpdate extends Action {\n\tprivate objects: Array<{ id: string, type: DocType }>;\n\n\tconstructor(objects: Array<{ id: string, type: DocType }>) {\n\t\tsuper('docsUpdate');\n\n\t\tthis.objects = objects;\n\t}\n\n\tprotected execute() {\n\t\tfor (const object of this.objects) {\n\t\t\tif (this.store.getDoc(object.id)) {\n\t\t\t\tthis.store.getDoc(object.id).merge(object);\n\t\t\t} else {\n\t\t\t\tthis.store.addDoc(docClass[object.type].instantiate(object));\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport default DocsUpdate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/DocsUpdate.ts","import Action from './Action';\n\nclass UpdateUserName extends Action {\n\tprivate userId: string;\n\tprivate name: string;\n\n\tconstructor(userId: string, name: string) {\n\t\tsuper('updateUserName');\n\n\t\tthis.userId = userId;\n\t\tthis.name = name;\n\t}\n\n\tprotected execute() {\n\t\tconst user = this.store.getUser(this.userId);\n\t\tuser.name = this.name;\n\t\treturn true;\n\t}\n}\n\nexport default UpdateUserName;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateUserName.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | null) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = Props> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\tpublic div: HTMLDivElement | null = null;\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tprivate onRef = (div: HTMLDivElement | null) => {\n\t\tthis.div = div;\n\t\tif (this.props.elementRef) { this.props.elementRef(div); }\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.onRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import { observer } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\n\nexport type Props = {\n\tsessionId: string,\n\tonEnterSession(sessionId: string): void\n};\n\ntype State = {\n\tinfo: boolean\n};\n\n@observer\nclass SessionItem extends React.Component<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { info: false };\n\t}\n\n\tprivate enterSession = () => {\n\t\tthis.props.onEnterSession(this.props.sessionId);\n\t}\n\n\tprivate displayInfo = () => {\n\t\tthis.setState({ info: !this.state.info });\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId } = this.props;\n\t\tconst { info } = this.state;\n\t\tconst session = this.context.store.getSession(sessionId);\n\n\t\treturn (\n\t\t\t<Button className={ 'SessionItem' + (info ? ' SessionItem_info' : '') } onTap={ this.enterSession }>\n\t\t\t\t<div>{ session.name }</div>\n\t\t\t\t<Button onTap={ this.displayInfo }>Info</Button>\n\t\t\t\t{ info && (\n\t\t\t\t\t<div className='SessionItem__info'>\n\t\t\t\t\t\t<div className='user-select'>{ session.id }</div>\n\t\t\t\t\t\t<QRCode value={ session.id } size={ 256 } />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default SessionItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionItem.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\nclass SessionScanner extends React.PureComponent<Props> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.props.onSessionScanned(content);\n\t\t});\n\t}\n\n\tpublic scan = (): Promise<void> => {\n\t\treturn Instascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\tif (cameras.length > 0) {\n\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t} else {\n\t\t\t\tlog('No cameras found.');\n\t\t\t\tthrow new Error('No cameras found.');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stop = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\treturn (\n\t\t\t<video ref={ ref => this.videoElt = ref } className='session-scanner' />\n\t\t);\n\t}\n}\n\nexport default SessionScanner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import * as React from 'react';\n\nimport Button, { IButtonClass } from 'shared/components/Button';\n\nimport './Tabs.less';\n\ntype TabButtonProps = { tabId: string };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nexport type Props = {\n\ttabs: Array<{ tabId: string, Label: React.StatelessComponent }>,\n\tcurrentTabId: string,\n\tonTabSelect(tabId: string): void\n};\n\nclass Tabs extends React.PureComponent<Props> {\n\tprivate indicator: HTMLDivElement | null = null;\n\tprivate tabWidth: { [tabId: string]: number } = {};\n\n\tpublic componentDidMount() {\n\t\tthis.positionIndicator();\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tthis.positionIndicator();\n\t}\n\n\tprivate positionIndicator = () => {\n\t\tconst { currentTabId, tabs } = this.props;\n\t\tlet fullWidth = 0;\n\t\tlet passedCurrentTab = false;\n\t\tlet beforeWidth = 0;\n\t\tfor (const { tabId } of tabs) {\n\t\t\tif (tabId === currentTabId) { passedCurrentTab = true; }\n\t\t\tconst width = this.tabWidth[tabId];\n\t\t\tif (!passedCurrentTab) {\n\t\t\t\tbeforeWidth += width;\n\t\t\t}\n\t\t\tfullWidth += width;\n\t\t}\n\n\t\tthis.indicator!.style.transform =\n\t\t\t`translate3d(${beforeWidth * 100 / fullWidth}%, 0, 0) scaleX(${ this.tabWidth[currentTabId] / fullWidth })`;\n\t}\n\n\tprivate saveTabRef = (button: Button<TabButtonProps> | null) => {\n\t\tif (button) {\n\t\t\tthis.tabWidth[button.props.tabId] = button.div!.clientWidth;\n\t\t}\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.props.onTabSelect(button.props.tabId);\n\t}\n\n\tpublic render() {\n\t\tconst { currentTabId, tabs } = this.props;\n\n\t\treturn (\n\t\t\t<div className='Tabs'>\n\t\t\t\t<div className='Tabs__container'>\n\t\t\t\t\t{\n\t\t\t\t\t\ttabs.map(({ tabId, Label }) => {\n\n\t\t\t\t\t\t\treturn (<TabButton\n\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\tclassName={ 'Tabs__tab' + (currentTabId === tabId ? ' Tabs__tab_active' : '') }\n\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t\tref={ this.saveTabRef }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Label />\n\t\t\t\t\t\t\t</TabButton>); }\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<div className='Tabs__indicator' ref={ ref => this.indicator = ref } />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Tabs.tsx","import * as React from 'react';\n\nimport './TextField.less';\n\nexport type Props = {\n\tlabel: string,\n\tplaceholder: string,\n\tclassName?: string\n};\n\nclass TextField extends React.PureComponent<Props> {\n\tprivate mainDiv: HTMLDivElement | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\tprivate content: string = '';\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { hasContent: false };\n\t}\n\n\tprivate onChange = () => {\n\t\tthis.content = this.input!.value;\n\t}\n\n\tprivate onMainRef = (div: HTMLDivElement | null) => {\n\t\tthis.mainDiv = div;\n\t}\n\n\tprivate onBlur = () => {\n\t\tthis.mainDiv!.className = this.generateClassName();\n\t}\n\n\tprivate onInputRef = (input: HTMLInputElement | null) => {\n\t\tthis.input = input;\n\t}\n\n\tprivate generateClassName(): string {\n\t\treturn 'TextField' + (this.content.length ? ' TextField_hasContent' : '');\n\t}\n\n\tpublic getValue() { return this.content; }\n\n\tpublic render() {\n\t\tconst { label, placeholder } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ this.generateClassName() } ref={ this.onMainRef }>\n\t\t\t\t<div className='TextField__label'>{ label }</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='TextField__input'\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tref={ this.onInputRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/TextField.tsx","import * as PropTypes from 'prop-types';\nimport Store from './Store';\n\nexport type Context = {\n\tstore: Store\n};\n\nexport const contextTypes: {[T in keyof Context]: PropTypes.Requireable<any>} = {\n\tstore: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/context.ts","import { Lambda } from 'mobx';\n\nexport type DocType = 'session' | 'user';\n\nabstract class Doc {\n\tpublic readonly id: string;\n\tpublic readonly type: DocType;\n\tpublic disposeObserver!: Lambda;\n\n\tconstructor(id: string, type: DocType) {\n\t\tthis.id = id;\n\t\tthis.type = type;\n\t}\n\n\tprotected createDoc(obj: object): object {\n\t\treturn Object.assign(obj, { id: this.id, type: this.type });\n\t}\n\n\tpublic abstract toModel(): object;\n\tpublic abstract merge(obj: any): void;\n}\n\nexport default Doc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Doc.ts","import { observable } from 'mobx';\n\nimport Doc from './Doc';\n\nclass Session extends Doc {\n\tpublic readonly ownerId: string;\n\t@observable public name: string;\n\t@observable public userIds:  string[];\n\n\tconstructor(id: string, name: string, ownerId: string, userIds: string[] = []) {\n\t\tsuper(id, 'session');\n\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t\tthis.userIds = [];\n\t}\n\n\tpublic static instantiate(\n\t\t{ id, name, ownerId, userIds }: { id: string, name: string, ownerId: string, userIds: string[] }): Session {\n\t\treturn new Session(id, name, ownerId, userIds);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\townerId: this.ownerId,\n\t\t\tname: this.name,\n\t\t\tuserIds: this.userIds,\n\t\t});\n\t}\n\n\tpublic merge(obj: any) {\n\t\tif (this.name !== obj.name) {\n\t\t\tthis.name = obj.name;\n\t\t}\n\n\t\tif (this.userIds.length !== obj.userIds.length) {\n\t\t\tthis.userIds = obj.userIds;\n\t\t} else {\n\t\t\tfor (let i = 0; i < this.userIds.length; i += 1) {\n\t\t\t\tif (this.userIds[i] !== obj.userIds[i]) {\n\t\t\t\t\tthis.userIds = obj.userIds;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default Session;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Session.ts","import { observable } from 'mobx';\n\nimport Doc from './Doc';\n\nclass User extends Doc {\n\t@observable public name: string;\n\n\tconstructor(id: string, name: string) {\n\t\tsuper(id, 'user');\n\n\t\tthis.name = name;\n\t}\n\n\tpublic static instantiate({ id, name }: { id: string, name: string }): User {\n\t\treturn new User(id, name);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tname: this.name\n\t\t});\n\t}\n\n\tpublic merge(obj: any) {\n\t\tif (this.name !== obj.name) {\n\t\t\tthis.name = obj.name;\n\t\t}\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/User.ts","import Doc, { DocType } from './Doc';\nimport Session from './Session';\nimport User from './User';\n\nconst docClass: {[D in DocType]: {\n\tnew(...args: any[]): Doc;\n\tinstantiate(obj: any): Doc\n}} = {\n\tsession: Session,\n\tuser: User\n};\n\nexport default docClass;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/docClass.ts","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts","import * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateSessionAction from 'shared/actions/CreateSession';\n\nimport Button from 'shared/components/Button';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './CreateSession.less';\n\nexport type Props = {};\n\nclass CreateSession extends React.PureComponent<Props> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate sessionNameField!: TextField | null;\n\n\tprivate createSession = () => {\n\t\tconst sessionId = 'session-' + uuid();\n\t\tconst store = this.context.store;\n\t\tstore.executeAction(new CreateSessionAction(\n\t\t\tsessionId,\n\t\t\tthis.sessionNameField!.getValue(),\n\t\t\tstore.user.id\n\t\t));\n\t\tstore.openSession(sessionId);\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className='CreateSession'>\n\t\t\t\t<div className='view__explanation'>Create a session to allow another device to connect.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel='choose a name for your session'\n\t\t\t\t\t\t\tplaceholder='My session'\n\t\t\t\t\t\t\tref={ ref => this.sessionNameField = ref }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='view__column CreateSession__create-column'>\n\t\t\t\t\t\t<Button className='action-button  CreateSession__Create' onTap={ this.createSession }>\n\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/CreateSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport { Context, contextTypes } from 'shared/context';\n\nimport './JoinSession.less';\n\ntype Props = {};\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass JoinSession extends React.PureComponent<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate scanner: SessionScanner | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tisScanning: false\n\t\t};\n\t}\n\n\tprivate onSessionScanned = (userId: string) => {\n\t\tthis.join(userId);\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.setState({ isScanning: false }, () => this.scanner!.stop());\n\t}\n\n\tprivate startScanning = () => {\n\t\ttry {\n\t\t\tthis.scanner!.scan();\n\t\t\tthis.setState({ isScanning: true });\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\tprivate validateSession = () => {\n\t\tconst sessionId = this.input!.value;\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate join(userId: string) {\n\t\tthis.context.store.join(userId);\n\t}\n\n\tpublic render() {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className={ 'JoinSession' + (isScanning ? ' JoinSession_scanning' : '') }>\n\t\t\t\t<div className='view__explanation'>Join an existing session by scanning its QR code or entering its ID.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Scan a QR Code</div>\n\t\t\t\t\t<Button onTap={ this.startScanning } className='action-button'>Start Scanning</Button>\n\t\t\t\t\t<div className='JoinSession__scanner'>\n\t\t\t\t\t\t<SessionScanner onSessionScanned={ this.onSessionScanned } ref={ ref => this.scanner = ref } />\n\t\t\t\t\t\t<Button onTap={ this.stopScanning } className='action-button JoinSession__StopScanning'>Stop Scanning</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Enter a session ID</div>\n\t\t\t\t\t<input className='JoinSession__id-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.validateSession } className='action-button'>Join</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoinSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/JoinSession.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport SessionItem from 'shared/components/SessionItem';\nimport { Context, contextTypes } from 'shared/context';\n\n@observer\nclass Sessions extends React.Component {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate onEnterSession = (sessionId: string) => {\n\t\t//\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst sessionList = store.sessionList;\n\n\t\treturn (\n\t\t\t<div className='Sessions'>\n\t\t\t\t{ sessionList.map(sessionId => <SessionItem\n\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\tonEnterSession={ this.onEnterSession }\n\t\t\t\t/>) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/Sessions.tsx","import { observer } from 'mobx-react';\n\nimport { Context, contextTypes } from 'shared/context';\n\nexport type TabId = 'sessions' | 'create' | 'join';\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\nconst SessionLabel: React.StatelessComponent = observer(function (this: { context: Context }) {\n\tconst sessions = this.context.store.sessionList;\n\treturn ('My sessions' + (sessions.length ? ` (${sessions.length})` : '' )) as any;\n});\nSessionLabel.contextTypes = contextTypes;\n\nexport const TabMap: {[tabId in TabId]: React.StatelessComponent}  = {\n\tsessions: SessionLabel,\n\tcreate: () => 'Create Session' as any,\n\tjoin: () => 'Join Session' as any\n};\n\nexport const TabOrder: TabId[] = ['sessions', 'create', 'join'];\nexport const TabsInfo = TabOrder.map(tabId => ({ tabId, Label: TabMap[tabId] }));\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/tabs.tsx"],"sourceRoot":""}