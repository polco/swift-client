{"version":3,"sources":["webpack:///./src/mobile/app.tsx","webpack:///./src/mobile/views/Main.tsx","webpack:///./src/shared/GatewayClient.ts","webpack:///./src/shared/RTCClient.ts","webpack:///./src/shared/Store.ts","webpack:///./src/shared/actions/Action.ts","webpack:///./src/shared/actions/CreateDoc.ts","webpack:///./src/shared/actions/CreateSession.ts","webpack:///./src/shared/actions/UpdateDoc.ts","webpack:///./src/shared/components/Button.tsx","webpack:///./src/shared/components/SessionItem.tsx","webpack:///./src/shared/components/SessionScanner.tsx","webpack:///./src/shared/components/Tabs.tsx","webpack:///./src/shared/components/TextField.tsx","webpack:///./src/shared/context.ts","webpack:///./src/shared/models/Doc.ts","webpack:///./src/shared/models/Item.ts","webpack:///./src/shared/models/Session.ts","webpack:///./src/shared/models/User.ts","webpack:///./src/shared/models/createSeq.ts","webpack:///./src/shared/models/docClass.ts","webpack:///./src/shared/spur/ButtonPlugin.ts","webpack:///./src/shared/spur/Factory.tsx","webpack:///./src/shared/spur/Plugin.ts","webpack:///./src/shared/spur/interactionLock.ts","webpack:///./src/shared/views/CreateSession.tsx","webpack:///./src/shared/views/JoinSession.tsx","webpack:///./src/shared/views/SessionViewer.tsx","webpack:///./src/shared/views/Sessions.tsx","webpack:///./src/shared/views/tabs.tsx"],"names":["React","__webpack_require__","ReactDOM","Main_1","localStorage","setItem","div","document","getElementById","classList","add","render","createElement","default","mobx_1","mobx_react_devtools_1","configureDevtool","logEnabled","context_1","Store_1","CreateSession_1","JoinSession_1","Sessions_1","SessionViewer_1","tabs_1","Tabs_1","ContentClasses","sessions","create","join","Main","PureComponent","[object Object]","props","context","super","this","selectTab","tabId","state","category","setState","sessionId","navigateToSession","navigateToTab","store","tabs","TabsInfo","sessionsObserverDispose","observe","sessionList","map","session","getSession","Label","name","ContentClass","className","categoryIndex","currentTabId","onTabSelect","childContextTypes","contextTypes","exports","debug","events_1","SocketIO","log","EventEmitter","isConnecting","socket","transports","autoConnect","on","clientId","data","emit","error","connected","Promise","resolve","reject","connect","once","removeListener","disconnect","remoteClientId","ICustomEmitter","type","cb","prototype","call","value","gatewayClient","sendChannel","sessionCreating","sessionCreated","onGatewayMessage","fromClientId","msg","__awaiter","pc","setRemoteDescription","RTCSessionDescription","sessionDescription","createAnswer","setLocalDescription","send","candidate","RTCIceCandidate","sdpMLineIndex","addIceCandidate","onSendChannelOpen","e","setupDataChannel","onSendChannelClose","onSendChannelError","onDataChannel","channel","onLocalIceCandidate","sdpMid","RTCPeerConnection","iceServers","urls","onicecandidate","ondatachannel","createDataChannel","onopen","onclose","onerror","createOffer","onmessage","event","JSON","parse","stringify","crdt_1","dcstream","uuid","GatewayClient_1","CreateDoc_1","UpdateDoc_1","User_1","RTCClient_1","Store","docs","userName","RTCClients","crdts","updating","pendingSeqActions","userIdPerSessionId","onJoin","createCRDT","client","setupClient","dc","stream","pipe","createStream","onSessionUser","initiateConnection","window","length","forEach","action","docId","doc","id","crdt","Doc","userId","user","addDoc","row","get","executeAction","changes","toJSON","openSession","closeSession","joinSession","dispose","includes","itemId","sideEffect","run","__decorate","observable","execute","docClass_1","Session_1","Action_1","instantiate","push","applyPendingSeqAction","ownerId","getDoc","key","ButtonPlugin_1","Factory_1","onTap","onDoubleTap","onRef","elementRef","button","plugins","setEnable","disabled","repeat","nextProps","hasListener","children","style","Pdiv","mobx_react_1","QRCode","Button_1","SessionItem","Component","enterSession","onEnterSession","displayInfo","info","size","userIds","getUser","itemIds","observer","Instascan","videoElt","scan","Camera","getCameras","then","cameras","Error","scanner","start","stop","Scanner","video","mirror","addListener","content","onSessionScanned","ref","TabButton","INDI_WIDTH","indicator","tabsRef","tabWidth","labelUpdated","positionIndicator","clientWidth","fullWidth","passedCurrentTab","beforeWidth","width","transform","onLabelUpdate","i","onUpdate","mainDiv","input","onChange","onMainRef","onBlur","generateClassName","onInputRef","hasContent","label","placeholder","PropTypes","object","linked","docPrototype","property","atom","Atom","getter","reportObserved","__data","setter","val","set","reportChanged","Object","defineProperty","toModel","changed","assign","obj","Doc_1","Item","creatorId","creationDate","itemContent","initCRDT","createDoc","createSeq_1","Session","User","list","rowToValue","seq","createSeq","index","indexOf","v","splice","Item_1","docClass","item","spur_events_1","interactionLock_1","Plugin_1","onLock","DOMNode","current","plugin","longTapFired","cancel","tapFired","doubleTapFired","LONG_TAP_TIMEOUT","DOUBLE_TAP_TIMEOUT","MIN_TAP_DISTANCE","options","enable","lockId","lastTap","currentTap","pointerId","cancelled","longTapTimeout","boundingBox","left","top","height","minBoxWidth","minBoxHeight","isPressed","repeatTimeout","repeatCount","Math","max","coords","repeatTap","releaseLock","clearTimeout","onPointerMove","onPointerUp","time","setTimeout","tap","release","reset","clientX","clientY","originalEvent","which","isLocked","target","startTap","x","y","getBoundingClientRect","SpurEvent","press","requestLockOn","longTap","now","Date","tapDiff","preventDefault","doubleTap","onPointerDown","PlugComponent","setComponentInstance","componentWillMount","element","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListeners","createPlugTagComponent","tag","bind","componentDidMountWithElement","instance","ThisTag","_a","__rest","Pspan","listeners","component","Element","eventName","callback","arg","len","listener","lockNodes","lockContainerNodes","node","parentNode","container","parent","TextField_1","CreateSession","createSession","sessionNameField","getValue","onSubmit","SessionScanner_1","JoinSession","isScanning","stopScanning","startScanning","validateSession","SessionViewer","closingTimeout","addText","toISOString","goBack","Fragment","getItem","SessionItem_1","Sessions","SessionsLabel","TabMap","TabOrder"],"mappings":"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","file":"mobile-app.ff01bfef1a7d6f7531af.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'shared/styles/core.less';\nimport Main from './views/Main';\n\nlocalStorage.setItem('debug', 'swift*');\n\nconst div = document.getElementById('swift');\ndiv!.classList.add('mobile');\nReactDOM.render(<Main />, div);\n\n\n\n// WEBPACK FOOTER //\n// ./src/mobile/app.tsx","import { Lambda, observe } from 'mobx';\nimport DevTools, { configureDevtool } from 'mobx-react-devtools';\nimport * as React from 'react';\n\nconfigureDevtool({\n\tlogEnabled: true\n});\n\nimport { Context, contextTypes } from 'shared/context';\nimport Store from 'shared/Store';\n\nimport CreateSession from 'shared/views/CreateSession';\nimport JoinSession from 'shared/views/JoinSession';\nimport Sessions from 'shared/views/Sessions';\nimport SessionViewer from 'shared/views/SessionViewer';\nimport { TabComponentProps, TabId, TabsInfo } from 'shared/views/tabs';\n\nimport Tabs, { LabelProps } from 'shared/components/Tabs';\n\nimport './Main.less';\n\nexport type Props = {};\ntype State = {\n\ttabId: TabId | 'session',\n\ttabs: Array<Array<{ tabId: string, Label: React.StatelessComponent<LabelProps> }>>,\n\tcategory: number,\n\tsessionId: string | null\n};\n\nconst ContentClasses: {[tabId in TabId]: React.ComponentClass<TabComponentProps>} = {\n\tsessions: Sessions,\n\tcreate: CreateSession,\n\tjoin: JoinSession\n};\n\nclass Main extends React.PureComponent<Props, State> {\n\tprivate store: Store;\n\tprivate sessionsObserverDispose: Lambda;\n\tpublic static childContextTypes = contextTypes;\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.store = new Store();\n\t\tthis.state = { tabId: 'create', tabs: [[], TabsInfo], category: 1, sessionId: null };\n\n\t\tthis.sessionsObserverDispose = observe(this.store.sessionList, () => {\n\t\t\tthis.setState({\n\t\t\t\ttabs: [\n\t\t\t\t\tthis.store.sessionList.map(sessionId => {\n\t\t\t\t\t\tconst session = this.store.getSession(sessionId);\n\t\t\t\t\t\treturn { tabId: sessionId, Label: () => session.name as any };\n\t\t\t\t\t}),\n\t\t\t\t\tTabsInfo\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tthis.sessionsObserverDispose();\n\t}\n\n\tpublic getChildContext(): Context {\n\t\treturn { store: this.store };\n\t}\n\n\tprivate selectTab = (tabId: TabId | string) => {\n\t\tif (this.state.category === 0) {\n\t\t\tthis.setState({ tabId: 'session', sessionId: tabId });\n\t\t} else {\n\t\t\tthis.setState({ tabId: tabId as TabId });\n\t\t}\n\t}\n\n\tprivate navigateToSession = (sessionId: string) => {\n\t\tthis.setState({ tabId: 'session', sessionId, category: 0 });\n\t}\n\n\tprivate navigateToTab = (tabId: TabId) => {\n\t\tthis.setState({ tabId, category: 1 });\n\t}\n\n\tpublic render() {\n\t\tconst { tabId, tabs, category, sessionId } = this.state;\n\t\tconst ContentClass = tabId === 'session' ? SessionViewer : ContentClasses[tabId];\n\n\t\treturn (\n\t\t\t<div className='Main'>\n\t\t\t\t<div className='Main__tab-container'>\n\t\t\t\t\t<ContentClass\n\t\t\t\t\t\tnavigateToSession={ this.navigateToSession }\n\t\t\t\t\t\tnavigateToTab={ this.navigateToTab }\n\t\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Tabs\n\t\t\t\t\ttabs={ tabs }\n\t\t\t\t\tcategoryIndex={ category }\n\t\t\t\t\tcurrentTabId={ tabId === 'session' && sessionId ? sessionId : tabId }\n\t\t\t\t\tonTabSelect={ this.selectTab }\n\t\t\t\t/>\n\t\t\t\t{ __IS_DEV__ &&  <DevTools /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mobile/views/Main.tsx","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\nimport * as SocketIO from 'socket.io-client';\nconst log = debug('swift:GatewayClient');\n\nclass GatewayClient extends EventEmitter {\n\tprivate socket: SocketIOClient.Socket;\n\tprivate isConnecting = false;\n\t// private socketIdPerUserId: {[userId: string]: string} = {};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.socket = SocketIO(__SOCKET_END_POINT__, { transports: ['websocket'], autoConnect: false });\n\n\t\tthis.socket.on('data', (clientId: string, data: any) => {\n\t\t\tlog('received data', data);\n\t\t\tthis.emit('data', clientId, data);\n\t\t});\n\t\tthis.socket.on('error', (error: any) => log(error));\n\t\tthis.socket.on('disconnect', () => {\n\t\t\tlog(`Disconnected from the gateway`);\n\t\t\tthis.emit('disconnected');\n\t\t});\n\t\tthis.socket.on('join', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('join', sessionId, clientId);\n\t\t});\n\t\tthis.socket.on('sessionClient', (sessionId: string, clientId: string) => {\n\t\t\tthis.emit('sessionClient', sessionId, clientId);\n\t\t});\n\t}\n\n\tprivate connect(): Promise<void> {\n\t\tif (this.isConnecting || this.socket.connected) { return Promise.resolve(); }\n\t\tthis.isConnecting = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.socket.connect();\n\n\t\t\tthis.socket.once('connect', () => {\n\t\t\t\tthis.isConnecting = false;\n\t\t\t\tlog(`Connected to the gateway`);\n\t\t\t\tthis.socket.removeListener('connect_error');\n\t\t\t\tthis.socket.removeListener('connect_timeout');\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tthis.socket.once('connect_error', reject);\n\t\t\tthis.socket.once('connect_timeout', reject);\n\t\t});\n\t}\n\n\tpublic async openSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('openSession', sessionId);\n\t}\n\n\tpublic async closeSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('closeSession', sessionId);\n\t\tthis.disconnect();\n\t}\n\n\tpublic async joinSession(sessionId: string) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tthis.socket.emit('join', sessionId);\n\t}\n\n\tprivate disconnect() {\n\t\tif (!this.socket.connected) { return; }\n\t\tthis.isConnecting = false;\n\t\tthis.socket.disconnect();\n\t\tthis.socket.removeListener('connect_error');\n\t\tthis.socket.removeListener('connect_timeout');\n\t}\n\n\tpublic async send(remoteClientId: string, data: any) {\n\t\tif (!this.socket.connected) { await this.connect(); }\n\t\tlog('sending', data, 'to', remoteClientId);\n\t\tthis.socket.emit('data', remoteClientId, data);\n\t}\n}\n\nexport default GatewayClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/GatewayClient.ts","import * as debug from 'debug-logger';\nimport { EventEmitter } from 'events';\n\nimport { DocChange } from 'shared/Store';\n\nimport GatewayClient from 'shared/GatewayClient';\nconst log = debug('swift:RTCClient');\n\ntype Message =\n\t{ type: 'client', sessionId: string } |\n\t{ type: 'offer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'answer', sessionDescription: RTCSessionDescriptionInit } |\n\t{ type: 'candidate', candidate: RTCIceCandidateInit };\n\nexport type RTCEvent = {\n\t'connect': RTCDataChannel,\n\t'get-docs': string[],\n\t'docs': any[],\n\t'doc-changes': { sessionId: string, changes: {[docId: string]: DocChange[]} },\n};\n\nabstract class ICustomEmitter extends EventEmitter {\n\tpublic on<K extends keyof RTCEvent>(type: K, cb: (value: RTCEvent[K]) => void): this {\n\t\tEventEmitter.prototype.on.call(this, type, cb);\n\t\treturn this;\n\t}\n\n\tpublic emit<K extends keyof RTCEvent>(type: K, value: RTCEvent[K]): boolean {\n\t\treturn EventEmitter.prototype.emit.call(this, type, value);\n\t}\n}\n\n// tslint:disable:max-classes-per-file\nclass RTCClient extends ICustomEmitter {\n\tprivate pc: RTCPeerConnection;\n\tprivate gatewayClient: GatewayClient;\n\tprivate sendChannel: RTCDataChannel | null = null;\n\tprivate remoteClientId: string;\n\tpublic sessionCreating = false;\n\tpublic sessionCreated = false;\n\n\tconstructor(remoteClientId: string, gatewayClient: GatewayClient) {\n\t\tsuper();\n\n\t\tthis.gatewayClient = gatewayClient;\n\t\tthis.gatewayClient.on('data', this.onGatewayMessage);\n\t\tthis.remoteClientId = remoteClientId;\n\n\t\tthis.pc = new RTCPeerConnection({\n\t\t\ticeServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n\t\t});\n\t\tthis.pc.onicecandidate = this.onLocalIceCandidate;\n\t\tthis.pc.ondatachannel = this.onDataChannel;\n\t}\n\n\tpublic async initiateConnection() {\n\t\tlog('initiateConnection');\n\t\tthis.sendChannel = this.pc.createDataChannel('Swift Data Channel with ' + this.remoteClientId);\n\t\tthis.sendChannel.onopen = this.onSendChannelOpen;\n\t\tthis.sendChannel.onclose = this.onSendChannelClose;\n\t\tthis.sendChannel.onerror = this.onSendChannelError;\n\n\t\tlog('create offer');\n\t\tconst sessionDescription = await this.pc.createOffer() as any;\n\t\tlog('offer created');\n\t\tawait this.pc.setLocalDescription(sessionDescription);\n\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'offer', sessionDescription });\n\t}\n\n\tpublic onGatewayMessage = async (fromClientId: string, msg: Message) => {\n\t\tif (fromClientId !== this.remoteClientId) { return; }\n\t\tif (msg.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sessionDescription));\n\t\t\tconst sessionDescription = await this.pc.createAnswer() as any;\n\t\t\tthis.pc.setLocalDescription(sessionDescription);\n\t\t\tthis.gatewayClient.send(this.remoteClientId, { type: 'answer', sessionDescription });\n\t\t} else if (msg.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(msg.sessionDescription);\n\t\t} else if (msg.type === 'candidate') {\n\t\t\tconst candidate = new RTCIceCandidate({\n\t\t\t\tsdpMLineIndex: msg.candidate.sdpMLineIndex,\n\t\t\t\tcandidate: msg.candidate.candidate\n\t\t\t});\n\t\t\tthis.pc.addIceCandidate(candidate);\n\t\t}\n\t}\n\n\tprivate onSendChannelOpen = (e: Event) => {\n\t\tlog('data channel opened');\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate onSendChannelClose = (e: Event) => {\n\t\tlog('onSendChannelClose', e);\n\t}\n\n\tprivate onSendChannelError = (e: ErrorEvent) => {\n\t\tlog('onSendChannelError', e);\n\t}\n\n\tprivate onDataChannel = (e: RTCDataChannelEvent) => {\n\t\tlog('data channel opened');\n\t\tthis.sendChannel = e.channel;\n\t\tthis.setupDataChannel();\n\t}\n\n\tprivate setupDataChannel() {\n\t\tthis.sendChannel!.onmessage = (event) => {\n\t\t\tconst { type, data } = JSON.parse(event.data);\n\t\t\tthis.emit(type, data);\n\t\t};\n\t\tthis.gatewayClient.removeListener('data', this.onGatewayMessage);\n\t\tthis.emit('connect', this.sendChannel!);\n\t}\n\n\tpublic getDataChannel() { return this.sendChannel; }\n\n\tpublic sendMessage<K extends keyof RTCEvent>(type: K, data: RTCEvent[K]): void {\n\t\tif (this.sendChannel) {\n\t\t\tthis.sendChannel.send(JSON.stringify({ type, data }));\n\t\t} else {\n\t\t\tlog('trying to send a message before the channel is opened');\n\t\t}\n\t}\n\n\tprivate onLocalIceCandidate = (e: RTCPeerConnectionIceEvent) => {\n\t\tif (!e.candidate) { return; }\n\n\t\tthis.gatewayClient.send(this.remoteClientId, {\n\t\t\ttype: 'candidate',\n\t\t\tcandidate: {\n\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t} as RTCIceCandidateInit\n\t\t});\n\t}\n}\n\nexport default RTCClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/RTCClient.ts","import { Doc as CRDTDoc } from 'crdt';\nimport * as debug from 'debug-logger';\nimport { IObjectChange, observable, observe } from 'mobx';\nimport * as dcstream from 'rtc-dcstream';\nimport * as uuid from 'uuid/v4';\n\nimport GatewayClient from 'shared/GatewayClient';\n\nimport Action from 'shared/actions/Action';\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport UpdateDoc from 'shared/actions/UpdateDoc';\n\nimport Doc from 'shared/models/Doc';\nimport Item from 'shared/models/Item';\nimport Session, { ISession } from 'shared/models/Session';\nimport User, { IUser } from 'shared/models/User';\n\nimport RTCClient from 'shared/RTCClient';\n\nconst log = debug('swift:RTCClient');\n\nexport type DocChange = {\n\tname: string;\n\tdocId: string;\n\ttype: IObjectChange['type'];\n\tnewValue: any;\n};\n\nclass Store {\n\t@observable public sessionList: string[] = [];\n\tprivate docs: { [docId: string]: Doc } = {};\n\t// public userId = 'user-' + uuid();\n\tpublic userName: string = 'user buehehe';\n\tprivate gatewayClient: GatewayClient;\n\tprivate RTCClients: { [clientId: string]: RTCClient } = {};\n\n\tpublic crdts: {[sessionId: string]: CRDTDoc<ISession | IUser>} = {};\n\tpublic updating: {[id: string]: true} = {};\n\n\tpublic pendingSeqActions: Array<() => void> = [];\n\n\tpublic userIdPerSessionId: {[sessionId: string]: string} = {};\n\n\tconstructor() {\n\t\t(window as any).store = this;\n\n\t\tthis.gatewayClient = new GatewayClient();\n\t\tthis.gatewayClient.on('join', this.onJoin);\n\t\tthis.gatewayClient.on('sessionClient', this.onSessionUser);\n\t}\n\n\tpublic applyPendingSeqAction() {\n\t\tif (this.pendingSeqActions.length) {\n\t\t\tthis.pendingSeqActions.forEach(action => action());\n\t\t\tthis.pendingSeqActions = [];\n\t\t}\n\t}\n\n\tpublic getDoc(docId: string): Doc {\n\t\treturn this.docs[docId];\n\t}\n\n\tpublic addDoc(doc: Doc) {\n\t\tthis.docs[doc.id] = doc;\n\t}\n\n\tprivate onJoin = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tprivate onSessionUser = (sessionId: string, clientId: string) => {\n\t\tif (!this.crdts[sessionId]) { this.createCRDT(sessionId); }\n\n\t\tif (this.RTCClients[clientId]) { return; } // TODO Handle same user with many sessions\n\t\tconst client = this.RTCClients[clientId] = new RTCClient(clientId, this.gatewayClient);\n\t\tthis.setupClient(client);\n\t\tclient.initiateConnection();\n\t\tclient.on('connect', (dc) => {\n\t\t\tconst stream = dcstream(dc);\n\t\t\tstream.pipe(this.crdts[sessionId].createStream()).pipe(stream);\n\t\t});\n\t}\n\n\tpublic createCRDT(sessionId: string) {\n\t\tconst crdt = this.crdts[sessionId] = new CRDTDoc();\n\n\t\t// TODO: how do we deal with the same user in different CRDTDOC ?\n\t\tconst userId = 'user-' + uuid();\n\t\tthis.userIdPerSessionId[sessionId] = userId;\n\t\tthis.updating[userId] = true;\n\t\tconst user = new User(this, crdt, userId, 'user');\n\t\tthis.addDoc(user);\n\t\tdelete this.updating[userId];\n\n\t\tcrdt.on('row_update', (row) => {\n\t\t\tconst id = row.get('id');\n\t\t\tif (this.updating[id]) { return; }\n\t\t\tthis.updating[id] = true;\n\n\t\t\tif (this.docs[id]) {\n\t\t\t\tthis.executeAction(new UpdateDoc(id, this.docs[id].changes));\n\t\t\t} else {\n\t\t\t\tthis.executeAction(new CreateDoc(row.toJSON(), sessionId));\n\t\t\t}\n\n\t\t\tdelete this.updating[id];\n\t\t});\n\t}\n\n\tprivate setupClient(client: RTCClient) {\n\t\t// client.on('get-docs', (docIds: string[]) => {\n\t\t\t// client.sendMessage('docs', docIds.map(docId => this.docs[docId].toModel()));\n\t\t// });\n\n\t\t// client.on('docs', (objects: any[]) => {\n\t\t// \tthis.executeAction(new DocsUpdate(objects), true);\n\t\t// });\n\n\t\t// client.on('doc-changes', (docChanges) => {\n\t\t\t// const { changes, sessionId } = docChanges;\n\t\t\t// const session = this.docs[sessionId] as Session;\n\t\t\t// if (session.ownerId === this.user.id) { // send to others\n\t\t\t// \tfor (const userId of session.userIds) {\n\t\t\t// \t\tthis.RTCClients[userId].sendMessage('doc-changes', docChanges);\n\t\t\t// \t}\n\t\t\t// } else {\n\t\t\t// \tconsole.log(changes);\n\t\t\t// }\n\t\t// });\n\t}\n\n\tpublic openSession(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.openSession(sessionId);\n\t}\n\n\tpublic closeSession(sessionId: string) {\n\t\tthis.gatewayClient.closeSession(sessionId);\n\t}\n\n\tpublic join(sessionId: string) {\n\t\tthis.createCRDT(sessionId);\n\t\tthis.gatewayClient.joinSession(sessionId);\n\t\treturn new Promise((resolve) => {\n\t\t\t// TODO handle error and reject ?\n\t\t\tconst dispose = observe(this.sessionList, () => {\n\t\t\t\tif (this.sessionList.includes(sessionId)) {\n\t\t\t\t\tdispose();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getSession(sessionId: string): Session {\n\t\treturn this.docs[sessionId] as Session;\n\t}\n\n\tpublic removeSession(sessionId: string) {\n\t\tconst session = this.docs[sessionId] as Session;\n\t\tif (!session) { return log('trying to remove an inexisting session', sessionId); }\n\t\tdelete this.docs[sessionId];\n\t}\n\n\tpublic getUser(userId: string): User {\n\t\treturn this.docs[userId] as User;\n\t}\n\n\tpublic getItem(itemId: string): Item {\n\t\treturn this.docs[itemId] as Item;\n\t}\n\n\tpublic executeAction<A extends Action>(action: A, sideEffect = false): A {\n\t\taction.run(this);\n\t\treturn action;\n\t}\n}\n\nexport default Store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Store.ts","import { action } from 'mobx';\nimport Store from 'shared/Store';\n\nexport type ActionsType =\n\t'createSession' | 'updateSessionName' | 'updateDoc' |\n\t'updateUserName' | 'addSession' | 'createDoc' | 'addItem' | 'removeItem';\n\nabstract class IAction {\n\tpublic type: ActionsType;\n\tprotected store!: Store;\n\n\tconstructor(type: ActionsType) {\n\t\tthis.type = type;\n\t}\n\n\tpublic run(store: Store) {\n\t\tthis.store = store;\n\t\taction(this.type, () => this.execute())();\n\t}\n\n\tprotected abstract execute(): boolean;\n}\n\nexport default IAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/Action.ts","import { IDoc } from 'shared/models/Doc';\nimport docClass from 'shared/models/docClass';\nimport Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateDoc<D extends IDoc> extends Action {\n\tprivate row: D;\n\tprivate sessionId: string;\n\n\tconstructor(row: D, sessionId: string) {\n\t\tsuper('createDoc');\n\n\t\tthis.row = row;\n\t\tthis.sessionId = sessionId;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = docClass[this.row.type].instantiate(this.store, this.store.crdts[this.sessionId], this.row);\n\t\tthis.store.addDoc(doc);\n\n\t\tif (doc instanceof Session && !this.store.sessionList.includes(this.row.id)) {\n\t\t\tthis.store.sessionList.push(this.row.id);\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default CreateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateDoc.ts","import Session from 'shared/models/Session';\n\nimport Action from './Action';\n\nclass CreateSession extends Action {\n\tprivate id: string;\n\tprivate name: string;\n\tprivate ownerId: string;\n\n\tconstructor(id: string, name: string, ownerId: string) {\n\t\tsuper('createSession');\n\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t}\n\n\tprotected execute() {\n\t\tif (!this.store.crdts[this.id]) {\n\t\t\tthis.store.createCRDT(this.id);\n\t\t}\n\t\tthis.store.updating[this.id] = true;\n\t\tconst session = new Session(this.store, this.store.crdts[this.id], this.id, this.name, this.ownerId);\n\t\tdelete this.store.updating[this.id];\n\t\tthis.store.addDoc(session);\n\t\tthis.store.sessionList.push(this.id);\n\t\treturn true;\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/CreateSession.ts","import { Changed } from 'crdt';\n\nimport { IDoc } from 'shared/models/Doc';\nimport Action from './Action';\n\nclass UpdateDoc extends Action {\n\tprivate docId: string;\n\tprivate changes: Changed<IDoc>;\n\n\tconstructor(docId: string, changes: Changed<IDoc>) {\n\t\tsuper('updateDoc');\n\n\t\tthis.docId = docId;\n\t\tthis.changes = changes;\n\t}\n\n\tprotected execute() {\n\t\tconst doc = this.store.getDoc(this.docId);\n\n\t\tfor (const key in this.changes) {\n\t\t\t(doc as any)[key] = (this.changes as any)[key];\n\t\t}\n\n\t\tthis.store.applyPendingSeqAction();\n\n\t\treturn true;\n\t}\n}\n\nexport default UpdateDoc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/actions/UpdateDoc.ts","import * as React from 'react';\nimport ButtonPlugin from 'shared/spur/ButtonPlugin';\nimport { Pdiv } from 'shared/spur/Factory';\nimport { SpurPointerEvent } from 'spur-events';\nimport './Button.less';\n\nexport interface IButtonClass<P> {\n\tnew (props?: Props<P>, context?: any): Button<P>;\n\tprototype: Button<P>;\n}\n\nexport type Props<P = {}> = {\n\trepeat?: boolean,\n\tdisabled?: boolean,\n\tclassName?: string,\n\tstyle?: React.CSSProperties,\n\telementRef?: (ref: HTMLDivElement | null) => void,\n\tonTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n\tonDoubleTap?: (component: Button<P>, e: SpurPointerEvent) => void,\n} & P;\n\nclass Button<P = Props> extends React.PureComponent<Props<P>> {\n\tprivate plugins: { button: ButtonPlugin };\n\tpublic div: HTMLDivElement | null = null;\n\n\tconstructor(props: Props<P>, context: any) {\n\t\tsuper(props, context);\n\n\t\tconst button = new ButtonPlugin();\n\t\tthis.plugins = { button };\n\t\tbutton.setEnable(!props.disabled);\n\t\tbutton.repeat = !!props.repeat;\n\n\t\tif (this.props.onTap) { button.on('tap', this.onTap); }\n\t\tif (this.props.onDoubleTap) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: Props<P>) {\n\t\tconst button = this.plugins.button;\n\t\tbutton.setEnable(!nextProps.disabled);\n\t\tbutton.repeat = !!nextProps.repeat;\n\n\t\tif (nextProps.onTap && !button.hasListener('tap')) { button.on('tap', this.onTap); }\n\t\tif (nextProps.onDoubleTap && !button.hasListener('doubleTap')) { button.on('doubleTap', this.onDoubleTap); }\n\t}\n\n\tprivate onTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onTap!(this, e);\n\t}\n\n\tprivate onDoubleTap = (e: SpurPointerEvent) => {\n\t\tthis.props.onDoubleTap!(this, e);\n\t}\n\n\tprivate onRef = (div: HTMLDivElement | null) => {\n\t\tthis.div = div;\n\t\tif (this.props.elementRef) { this.props.elementRef(div); }\n\t}\n\n\tpublic render() {\n\t\tconst { className, disabled, children, style } = this.props;\n\n\t\tconst cn =\n\t\t\t'button' +\n\t\t\t(className ? ' ' + className : '') +\n\t\t\t(disabled ? ' disabled' : '');\n\n\t\tconst props = {\n\t\t\tclassName: cn,\n\t\t\telementRef: this.onRef,\n\t\t\tplugins: this.plugins,\n\t\t\tstyle\n\t\t};\n\n\t\treturn React.createElement(Pdiv, props, children);\n\t}\n}\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Button.tsx","import { observer } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\n\nexport type Props = {\n\tsessionId: string,\n\tonEnterSession(sessionId: string): void\n};\n\ntype State = {\n\tinfo: boolean\n};\n\n@observer\nclass SessionItem extends React.Component<Props, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tconstructor(props: Props, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { info: false };\n\t}\n\n\tprivate enterSession = () => {\n\t\tthis.props.onEnterSession(this.props.sessionId);\n\t}\n\n\tprivate displayInfo = () => {\n\t\tthis.setState({ info: !this.state.info });\n\t}\n\n\tpublic render() {\n\t\tconst { sessionId } = this.props;\n\t\tconst { info } = this.state;\n\t\tconst store = this.context.store;\n\t\tconst session = store.getSession(sessionId);\n\n\t\treturn (\n\t\t\t<Button className={ 'SessionItem' + (info ? ' SessionItem_info' : '') } onTap={ this.enterSession }>\n\t\t\t\t<div>{ session.name }</div>\n\t\t\t\t<Button onTap={ this.displayInfo }>Info</Button>\n\t\t\t\t{ info && (\n\t\t\t\t\t<div className='SessionItem__info'>\n\t\t\t\t\t\t<div className='user-select'>{ session.id }</div>\n\t\t\t\t\t\t<QRCode value={ session.id } size={ 256 } />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t<div className='SessionItem__user-list'>\n\t\t\t\t{\n\t\t\t\t\tsession.userIds.map(userId =>\n\t\t\t\t\t\t<div className='SessionItem__user' key={ userId }>\n\t\t\t\t\t\t\t{ store.getUser(userId).name }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<div className='SessionItem__item-count'>{ session.itemIds.length }</div>\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default SessionItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionItem.tsx","import * as debug from 'debug-logger';\nimport * as Instascan from 'instascan';\nimport * as React from 'react';\nconst log = debug('swift:SessionScanner');\n\nexport type Props = {\n\tonSessionScanned: (sessionId: string) => void\n};\n\nclass SessionScanner extends React.PureComponent<Props> {\n\tprivate videoElt: HTMLVideoElement | null = null;\n\tprivate scanner: any;\n\n\tpublic componentDidMount () {\n\t\tthis.scanner = new Instascan.Scanner({ video: this.videoElt, mirror: false });\n\t\tthis.scanner.addListener('scan', (content: string) => {\n\t\t\tthis.scanner.stop();\n\t\t\tthis.props.onSessionScanned(content);\n\t\t});\n\t}\n\n\tpublic scan = (): Promise<void> => {\n\t\treturn Instascan.Camera.getCameras().then((cameras: any[]) => {\n\t\t\tif (cameras.length > 0) {\n\t\t\t\tthis.scanner.start(cameras[1] || cameras[0]);\n\t\t\t} else {\n\t\t\t\tlog('No cameras found.');\n\t\t\t\tthrow new Error('No cameras found.');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stop = () => {\n\t\tthis.scanner.stop();\n\t}\n\n\tpublic render () {\n\t\treturn (\n\t\t\t<video ref={ ref => this.videoElt = ref } className='session-scanner' />\n\t\t);\n\t}\n}\n\nexport default SessionScanner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/SessionScanner.tsx","import * as React from 'react';\n\nimport Button, { IButtonClass } from 'shared/components/Button';\n\nimport './Tabs.less';\n\nexport type LabelProps = { onUpdate: () => void };\n\ntype TabButtonProps = { tabId: string };\nconst TabButton = Button as IButtonClass<TabButtonProps>;\n\nconst INDI_WIDTH = 100;\n\nexport type Props = {\n\ttabs: Array<Array<{ tabId: string, Label: React.StatelessComponent<LabelProps> }>>,\n\tcategoryIndex: number,\n\tcurrentTabId: string,\n\tonTabSelect(tabId: string | string): void\n};\n\nclass Tabs extends React.PureComponent<Props> {\n\tprivate indicator: HTMLDivElement | null = null;\n\tprivate tabsRef: { [tabId: string]: Button<TabButtonProps> | null } = {};\n\tprivate tabWidth: { [tabId: string]: number } = {};\n\tprivate labelUpdated = false;\n\n\tpublic componentDidMount() {\n\t\tthis.positionIndicator();\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tthis.positionIndicator();\n\t}\n\n\tprivate positionIndicator = () => {\n\t\tif (this.labelUpdated) {\n\t\t\tthis.labelUpdated = false;\n\t\t\tfor (const tabId in this.tabsRef) {\n\t\t\t\tconst button = this.tabsRef[tabId];\n\t\t\t\tif (button) {\n\t\t\t\t\tthis.tabWidth[tabId] = button.div!.clientWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst { currentTabId, tabs, categoryIndex } = this.props;\n\t\tlet fullWidth = 0;\n\t\tlet passedCurrentTab = false;\n\t\tlet beforeWidth = 0;\n\t\tfor (const { tabId } of tabs[categoryIndex]) {\n\t\t\tif (tabId === currentTabId) { passedCurrentTab = true; }\n\t\t\tconst width = this.tabWidth[tabId];\n\t\t\tif (!passedCurrentTab) {\n\t\t\t\tbeforeWidth += width;\n\t\t\t}\n\t\t\tfullWidth += width;\n\t\t}\n\t\tbeforeWidth -= fullWidth / 2;\n\n\t\tthis.indicator!.style.transform =\n\t\t\t`translate3d(${beforeWidth + INDI_WIDTH / 2}px, 0, 0) scaleX(${ this.tabWidth[currentTabId] / INDI_WIDTH })`;\n\t}\n\n\tprivate selectTab = (button: Button<TabButtonProps>) => {\n\t\tthis.props.onTabSelect(button.props.tabId);\n\t}\n\n\tprivate onLabelUpdate = () => {\n\t\tthis.labelUpdated = true;\n\t}\n\n\tpublic render() {\n\t\tconst { currentTabId, tabs, categoryIndex } = this.props;\n\n\t\treturn (\n\t\t\t<div className='Tabs'>\n\t\t\t\t<div className='Tabs__container' style={ { transform: `translate3d(0, ${ categoryIndex * -100 }%,0)` } }>\n\t\t\t\t\t{\n\t\t\t\t\t\ttabs.map((category, i) =>\n\t\t\t\t\t\t\t<div className='Tabs__category' key={ i }>\n\t\t\t\t\t\t\t\t<div className='Tabs__category_container' key={ i }>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcategory.map(({ tabId, Label }) =>\n\t\t\t\t\t\t\t\t\t\t<TabButton\n\t\t\t\t\t\t\t\t\t\t\tkey={ tabId }\n\t\t\t\t\t\t\t\t\t\t\tclassName={ 'Tabs__tab' + (currentTabId === tabId ? ' Tabs__tab_active' : '') }\n\t\t\t\t\t\t\t\t\t\t\tonTap={ this.selectTab }\n\t\t\t\t\t\t\t\t\t\t\ttabId={ tabId }\n\t\t\t\t\t\t\t\t\t\t\tref={ ref => this.tabsRef[tabId] = ref }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Label onUpdate={ this.onLabelUpdate } />\n\t\t\t\t\t\t\t\t\t\t</TabButton>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='Tabs__indicator' ref={ ref => this.indicator = ref } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/Tabs.tsx","import * as React from 'react';\n\nimport './TextField.less';\n\nexport type Props = {\n\tlabel: string,\n\tplaceholder: string,\n\tclassName?: string\n};\n\nclass TextField extends React.PureComponent<Props> {\n\tprivate mainDiv: HTMLDivElement | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\tprivate content: string = '';\n\n\tconstructor(props: Props, context: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = { hasContent: false };\n\t}\n\n\tprivate onChange = () => {\n\t\tthis.content = this.input!.value;\n\t}\n\n\tprivate onMainRef = (div: HTMLDivElement | null) => {\n\t\tthis.mainDiv = div;\n\t}\n\n\tprivate onBlur = () => {\n\t\tthis.mainDiv!.className = this.generateClassName();\n\t}\n\n\tprivate onInputRef = (input: HTMLInputElement | null) => {\n\t\tthis.input = input;\n\t}\n\n\tprivate generateClassName(): string {\n\t\treturn 'TextField' + (this.content.length ? ' TextField_hasContent' : '');\n\t}\n\n\tpublic getValue() { return this.content; }\n\n\tpublic render() {\n\t\tconst { label, placeholder } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ this.generateClassName() } ref={ this.onMainRef }>\n\t\t\t\t<div className='TextField__label'>{ label }</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='TextField__input'\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tref={ this.onInputRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/TextField.tsx","import * as PropTypes from 'prop-types';\nimport Store from './Store';\n\nexport type Context = {\n\tstore: Store\n};\n\nexport const contextTypes: {[T in keyof Context]: PropTypes.Requireable<any>} = {\n\tstore: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/context.ts","import { Atom } from 'mobx';\n\nimport Store from 'shared/Store';\n\nimport { Doc as CrdtDoc, Row as CrdtDow } from 'crdt';\n\nexport type DocType = 'session' | 'user' | 'item';\n\nexport function linked(docPrototype: any, property: string) {\n\tconst atom = new Atom(property);\n\n\tconst getter = function(this: Doc) {\n\t\tatom.reportObserved();\n\t\treturn (this as any).__data[property];\n\t};\n\n\tconst setter = function(this: Doc, val: any) {\n\t\tconst value = (this as any).__data[property];\n\t\tif (value === val) { return; }\n\t\t(this as any).__data[property] = val;\n\t\tif (this.row && this.row.get(property) !== val) {\n\t\t\tthis.row.set(property, val);\n\t\t}\n\t\tatom.reportChanged();\n\t};\n\n\tif (delete docPrototype[property]) {\n\t\tObject.defineProperty(docPrototype, property, {\n\t\t\tget: getter,\n\t\t\tset: setter\n\t\t});\n\t}\n}\n\nexport interface IDoc {\n\tid: string;\n\ttype: DocType;\n}\n\nabstract class Doc<M extends IDoc = any> {\n\tprotected __data = {};\n\t@linked public readonly id: string;\n\t@linked public readonly type: DocType;\n\tpublic row!: CrdtDow<M>;\n\tprotected store: Store;\n\tpublic changes: {[K in keyof M]?: M[K]};\n\n\tconstructor(store: Store, id: string, type: DocType) {\n\t\tthis.store = store;\n\t\tthis.id = id;\n\t\tthis.type = type;\n\t\tthis.changes = {};\n\t}\n\n\tprotected initCRDT(crdt: CrdtDoc): void {\n\t\tthis.row = crdt.get(this.id);\n\t\tif (!this.row.get('type')) {\n\t\t\tthis.row.set(this.toModel());\n\t\t}\n\n\t\tthis.row.on('change', (changed) => {\n\t\t\tObject.assign(this.changes, changed);\n\t\t});\n\t}\n\n\tprotected createDoc<O>(obj: O): O & IDoc {\n\t\treturn Object.assign(obj, { id: this.id, type: this.type });\n\t}\n\n\tpublic abstract toModel(): M;\n}\n\nexport default Doc;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Doc.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport type TextItem = { type: 'text', content: string };\n\nexport type ItemContent = TextItem;\n\nexport interface IItem extends IDoc {\n\tcreatorId: string;\n\tcreationDate: string;\n\titemContent: ItemContent;\n}\n\nclass Item extends Doc<IItem> {\n\t@linked public creatorId: string;\n\t@linked public creationDate: string;\n\t@linked public itemContent: ItemContent;\n\n\tconstructor(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, id: string, creatorId: string, creationDate: string, itemContent: ItemContent\n\t) {\n\t\tsuper(store, id, 'item');\n\t\tthis.creatorId = creatorId;\n\t\tthis.creationDate = creationDate;\n\t\tthis.itemContent = itemContent;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(\n\t\tstore: Store, crdt: CrdtDoc<IDoc>, { id, creatorId, creationDate, itemContent }: IItem\n\t): Item {\n\t\treturn new Item(store, crdt, id, creatorId, creationDate, itemContent);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tcreationDate: this.creationDate,\n\t\t\tcreatorId: this.creatorId,\n\t\t\titemContent: this.itemContent\n\t\t});\n\t}\n}\n\nexport default Item;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Item.ts","import { Doc as CRDTDoc } from 'crdt';\nimport { observable } from 'mobx';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport createSeq from './createSeq';\n\nimport Store from 'shared/Store';\n\nexport interface ISession extends IDoc {\n\townerId: string;\n\tname: string;\n}\n\nclass Session extends Doc<ISession> {\n\t@linked public readonly ownerId: string;\n\t@linked public name: string;\n\t@observable public userIds: string[];\n\t@observable public itemIds: string[];\n\n\tconstructor(store: Store, crdt: CRDTDoc<IDoc>, id: string, name: string, ownerId: string) {\n\t\tsuper(store, id, 'session');\n\t\tthis.name = name;\n\t\tthis.ownerId = ownerId;\n\t\tthis.userIds = [];\n\t\tthis.itemIds = [];\n\n\t\tthis.initCRDT(crdt);\n\t\tcreateSeq(crdt, store, 'type', 'item', this.itemIds, row => row.get('id'));\n\t\tcreateSeq(crdt, store, 'type', 'user', this.userIds, row => row.get('id'));\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CRDTDoc<IDoc>, { id, name, ownerId }: ISession): Session {\n\t\treturn new Session(store, crdt, id, name, ownerId);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\townerId: this.ownerId,\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default Session;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/Session.ts","import { Doc as CrdtDoc } from 'crdt';\nimport Doc, { IDoc, linked } from './Doc';\n\nimport Store from 'shared/Store';\n\nexport interface IUser extends IDoc {\n\tname: string;\n}\n\nclass User extends Doc<IUser> {\n\t@linked public name: string;\n\n\tconstructor(store: Store, crdt: CrdtDoc, id: string, name: string) {\n\t\tsuper(store, id, 'user');\n\t\tthis.name = name;\n\t\tthis.initCRDT(crdt);\n\t}\n\n\tpublic static instantiate(store: Store, crdt: CrdtDoc<IDoc>, { id, name }: IUser): User {\n\t\treturn new User(store, crdt, id, name);\n\t}\n\n\tpublic toModel() {\n\t\treturn this.createDoc({\n\t\t\tname: this.name\n\t\t});\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/User.ts","import { Doc as CRDTDoc, Row } from 'crdt';\nimport { IDoc } from 'shared/models/Doc';\nimport Store from 'shared/Store';\n\nexport default function createSeq<D extends IDoc, K extends keyof D, L>(\n\tcrdt: CRDTDoc<D>, store: Store, key: K, value: D[K], list: L[], rowToValue: (row: Row<D>) => L\n) {\n\tconst seq = crdt.createSeq(key, value);\n\n\tseq.forEach(row => list.push(rowToValue(row)));\n\n\tseq.on('add', row => {\n\t\tconst index = seq.indexOf(row);\n\t\tif (index !== -1) {\n\t\t\tconst v = rowToValue(row);\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 0, v);\n\t\t\t});\n\t\t}\n\t});\n\n\tseq.on('remove', row => {\n\t\tconst v = rowToValue(row);\n\t\tconst index = list.indexOf(v);\n\t\tif (index !== -1) {\n\t\t\tstore.pendingSeqActions.push(() => {\n\t\t\t\tlist.splice(index, 1);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/createSeq.ts","import { Doc as CRDTDoc } from 'crdt';\n\nimport Doc, { DocType, IDoc } from './Doc';\nimport Item from './Item';\nimport Session from './Session';\nimport User from './User';\n\nimport Store from 'shared/Store';\n\nconst docClass: {[D in DocType]: {\n\tnew(...args: any[]): Doc;\n\tinstantiate(store: Store, crdt: CRDTDoc<IDoc>, data: any): Doc;\n}} = {\n\tsession: Session,\n\tuser: User,\n\titem: Item\n};\n\nexport default docClass;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/models/docClass.ts","import { addListener, removeListener, SpurEvent, SpurPointerEvent } from 'spur-events';\nimport interactionLock from './interactionLock';\nimport Plugin from './Plugin';\n\ninterface IButtonPlugin {\n\tcancel(): void;\n\tDOMNode: HTMLElement | null;\n}\n\nexport const current: {\n\tplugins: IButtonPlugin[],\n\ttapFired: boolean,\n\tdoubleTapFired: boolean,\n\tlongTapFired: boolean\n} = { plugins: [], tapFired: false, doubleTapFired: false, longTapFired: false };\n\naddListener(window, 'pointerup', function(e: SpurPointerEvent) {\n\tcurrent.plugins = [];\n});\n\nfunction onLock(DOMNode: HTMLElement) {\n\tif (current.plugins.length) {\n\t\tcurrent.plugins.forEach(plugin => {\n\t\t\tif (!current.longTapFired || DOMNode !== plugin.DOMNode) { plugin.cancel(); }\n\t\t});\n\t\tcurrent.plugins = [];\n\t}\n}\n\ninteractionLock.on('element-lock', onLock);\ninteractionLock.on('container-lock', onLock);\n\ntype Coords = { x: number, y: number };\n\nconst LONG_TAP_TIMEOUT = 700;\nconst DOUBLE_TAP_TIMEOUT = 300;\nconst MIN_TAP_DISTANCE = 15;\n\nexport type Events = {\n\tpress: Coords,\n\trelease: boolean,\n\ttap: SpurPointerEvent,\n\tdoubleTap: SpurPointerEvent,\n\tlongTap: Coords\n};\n\nclass ButtonPlugin extends Plugin<Events> {\n\tprivate enable = true;\n\tprivate lockId: number | null = null;\n\tprivate lastTap = 0;\n\tprivate currentTap: SpurPointerEvent | null = null;\n\tprivate pointerId: string = '';\n\tprivate cancelled: boolean = false;\n\tprivate longTapTimeout: number = 0;\n\tprivate boundingBox = { left: 0, top: 0, width: 0, height: 0 };\n\tpublic DOMNode: HTMLElement | null = null;\n\tprivate minBoxWidth = MIN_TAP_DISTANCE;\n\tprivate minBoxHeight = MIN_TAP_DISTANCE;\n\tprivate isPressed = false;\n\tprivate repeatTimeout: number = 0;\n\tprivate repeatCount = 0;\n\tpublic repeat = false;\n\n\tconstructor(options: { repeat?: boolean } = {}) {\n\t\tsuper();\n\n\t\tthis.repeat = !!options.repeat;\n\t}\n\n\tpublic setMinBoxDimensions(width: number, height: number) {\n\t\tthis.minBoxWidth = Math.max(width, MIN_TAP_DISTANCE);\n\t\tthis.minBoxHeight = Math.max(height, MIN_TAP_DISTANCE);\n\t}\n\n\tprivate press(coords: Coords) {\n\t\tthis.isPressed = true;\n\t\tif (this.repeat) {\n\t\t\tthis.repeatCount = 0;\n\t\t\tthis.repeatTap();\n\t\t}\n\t\tthis.emit('press', coords);\n\t}\n\n\tprivate release(cancelled: boolean) {\n\t\tthis.isPressed = false;\n\t\tthis.emit('release', cancelled);\n\t}\n\n\tprivate tap(e: SpurPointerEvent) {\n\t\tthis.emit('tap', e);\n\t}\n\n\tprivate doubleTap(e: SpurPointerEvent) {\n\t\tthis.emit('doubleTap', e);\n\t}\n\n\tprivate longTap(coords: Coords) {\n\t\tthis.emit('longTap', coords);\n\t}\n\n\tpublic setEnable(enable: boolean) {\n\t\tthis.enable = enable;\n\t}\n\n\tprivate reset() {\n\t\tif (this.lockId) {\n\t\t\tinteractionLock.releaseLock(this.lockId);\n\t\t\tthis.lockId = null;\n\t\t}\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t\twindow.clearTimeout(this.longTapTimeout);\n\t\tremoveListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\tremoveListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate repeatTap() {\n\t\tconst time = this.repeatCount === 0 ? 300 : 20;\n\n\t\tthis.repeatTimeout = window.setTimeout(() => {\n\t\t\tthis.repeatCount += 1;\n\t\t\tthis.tap(this.currentTap!);\n\t\t\tthis.repeatTap();\n\t\t}, time);\n\t}\n\n\tpublic cancel() {\n\t\tif (this.isPressed) {\n\t\t\tthis.cancelled = true;\n\t\t\tthis.release(true);\n\t\t}\n\n\t\tthis.reset();\n\t}\n\n\tprivate onPointerMove(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId) { return; }\n\t\tif (e.clientX < this.boundingBox.left ||\n\t\t\te.clientX > this.boundingBox.left + this.boundingBox.width ||\n\t\t\te.clientY < this.boundingBox.top ||\n\t\t\te.clientY > this.boundingBox.top + this.boundingBox.height) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tprivate onPointerDown(e: SpurPointerEvent) {\n\t\tif (!this.enable || (e.originalEvent as MouseEvent).which === 3 || interactionLock.isLocked(e.target as Node)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrent.plugins.push(this);\n\t\tthis.pointerId = e.pointerId;\n\n\t\tthis.cancelled = false;\n\t\tconst startTap = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t};\n\n\t\tconst target = e.target;\n\n\t\tconst boundingBox = this.DOMNode!.getBoundingClientRect();\n\t\tthis.boundingBox.top = boundingBox.top;\n\t\tthis.boundingBox.left = boundingBox.left;\n\t\tif (boundingBox.width < this.minBoxWidth) {\n\t\t\tthis.boundingBox.width = this.minBoxWidth;\n\t\t\tthis.boundingBox.left -= (this.minBoxWidth - boundingBox.width) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.width = boundingBox.width;\n\t\t}\n\n\t\tif (boundingBox.height < this.minBoxHeight) {\n\t\t\tthis.boundingBox.height = this.minBoxHeight;\n\t\t\tthis.boundingBox.top -= (this.minBoxHeight - boundingBox.height) / 2;\n\t\t} else {\n\t\t\tthis.boundingBox.height = boundingBox.height;\n\t\t}\n\n\t\tif (this.repeat) {\n\t\t\tthis.currentTap = new SpurEvent(e.type) as SpurPointerEvent;\n\t\t\tthis.currentTap = Object.assign(this.currentTap, e); // tslint:disable-line: prefer-object-spread\n\t\t}\n\t\tthis.press(startTap);\n\n\t\tcurrent.tapFired = current.doubleTapFired = current.longTapFired = false;\n\t\tif (this.hasListener('longTap') && !this.repeat) {\n\t\t\twindow.clearTimeout(this.longTapTimeout);\n\t\t\tthis.longTapTimeout = window.setTimeout(() => {\n\t\t\t\tthis.lockId = interactionLock.requestLockOn(target as Node);\n\t\t\t\tif (this.lockId) {\n\t\t\t\t\tthis.longTap(startTap);\n\t\t\t\t\tcurrent.longTapFired = true;\n\t\t\t\t}\n\t\t\t}, LONG_TAP_TIMEOUT);\n\t\t}\n\n\t\taddListener(document, 'pointermove', this.onPointerMove, { context: this });\n\t\taddListener(document, 'pointerup', this.onPointerUp, { context: this });\n\t}\n\n\tprivate onPointerUp(e: SpurPointerEvent) {\n\t\tif (e.pointerId !== this.pointerId || this.cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.release(false);\n\n\t\tif (!current.longTapFired) {\n\t\t\tconst now = Date.now();\n\t\t\tconst tapDiff = now - this.lastTap;\n\t\t\tthis.lastTap = now;\n\n\t\t\tif (!current.tapFired && this.hasListener('tap')) {\n\t\t\t\tcurrent.tapFired = true;\n\t\t\t\tthis.tap(e);\n\t\t\t}\n\n\t\t\tif (tapDiff < DOUBLE_TAP_TIMEOUT) {\n\t\t\t\tthis.lastTap = 0;\n\t\t\t\tif (!current.doubleTapFired && this.hasListener('doubleTap')) {\n\t\t\t\t\tcurrent.doubleTapFired = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.doubleTap(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic componentDidMount(DOMNode: HTMLElement) {\n\t\tthis.DOMNode = DOMNode;\n\t\taddListener(this.DOMNode, 'pointerdown', this.onPointerDown, { context: this });\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tremoveListener(this.DOMNode!, 'pointerdown', this.onPointerDown, { context: this });\n\t\tthis.reset();\n\t\tthis.DOMNode = null;\n\t\twindow.clearTimeout(this.repeatTimeout);\n\t}\n}\n\nexport default ButtonPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/ButtonPlugin.ts","import * as React from 'react';\nimport Plugin from './Plugin';\n\nexport type Tag = keyof JSX.IntrinsicElements;\n\nexport type Props<E extends HTMLElement = HTMLElement>\n\t= React.HTMLAttributes<E> & {\n\tplugins: {[pluginId: string]: Plugin},\n\telementRef?: (instance: E) => any\n};\n\nexport interface IPlugComponent<E extends HTMLElement = HTMLElement>\n\textends React.Component<Props<E>, null> {\n\telement: E;\n}\n\nexport interface IPlugComponentClass<E extends HTMLElement = HTMLElement> {\n\tnew(props: Props<E>, context: any): IPlugComponent<E>;\n}\n\nexport abstract class PlugComponent<P extends { plugins: {[pluginId: string]: Plugin} }, S = {}>\n\textends React.PureComponent<P, S> {\n\n\tconstructor(props: P, context: any) {\n\t\tsuper(props, context);\n\n\t\tfor (const id in props.plugins) {\n\t\t\tconst plugin = props.plugins[id];\n\t\t\tplugin.setComponentInstance(this);\n\t\t}\n\t}\n\n\tpublic componentWillMount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id] as Plugin;\n\t\t\tplugin.componentWillMount();\n\t\t}\n\t}\n\n\tpublic componentDidMountWithElement(element: HTMLElement) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidMount(element);\n\t\t}\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillReceiveProps(nextProps);\n\t\t}\n\t}\n\n\tpublic componentWillUpdate(nextProps: P) {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUpdate(nextProps);\n\t\t}\n\t}\n\n\tpublic componentDidUpdate() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentDidUpdate();\n\t\t}\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tconst plugins = this.props.plugins;\n\t\tfor (const id in plugins) {\n\t\t\tconst plugin = plugins[id];\n\t\t\tplugin.componentWillUnmount();\n\t\t\tplugin.removeEventListeners();\n\t\t}\n\t}\n}\n\nexport function createPlugTagComponent<E extends HTMLElement = HTMLElement>(tag: Tag) {\n\n\t// tslint:disable:max-classes-per-file\n\treturn class PlugTagComponent extends PlugComponent<Props<E>> {\n\t\tpublic element: E | null = null;\n\n\t\tconstructor(props: Props<E>, context: any) {\n\t\t\tsuper(props, context);\n\n\t\t\tthis.onRef = this.onRef.bind(this);\n\t\t}\n\n\t\tpublic componentDidMount() {\n\t\t\tthis.componentDidMountWithElement(this.element!);\n\t\t}\n\n\t\tprivate onRef(instance: E) {\n\t\t\tthis.element = instance;\n\t\t\tif (this.props.elementRef) {\n\t\t\t\tthis.props.elementRef(instance);\n\t\t\t}\n\t\t}\n\n\t\tpublic render() {\n\t\t\tconst ThisTag = tag as any;\n\t\t\tconst { children, plugins, elementRef, ...props } = this.props;\n\t\t\treturn(\n\t\t\t\t<ThisTag { ...props } ref={ this.onRef }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ThisTag>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport const Pdiv = createPlugTagComponent<HTMLDivElement>('div');\nexport const Pspan = createPlugTagComponent<HTMLSpanElement>('span');\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Factory.tsx","abstract class Plugin<P extends {[eventName: string]: any} = {}> {\n\tpublic setComponentInstance(component: React.Component<any, any>): void {\n\t\t//\n\t}\n\n\tpublic componentDidMount(Element: HTMLElement): void {\n\t\t//\n\t}\n\n\tpublic componentWillMount(): void {\n\t\t//\n\t}\n\n\tpublic componentWillReceiveProps(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentWillUpdate(nextProps: any): void {\n\t\t//\n\t}\n\n\tpublic componentDidUpdate(): void {\n\t\t//\n\t}\n\n\tpublic componentWillUnmount(): void {\n\t\t//\n\t}\n\n\tprivate listeners: {[T in keyof P]: Array<{ callback: (arg: P[T]) => void, context: any }>} = {} as any;\n\n\tpublic on<T extends keyof P, C>(eventName: T, callback: (this: C, arg: P[T]) => void, context: C | this = this) {\n\t\tif (eventName in this.listeners) {\n\t\t\tthis.listeners[eventName].push({ callback, context });\n\t\t} else {\n\t\t\tthis.listeners[eventName] = [{ callback, context }];\n\t\t}\n\t}\n\n\tpublic removeEventListeners() {\n\t\tthis.listeners = {} as any;\n\t}\n\n\tprotected emit<T extends keyof P>(eventName: T, arg: P[T]) {\n\t\tconst listeners = this.listeners[eventName];\n\t\tif (listeners) {\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i += 1) {\n\t\t\t\tconst listener = listeners[i];\n\t\t\t\tlistener.callback.call(listener.context, arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hasListener(eventName: keyof P): boolean {\n\t\treturn !!this.listeners[eventName];\n\t}\n}\n\nexport default Plugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/Plugin.ts","import { EventEmitter } from 'events';\n\nclass InteractionLock extends EventEmitter {\n\tprivate lockNodes: { [lockId: number]: Node } = {};\n\tprivate lockContainerNodes: { [lockId: number]: Node } = {};\n\tprivate lockId = 0;\n\n\tpublic isLocked(DOMNode: Node): boolean {\n\t\tfor (const id in this.lockNodes) {\n\t\t\tlet node: Node | null = this.lockNodes[id];\n\t\t\twhile (node !== null) {\n\t\t\t\tif (node === DOMNode) { return true; }\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tfor (const id in this.lockContainerNodes) {\n\t\t\tconst container = this.lockContainerNodes[id];\n\t\t\tlet parent: Node | null = DOMNode;\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (parent === container) { return true; }\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic requestLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockNodes[this.lockId] = DOMNode;\n\t\tthis.emit('element-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic requestContainerLockOn(DOMNode: Node): number | null {\n\t\tif (this.isLocked(DOMNode)) { return null; }\n\n\t\tthis.lockId += 1;\n\t\tthis.lockContainerNodes[this.lockId] = DOMNode;\n\t\tthis.emit('container-lock', DOMNode);\n\t\treturn this.lockId;\n\t}\n\n\tpublic releaseLock(id: number) {\n\t\tconst DOMNode = this.lockNodes[id] || this.lockContainerNodes[id];\n\t\tif (DOMNode) {\n\t\t\tdelete this.lockNodes[id];\n\t\t\tdelete this.lockContainerNodes[id];\n\t\t\tthis.lockId -= 1;\n\t\t\tthis.emit('unlock', DOMNode);\n\t\t}\n\t}\n}\n\nexport default new InteractionLock();\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/spur/interactionLock.ts","import * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateSessionAction from 'shared/actions/CreateSession';\n\nimport Button from 'shared/components/Button';\nimport TextField from 'shared/components/TextField';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './CreateSession.less';\n\nclass CreateSession extends React.PureComponent<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate sessionNameField!: TextField | null;\n\n\tprivate createSession = () => {\n\t\tconst value = this.sessionNameField!.getValue();\n\t\tif (value === '') { return; }\n\n\t\tconst sessionId = 'session-' + uuid();\n\t\tconst store = this.context.store;\n\t\tstore.openSession(sessionId);\n\t\tstore.executeAction(new CreateSessionAction(\n\t\t\tsessionId,\n\t\t\tvalue,\n\t\t\tstore.userIdPerSessionId[sessionId]\n\t\t));\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div className='CreateSession'>\n\t\t\t\t<div className='view__explanation'>Create a session to allow another device to connect.</div>\n\t\t\t\t<form className='view__box' onSubmit={ this.createSession }>\n\t\t\t\t\t<div className='view__column'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel='choose a name for your session'\n\t\t\t\t\t\t\tplaceholder='My session'\n\t\t\t\t\t\t\tref={ ref => this.sessionNameField = ref }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='view__column CreateSession__create-column'>\n\t\t\t\t\t\t<Button className='action-button  CreateSession__Create' onTap={ this.createSession }>\n\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/CreateSession.tsx","import * as React from 'react';\n\nimport Button from 'shared/components/Button';\nimport SessionScanner from 'shared/components/SessionScanner';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './JoinSession.less';\n\ntype State = {\n\tisScanning: boolean\n};\n\nclass JoinSession extends React.PureComponent<TabComponentProps, State> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate scanner: SessionScanner | null = null;\n\tprivate input: HTMLInputElement | null = null;\n\n\tconstructor(props: TabComponentProps, context: Context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tisScanning: false\n\t\t};\n\t}\n\n\tprivate onSessionScanned = (sessionId: string) => {\n\t\tthis.setState({ isScanning: false });\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate stopScanning = () => {\n\t\tthis.setState({ isScanning: false }, () => this.scanner!.stop());\n\t}\n\n\tprivate startScanning = () => {\n\t\ttry {\n\t\t\tthis.scanner!.scan();\n\t\t\tthis.setState({ isScanning: true });\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\tprivate validateSession = () => {\n\t\tconst sessionId = this.input!.value;\n\t\tif (!sessionId) { return; }\n\t\tthis.join(sessionId);\n\t}\n\n\tprivate join(sessionId: string) {\n\t\tthis.context.store.join(sessionId).then(() => {\n\t\t\tthis.props.navigateToSession(sessionId);\n\t\t});\n\t}\n\n\tpublic render() {\n\t\tconst { isScanning } = this.state;\n\n\t\treturn (\n\t\t\t<div className={ 'JoinSession' + (isScanning ? ' JoinSession_scanning' : '') }>\n\t\t\t\t<div className='view__explanation'>Join an existing session by scanning its QR code or entering its ID.</div>\n\t\t\t\t<div className='view__box'>\n\t\t\t\t\t<div className='view__header'>Scan a QR Code</div>\n\t\t\t\t\t<Button onTap={ this.startScanning } className='action-button'>Start Scanning</Button>\n\t\t\t\t\t<div className='JoinSession__scanner'>\n\t\t\t\t\t\t<SessionScanner onSessionScanned={ this.onSessionScanned } ref={ ref => this.scanner = ref } />\n\t\t\t\t\t\t<Button onTap={ this.stopScanning } className='action-button JoinSession__StopScanning'>Stop Scanning</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form className='view__box' onSubmit={ this.validateSession }>\n\t\t\t\t\t<div className='view__header'>Enter a session ID</div>\n\t\t\t\t\t<input className='JoinSession__id-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t<Button onTap={ this.validateSession } className='action-button'>Join</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JoinSession;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/JoinSession.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\nimport * as uuid from 'uuid/v4';\n\nimport CreateDoc from 'shared/actions/CreateDoc';\nimport Button from 'shared/components/Button';\nimport { Context, contextTypes } from 'shared/context';\nimport { IItem } from 'shared/models/Item';\nimport { TabComponentProps } from 'shared/views/tabs';\n\nimport './SessionViewer.less';\n\n@observer\nclass SessionViewer extends React.Component<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\tprivate closingTimeout: number = -1;\n\tprivate input!: HTMLInputElement | null;\n\n\tpublic componentWillUnmount() {\n\t\twindow.clearTimeout(this.closingTimeout);\n\t}\n\n\tpublic open(sessionId: string) {\n\t\tthis.setState({ sessionId });\n\t}\n\n\tprivate addText = () => {\n\t\tconst value = this.input!.value;\n\t\tconst sessionId = this.props.sessionId;\n\t\tif (value === '' || !sessionId) { return; }\n\n\t\tconst itemId = 'item-' + uuid();\n\t\tthis.context.store.executeAction(new CreateDoc<IItem>({\n\t\t\tid: itemId,\n\t\t\ttype: 'item',\n\t\t\tcreatorId: this.context.store.userIdPerSessionId[sessionId],\n\t\t\tcreationDate: new Date().toISOString(),\n\t\t\titemContent: { type: 'text', content: value }\n\t\t}, sessionId));\n\t\tthis.input!.value = '';\n\t}\n\n\tprivate goBack = () => {\n\t\tthis.props.navigateToTab('sessions');\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst { sessionId } = this.props;\n\t\tconst session = sessionId && store.getSession(sessionId) || null;\n\n\t\treturn (\n\t\t\t<div className='SessionViewer'>\n\t\t\t\t<div className='SessionViewer__header'>\n\t\t\t\t\t<Button className='SessionViewer__name'>{ session && session.name }</Button>\n\t\t\t\t\t<Button className='SessionViewer__back' onTap={ this.goBack }>Back</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className='SessionViewer__body'>\n\t\t\t\t{\n\t\t\t\t\tsession && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<div className='SessionItem__user-list'>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsession.userIds.map(userId =>\n\t\t\t\t\t\t\t\t\t<div className='SessionItem__user' key={ userId }>\n\t\t\t\t\t\t\t\t\t\t{ store.getUser(userId).name }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='SessionItem__item-list'>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsession.itemIds.map(itemId =>\n\t\t\t\t\t\t\t\t\t<div className='SessionItem__item' key={ itemId }>\n\t\t\t\t\t\t\t\t\t\t{ store.getItem(itemId).itemContent.content }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='SessionItem_add-text'>\n\t\t\t\t\t\t\t\t<input className='SessionItem_text-input' ref={ ref => this.input = ref } />\n\t\t\t\t\t\t\t\t<Button onTap={ this.addText }>Send text</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/SessionViewer.tsx","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport SessionItem from 'shared/components/SessionItem';\nimport { Context, contextTypes } from 'shared/context';\nimport { TabComponentProps } from 'shared/views/tabs';\n\n@observer\nclass Sessions extends React.Component<TabComponentProps> {\n\tpublic context!: Context;\n\tpublic static contextTypes = contextTypes;\n\n\tprivate onEnterSession = (sessionId: string) => {\n\t\tthis.props.navigateToSession(sessionId);\n\t}\n\n\tpublic render() {\n\t\tconst store = this.context.store;\n\t\tconst sessionList = store.sessionList;\n\n\t\treturn (\n\t\t\t<div className='Sessions'>\n\t\t\t\t{ sessionList.map(sessionId => <SessionItem\n\t\t\t\t\tsessionId={ sessionId }\n\t\t\t\t\tkey={ sessionId }\n\t\t\t\t\tonEnterSession={ this.onEnterSession }\n\t\t\t\t/>) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/Sessions.tsx","import { observer } from 'mobx-react';\n\nimport { Context, contextTypes } from 'shared/context';\n\nexport type TabId = 'sessions' | 'create' | 'join';\n\nexport type TabComponentProps = {\n\tnavigateToTab(tabId: TabId): void,\n\tnavigateToSession(sessionId: string): void,\n\tsessionId: string | null\n};\n\nimport { LabelProps } from 'shared/components/Tabs';\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\nconst SessionsLabel: React.StatelessComponent<LabelProps> = observer(function (\n\tthis: { context: Context }, props: LabelProps\n) {\n\tprops.onUpdate();\n\tconst sessions = this.context.store.sessionList;\n\treturn ('My sessions' + (sessions.length ? ` (${sessions.length})` : '' )) as any;\n});\nSessionsLabel.contextTypes = contextTypes;\n\nexport const TabMap: {[tabId in TabId]: React.StatelessComponent<LabelProps>}  = {\n\tsessions: SessionsLabel,\n\tcreate: () => 'Create Session' as any,\n\tjoin: () => 'Join Session' as any\n};\n\nexport const TabOrder: TabId[] = ['sessions', 'create', 'join'];\nexport const TabsInfo = TabOrder.map(tabId => ({ tabId, Label: TabMap[tabId] }));\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/views/tabs.tsx"],"sourceRoot":""}